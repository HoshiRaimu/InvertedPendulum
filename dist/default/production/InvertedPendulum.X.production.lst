

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 08 18:07:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F18857
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.35
    44                           ; Generated 13/04/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F18857 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  001C                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  018F                     	;# 
   173  0190                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0198                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  020C                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  020F                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0218                     	;# 
   204  0218                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021D                     	;# 
   213  021E                     	;# 
   214  021F                     	;# 
   215  028C                     	;# 
   216  028C                     	;# 
   217  028D                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  028F                     	;# 
   221  0290                     	;# 
   222  0290                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0296                     	;# 
   232  0297                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029C                     	;# 
   240  029C                     	;# 
   241  029D                     	;# 
   242  030C                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  030F                     	;# 
   247  0310                     	;# 
   248  0310                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0314                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0317                     	;# 
   257  0318                     	;# 
   258  0318                     	;# 
   259  0319                     	;# 
   260  031A                     	;# 
   261  031B                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  031F                     	;# 
   267  038C                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0390                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  098F                     	;# 
   435  098F                     	;# 
   436  0990                     	;# 
   437  0991                     	;# 
   438  0992                     	;# 
   439  0993                     	;# 
   440  0994                     	;# 
   441  0995                     	;# 
   442  0996                     	;# 
   443  0997                     	;# 
   444  1E0F                     	;# 
   445  1E10                     	;# 
   446  1E11                     	;# 
   447  1E12                     	;# 
   448  1E13                     	;# 
   449  1E14                     	;# 
   450  1E15                     	;# 
   451  1E16                     	;# 
   452  1E17                     	;# 
   453  1E18                     	;# 
   454  1E19                     	;# 
   455  1E1A                     	;# 
   456  1E1B                     	;# 
   457  1E1C                     	;# 
   458  1E1D                     	;# 
   459  1E1E                     	;# 
   460  1E1F                     	;# 
   461  1E20                     	;# 
   462  1E21                     	;# 
   463  1E22                     	;# 
   464  1E23                     	;# 
   465  1E24                     	;# 
   466  1E25                     	;# 
   467  1E26                     	;# 
   468  1E27                     	;# 
   469  1E28                     	;# 
   470  1E29                     	;# 
   471  1E2A                     	;# 
   472  1E2B                     	;# 
   473  1E2C                     	;# 
   474  1E2D                     	;# 
   475  1E2E                     	;# 
   476  1E2F                     	;# 
   477  1E30                     	;# 
   478  1E31                     	;# 
   479  1E32                     	;# 
   480  1E33                     	;# 
   481  1E34                     	;# 
   482  1E35                     	;# 
   483  1E36                     	;# 
   484  1E37                     	;# 
   485  1E8F                     	;# 
   486  1E90                     	;# 
   487  1E91                     	;# 
   488  1E92                     	;# 
   489  1E93                     	;# 
   490  1E94                     	;# 
   491  1E95                     	;# 
   492  1E96                     	;# 
   493  1E97                     	;# 
   494  1E9C                     	;# 
   495  1E9D                     	;# 
   496  1E9E                     	;# 
   497  1EA1                     	;# 
   498  1EA2                     	;# 
   499  1EA3                     	;# 
   500  1EA4                     	;# 
   501  1EA5                     	;# 
   502  1EA9                     	;# 
   503  1EAA                     	;# 
   504  1EAB                     	;# 
   505  1EAC                     	;# 
   506  1EB1                     	;# 
   507  1EB2                     	;# 
   508  1EB3                     	;# 
   509  1EB8                     	;# 
   510  1EB9                     	;# 
   511  1EBA                     	;# 
   512  1EBB                     	;# 
   513  1EBC                     	;# 
   514  1EBD                     	;# 
   515  1EBE                     	;# 
   516  1EC3                     	;# 
   517  1EC5                     	;# 
   518  1EC6                     	;# 
   519  1EC7                     	;# 
   520  1EC8                     	;# 
   521  1EC9                     	;# 
   522  1ECA                     	;# 
   523  1ECB                     	;# 
   524  1ECC                     	;# 
   525  1F10                     	;# 
   526  1F11                     	;# 
   527  1F12                     	;# 
   528  1F13                     	;# 
   529  1F14                     	;# 
   530  1F15                     	;# 
   531  1F16                     	;# 
   532  1F17                     	;# 
   533  1F18                     	;# 
   534  1F19                     	;# 
   535  1F1A                     	;# 
   536  1F1B                     	;# 
   537  1F1C                     	;# 
   538  1F1D                     	;# 
   539  1F1E                     	;# 
   540  1F1F                     	;# 
   541  1F20                     	;# 
   542  1F21                     	;# 
   543  1F22                     	;# 
   544  1F23                     	;# 
   545  1F24                     	;# 
   546  1F25                     	;# 
   547  1F26                     	;# 
   548  1F27                     	;# 
   549  1F38                     	;# 
   550  1F39                     	;# 
   551  1F3A                     	;# 
   552  1F3B                     	;# 
   553  1F3C                     	;# 
   554  1F3D                     	;# 
   555  1F3E                     	;# 
   556  1F3F                     	;# 
   557  1F40                     	;# 
   558  1F41                     	;# 
   559  1F43                     	;# 
   560  1F44                     	;# 
   561  1F45                     	;# 
   562  1F46                     	;# 
   563  1F47                     	;# 
   564  1F48                     	;# 
   565  1F49                     	;# 
   566  1F4A                     	;# 
   567  1F4B                     	;# 
   568  1F4C                     	;# 
   569  1F4E                     	;# 
   570  1F4F                     	;# 
   571  1F50                     	;# 
   572  1F51                     	;# 
   573  1F52                     	;# 
   574  1F53                     	;# 
   575  1F54                     	;# 
   576  1F55                     	;# 
   577  1F56                     	;# 
   578  1F57                     	;# 
   579  1F65                     	;# 
   580  1F68                     	;# 
   581  1F69                     	;# 
   582  1F6A                     	;# 
   583  1F6B                     	;# 
   584  1FE4                     	;# 
   585  1FE5                     	;# 
   586  1FE6                     	;# 
   587  1FE7                     	;# 
   588  1FE8                     	;# 
   589  1FE9                     	;# 
   590  1FEA                     	;# 
   591  1FEB                     	;# 
   592  1FED                     	;# 
   593  1FEE                     	;# 
   594  1FEF                     	;# 
   595  0000                     	;# 
   596  0001                     	;# 
   597  0002                     	;# 
   598  0003                     	;# 
   599  0004                     	;# 
   600  0005                     	;# 
   601  0006                     	;# 
   602  0007                     	;# 
   603  0008                     	;# 
   604  0009                     	;# 
   605  000A                     	;# 
   606  000B                     	;# 
   607  000C                     	;# 
   608  000D                     	;# 
   609  000E                     	;# 
   610  0010                     	;# 
   611  0011                     	;# 
   612  0012                     	;# 
   613  0013                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  001C                     	;# 
   618  001C                     	;# 
   619  001D                     	;# 
   620  001D                     	;# 
   621  001E                     	;# 
   622  001F                     	;# 
   623  008C                     	;# 
   624  008C                     	;# 
   625  008D                     	;# 
   626  008E                     	;# 
   627  008E                     	;# 
   628  008F                     	;# 
   629  0090                     	;# 
   630  0090                     	;# 
   631  0091                     	;# 
   632  0093                     	;# 
   633  0094                     	;# 
   634  0095                     	;# 
   635  0096                     	;# 
   636  0097                     	;# 
   637  0098                     	;# 
   638  0099                     	;# 
   639  009A                     	;# 
   640  009B                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  010C                     	;# 
   645  010D                     	;# 
   646  010E                     	;# 
   647  010E                     	;# 
   648  010F                     	;# 
   649  0110                     	;# 
   650  0110                     	;# 
   651  0111                     	;# 
   652  0112                     	;# 
   653  0112                     	;# 
   654  0113                     	;# 
   655  0114                     	;# 
   656  0114                     	;# 
   657  0115                     	;# 
   658  0116                     	;# 
   659  0116                     	;# 
   660  0117                     	;# 
   661  0119                     	;# 
   662  0119                     	;# 
   663  0119                     	;# 
   664  011A                     	;# 
   665  011A                     	;# 
   666  011A                     	;# 
   667  011B                     	;# 
   668  011B                     	;# 
   669  011B                     	;# 
   670  011B                     	;# 
   671  011B                     	;# 
   672  011C                     	;# 
   673  011C                     	;# 
   674  011C                     	;# 
   675  011D                     	;# 
   676  011D                     	;# 
   677  011D                     	;# 
   678  011E                     	;# 
   679  011E                     	;# 
   680  011E                     	;# 
   681  011F                     	;# 
   682  011F                     	;# 
   683  011F                     	;# 
   684  011F                     	;# 
   685  011F                     	;# 
   686  018C                     	;# 
   687  018D                     	;# 
   688  018E                     	;# 
   689  018F                     	;# 
   690  0190                     	;# 
   691  0191                     	;# 
   692  0192                     	;# 
   693  0196                     	;# 
   694  0197                     	;# 
   695  0198                     	;# 
   696  0199                     	;# 
   697  019A                     	;# 
   698  019B                     	;# 
   699  019C                     	;# 
   700  020C                     	;# 
   701  020C                     	;# 
   702  020D                     	;# 
   703  020E                     	;# 
   704  020F                     	;# 
   705  020F                     	;# 
   706  0210                     	;# 
   707  0210                     	;# 
   708  0211                     	;# 
   709  0211                     	;# 
   710  0212                     	;# 
   711  0212                     	;# 
   712  0213                     	;# 
   713  0214                     	;# 
   714  0215                     	;# 
   715  0215                     	;# 
   716  0216                     	;# 
   717  0216                     	;# 
   718  0217                     	;# 
   719  0217                     	;# 
   720  0218                     	;# 
   721  0218                     	;# 
   722  0219                     	;# 
   723  021A                     	;# 
   724  021B                     	;# 
   725  021B                     	;# 
   726  021C                     	;# 
   727  021C                     	;# 
   728  021D                     	;# 
   729  021D                     	;# 
   730  021E                     	;# 
   731  021F                     	;# 
   732  028C                     	;# 
   733  028C                     	;# 
   734  028D                     	;# 
   735  028D                     	;# 
   736  028E                     	;# 
   737  028F                     	;# 
   738  0290                     	;# 
   739  0290                     	;# 
   740  0291                     	;# 
   741  0292                     	;# 
   742  0292                     	;# 
   743  0293                     	;# 
   744  0293                     	;# 
   745  0294                     	;# 
   746  0295                     	;# 
   747  0296                     	;# 
   748  0296                     	;# 
   749  0297                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  0299                     	;# 
   754  029A                     	;# 
   755  029B                     	;# 
   756  029C                     	;# 
   757  029C                     	;# 
   758  029D                     	;# 
   759  030C                     	;# 
   760  030C                     	;# 
   761  030D                     	;# 
   762  030E                     	;# 
   763  030F                     	;# 
   764  0310                     	;# 
   765  0310                     	;# 
   766  0311                     	;# 
   767  0312                     	;# 
   768  0313                     	;# 
   769  0314                     	;# 
   770  0314                     	;# 
   771  0315                     	;# 
   772  0316                     	;# 
   773  0317                     	;# 
   774  0318                     	;# 
   775  0318                     	;# 
   776  0319                     	;# 
   777  031A                     	;# 
   778  031B                     	;# 
   779  031C                     	;# 
   780  031C                     	;# 
   781  031D                     	;# 
   782  031E                     	;# 
   783  031F                     	;# 
   784  038C                     	;# 
   785  038C                     	;# 
   786  038D                     	;# 
   787  038E                     	;# 
   788  0390                     	;# 
   789  0390                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  040C                     	;# 
   793  040D                     	;# 
   794  040E                     	;# 
   795  040F                     	;# 
   796  0410                     	;# 
   797  0411                     	;# 
   798  0416                     	;# 
   799  0416                     	;# 
   800  0417                     	;# 
   801  0418                     	;# 
   802  0418                     	;# 
   803  0419                     	;# 
   804  041A                     	;# 
   805  041A                     	;# 
   806  041B                     	;# 
   807  041C                     	;# 
   808  041C                     	;# 
   809  041D                     	;# 
   810  041E                     	;# 
   811  041F                     	;# 
   812  048C                     	;# 
   813  048C                     	;# 
   814  048D                     	;# 
   815  048E                     	;# 
   816  048F                     	;# 
   817  048F                     	;# 
   818  0490                     	;# 
   819  0491                     	;# 
   820  0492                     	;# 
   821  0492                     	;# 
   822  0493                     	;# 
   823  0494                     	;# 
   824  0495                     	;# 
   825  0495                     	;# 
   826  0496                     	;# 
   827  0497                     	;# 
   828  0498                     	;# 
   829  0499                     	;# 
   830  049A                     	;# 
   831  049B                     	;# 
   832  049C                     	;# 
   833  049D                     	;# 
   834  050C                     	;# 
   835  050C                     	;# 
   836  050D                     	;# 
   837  050E                     	;# 
   838  050F                     	;# 
   839  050F                     	;# 
   840  0510                     	;# 
   841  0511                     	;# 
   842  0512                     	;# 
   843  0512                     	;# 
   844  0513                     	;# 
   845  0514                     	;# 
   846  0515                     	;# 
   847  0515                     	;# 
   848  0516                     	;# 
   849  0517                     	;# 
   850  0518                     	;# 
   851  0519                     	;# 
   852  051A                     	;# 
   853  051B                     	;# 
   854  051C                     	;# 
   855  051D                     	;# 
   856  058C                     	;# 
   857  058C                     	;# 
   858  058D                     	;# 
   859  058E                     	;# 
   860  058F                     	;# 
   861  058F                     	;# 
   862  0590                     	;# 
   863  0591                     	;# 
   864  0592                     	;# 
   865  0593                     	;# 
   866  060C                     	;# 
   867  060D                     	;# 
   868  060E                     	;# 
   869  060F                     	;# 
   870  0610                     	;# 
   871  0611                     	;# 
   872  0612                     	;# 
   873  0613                     	;# 
   874  0614                     	;# 
   875  0616                     	;# 
   876  0617                     	;# 
   877  0618                     	;# 
   878  0619                     	;# 
   879  061A                     	;# 
   880  061B                     	;# 
   881  061C                     	;# 
   882  061D                     	;# 
   883  061E                     	;# 
   884  068C                     	;# 
   885  068D                     	;# 
   886  068E                     	;# 
   887  068F                     	;# 
   888  0690                     	;# 
   889  0691                     	;# 
   890  0692                     	;# 
   891  0693                     	;# 
   892  0694                     	;# 
   893  070C                     	;# 
   894  070D                     	;# 
   895  070E                     	;# 
   896  070F                     	;# 
   897  0710                     	;# 
   898  0711                     	;# 
   899  0712                     	;# 
   900  0713                     	;# 
   901  0714                     	;# 
   902  0716                     	;# 
   903  0717                     	;# 
   904  0718                     	;# 
   905  0719                     	;# 
   906  071A                     	;# 
   907  071B                     	;# 
   908  071C                     	;# 
   909  071D                     	;# 
   910  071E                     	;# 
   911  0796                     	;# 
   912  0797                     	;# 
   913  0798                     	;# 
   914  0799                     	;# 
   915  079A                     	;# 
   916  079B                     	;# 
   917  080C                     	;# 
   918  080D                     	;# 
   919  080E                     	;# 
   920  080F                     	;# 
   921  0810                     	;# 
   922  0811                     	;# 
   923  0812                     	;# 
   924  0813                     	;# 
   925  0814                     	;# 
   926  081A                     	;# 
   927  081B                     	;# 
   928  081C                     	;# 
   929  081D                     	;# 
   930  081E                     	;# 
   931  081F                     	;# 
   932  088C                     	;# 
   933  088D                     	;# 
   934  088E                     	;# 
   935  088F                     	;# 
   936  0890                     	;# 
   937  0891                     	;# 
   938  0892                     	;# 
   939  0893                     	;# 
   940  0895                     	;# 
   941  0896                     	;# 
   942  0897                     	;# 
   943  0898                     	;# 
   944  0899                     	;# 
   945  089A                     	;# 
   946  089B                     	;# 
   947  090C                     	;# 
   948  090E                     	;# 
   949  090F                     	;# 
   950  091F                     	;# 
   951  098F                     	;# 
   952  098F                     	;# 
   953  0990                     	;# 
   954  0991                     	;# 
   955  0992                     	;# 
   956  0993                     	;# 
   957  0994                     	;# 
   958  0995                     	;# 
   959  0996                     	;# 
   960  0997                     	;# 
   961  1E0F                     	;# 
   962  1E10                     	;# 
   963  1E11                     	;# 
   964  1E12                     	;# 
   965  1E13                     	;# 
   966  1E14                     	;# 
   967  1E15                     	;# 
   968  1E16                     	;# 
   969  1E17                     	;# 
   970  1E18                     	;# 
   971  1E19                     	;# 
   972  1E1A                     	;# 
   973  1E1B                     	;# 
   974  1E1C                     	;# 
   975  1E1D                     	;# 
   976  1E1E                     	;# 
   977  1E1F                     	;# 
   978  1E20                     	;# 
   979  1E21                     	;# 
   980  1E22                     	;# 
   981  1E23                     	;# 
   982  1E24                     	;# 
   983  1E25                     	;# 
   984  1E26                     	;# 
   985  1E27                     	;# 
   986  1E28                     	;# 
   987  1E29                     	;# 
   988  1E2A                     	;# 
   989  1E2B                     	;# 
   990  1E2C                     	;# 
   991  1E2D                     	;# 
   992  1E2E                     	;# 
   993  1E2F                     	;# 
   994  1E30                     	;# 
   995  1E31                     	;# 
   996  1E32                     	;# 
   997  1E33                     	;# 
   998  1E34                     	;# 
   999  1E35                     	;# 
  1000  1E36                     	;# 
  1001  1E37                     	;# 
  1002  1E8F                     	;# 
  1003  1E90                     	;# 
  1004  1E91                     	;# 
  1005  1E92                     	;# 
  1006  1E93                     	;# 
  1007  1E94                     	;# 
  1008  1E95                     	;# 
  1009  1E96                     	;# 
  1010  1E97                     	;# 
  1011  1E9C                     	;# 
  1012  1E9D                     	;# 
  1013  1E9E                     	;# 
  1014  1EA1                     	;# 
  1015  1EA2                     	;# 
  1016  1EA3                     	;# 
  1017  1EA4                     	;# 
  1018  1EA5                     	;# 
  1019  1EA9                     	;# 
  1020  1EAA                     	;# 
  1021  1EAB                     	;# 
  1022  1EAC                     	;# 
  1023  1EB1                     	;# 
  1024  1EB2                     	;# 
  1025  1EB3                     	;# 
  1026  1EB8                     	;# 
  1027  1EB9                     	;# 
  1028  1EBA                     	;# 
  1029  1EBB                     	;# 
  1030  1EBC                     	;# 
  1031  1EBD                     	;# 
  1032  1EBE                     	;# 
  1033  1EC3                     	;# 
  1034  1EC5                     	;# 
  1035  1EC6                     	;# 
  1036  1EC7                     	;# 
  1037  1EC8                     	;# 
  1038  1EC9                     	;# 
  1039  1ECA                     	;# 
  1040  1ECB                     	;# 
  1041  1ECC                     	;# 
  1042  1F10                     	;# 
  1043  1F11                     	;# 
  1044  1F12                     	;# 
  1045  1F13                     	;# 
  1046  1F14                     	;# 
  1047  1F15                     	;# 
  1048  1F16                     	;# 
  1049  1F17                     	;# 
  1050  1F18                     	;# 
  1051  1F19                     	;# 
  1052  1F1A                     	;# 
  1053  1F1B                     	;# 
  1054  1F1C                     	;# 
  1055  1F1D                     	;# 
  1056  1F1E                     	;# 
  1057  1F1F                     	;# 
  1058  1F20                     	;# 
  1059  1F21                     	;# 
  1060  1F22                     	;# 
  1061  1F23                     	;# 
  1062  1F24                     	;# 
  1063  1F25                     	;# 
  1064  1F26                     	;# 
  1065  1F27                     	;# 
  1066  1F38                     	;# 
  1067  1F39                     	;# 
  1068  1F3A                     	;# 
  1069  1F3B                     	;# 
  1070  1F3C                     	;# 
  1071  1F3D                     	;# 
  1072  1F3E                     	;# 
  1073  1F3F                     	;# 
  1074  1F40                     	;# 
  1075  1F41                     	;# 
  1076  1F43                     	;# 
  1077  1F44                     	;# 
  1078  1F45                     	;# 
  1079  1F46                     	;# 
  1080  1F47                     	;# 
  1081  1F48                     	;# 
  1082  1F49                     	;# 
  1083  1F4A                     	;# 
  1084  1F4B                     	;# 
  1085  1F4C                     	;# 
  1086  1F4E                     	;# 
  1087  1F4F                     	;# 
  1088  1F50                     	;# 
  1089  1F51                     	;# 
  1090  1F52                     	;# 
  1091  1F53                     	;# 
  1092  1F54                     	;# 
  1093  1F55                     	;# 
  1094  1F56                     	;# 
  1095  1F57                     	;# 
  1096  1F65                     	;# 
  1097  1F68                     	;# 
  1098  1F69                     	;# 
  1099  1F6A                     	;# 
  1100  1F6B                     	;# 
  1101  1FE4                     	;# 
  1102  1FE5                     	;# 
  1103  1FE6                     	;# 
  1104  1FE7                     	;# 
  1105  1FE8                     	;# 
  1106  1FE9                     	;# 
  1107  1FEA                     	;# 
  1108  1FEB                     	;# 
  1109  1FED                     	;# 
  1110  1FEE                     	;# 
  1111  1FEF                     	;# 
  1112  0000                     	;# 
  1113  0001                     	;# 
  1114  0002                     	;# 
  1115  0003                     	;# 
  1116  0004                     	;# 
  1117  0005                     	;# 
  1118  0006                     	;# 
  1119  0007                     	;# 
  1120  0008                     	;# 
  1121  0009                     	;# 
  1122  000A                     	;# 
  1123  000B                     	;# 
  1124  000C                     	;# 
  1125  000D                     	;# 
  1126  000E                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0016                     	;# 
  1132  0017                     	;# 
  1133  0018                     	;# 
  1134  001C                     	;# 
  1135  001C                     	;# 
  1136  001D                     	;# 
  1137  001D                     	;# 
  1138  001E                     	;# 
  1139  001F                     	;# 
  1140  008C                     	;# 
  1141  008C                     	;# 
  1142  008D                     	;# 
  1143  008E                     	;# 
  1144  008E                     	;# 
  1145  008F                     	;# 
  1146  0090                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0093                     	;# 
  1150  0094                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009C                     	;# 
  1159  009D                     	;# 
  1160  009E                     	;# 
  1161  010C                     	;# 
  1162  010D                     	;# 
  1163  010E                     	;# 
  1164  010E                     	;# 
  1165  010F                     	;# 
  1166  0110                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0112                     	;# 
  1171  0113                     	;# 
  1172  0114                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0116                     	;# 
  1177  0117                     	;# 
  1178  0119                     	;# 
  1179  0119                     	;# 
  1180  0119                     	;# 
  1181  011A                     	;# 
  1182  011A                     	;# 
  1183  011A                     	;# 
  1184  011B                     	;# 
  1185  011B                     	;# 
  1186  011B                     	;# 
  1187  011B                     	;# 
  1188  011B                     	;# 
  1189  011C                     	;# 
  1190  011C                     	;# 
  1191  011C                     	;# 
  1192  011D                     	;# 
  1193  011D                     	;# 
  1194  011D                     	;# 
  1195  011E                     	;# 
  1196  011E                     	;# 
  1197  011E                     	;# 
  1198  011F                     	;# 
  1199  011F                     	;# 
  1200  011F                     	;# 
  1201  011F                     	;# 
  1202  011F                     	;# 
  1203  018C                     	;# 
  1204  018D                     	;# 
  1205  018E                     	;# 
  1206  018F                     	;# 
  1207  0190                     	;# 
  1208  0191                     	;# 
  1209  0192                     	;# 
  1210  0196                     	;# 
  1211  0197                     	;# 
  1212  0198                     	;# 
  1213  0199                     	;# 
  1214  019A                     	;# 
  1215  019B                     	;# 
  1216  019C                     	;# 
  1217  020C                     	;# 
  1218  020C                     	;# 
  1219  020D                     	;# 
  1220  020E                     	;# 
  1221  020F                     	;# 
  1222  020F                     	;# 
  1223  0210                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0214                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0216                     	;# 
  1234  0216                     	;# 
  1235  0217                     	;# 
  1236  0217                     	;# 
  1237  0218                     	;# 
  1238  0218                     	;# 
  1239  0219                     	;# 
  1240  021A                     	;# 
  1241  021B                     	;# 
  1242  021B                     	;# 
  1243  021C                     	;# 
  1244  021C                     	;# 
  1245  021D                     	;# 
  1246  021D                     	;# 
  1247  021E                     	;# 
  1248  021F                     	;# 
  1249  028C                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028D                     	;# 
  1253  028E                     	;# 
  1254  028F                     	;# 
  1255  0290                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0292                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0293                     	;# 
  1262  0294                     	;# 
  1263  0295                     	;# 
  1264  0296                     	;# 
  1265  0296                     	;# 
  1266  0297                     	;# 
  1267  0298                     	;# 
  1268  0298                     	;# 
  1269  0299                     	;# 
  1270  0299                     	;# 
  1271  029A                     	;# 
  1272  029B                     	;# 
  1273  029C                     	;# 
  1274  029C                     	;# 
  1275  029D                     	;# 
  1276  030C                     	;# 
  1277  030C                     	;# 
  1278  030D                     	;# 
  1279  030E                     	;# 
  1280  030F                     	;# 
  1281  0310                     	;# 
  1282  0310                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0314                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  0318                     	;# 
  1293  0319                     	;# 
  1294  031A                     	;# 
  1295  031B                     	;# 
  1296  031C                     	;# 
  1297  031C                     	;# 
  1298  031D                     	;# 
  1299  031E                     	;# 
  1300  031F                     	;# 
  1301  038C                     	;# 
  1302  038C                     	;# 
  1303  038D                     	;# 
  1304  038E                     	;# 
  1305  0390                     	;# 
  1306  0390                     	;# 
  1307  0391                     	;# 
  1308  0392                     	;# 
  1309  040C                     	;# 
  1310  040D                     	;# 
  1311  040E                     	;# 
  1312  040F                     	;# 
  1313  0410                     	;# 
  1314  0411                     	;# 
  1315  0416                     	;# 
  1316  0416                     	;# 
  1317  0417                     	;# 
  1318  0418                     	;# 
  1319  0418                     	;# 
  1320  0419                     	;# 
  1321  041A                     	;# 
  1322  041A                     	;# 
  1323  041B                     	;# 
  1324  041C                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  041F                     	;# 
  1329  048C                     	;# 
  1330  048C                     	;# 
  1331  048D                     	;# 
  1332  048E                     	;# 
  1333  048F                     	;# 
  1334  048F                     	;# 
  1335  0490                     	;# 
  1336  0491                     	;# 
  1337  0492                     	;# 
  1338  0492                     	;# 
  1339  0493                     	;# 
  1340  0494                     	;# 
  1341  0495                     	;# 
  1342  0495                     	;# 
  1343  0496                     	;# 
  1344  0497                     	;# 
  1345  0498                     	;# 
  1346  0499                     	;# 
  1347  049A                     	;# 
  1348  049B                     	;# 
  1349  049C                     	;# 
  1350  049D                     	;# 
  1351  050C                     	;# 
  1352  050C                     	;# 
  1353  050D                     	;# 
  1354  050E                     	;# 
  1355  050F                     	;# 
  1356  050F                     	;# 
  1357  0510                     	;# 
  1358  0511                     	;# 
  1359  0512                     	;# 
  1360  0512                     	;# 
  1361  0513                     	;# 
  1362  0514                     	;# 
  1363  0515                     	;# 
  1364  0515                     	;# 
  1365  0516                     	;# 
  1366  0517                     	;# 
  1367  0518                     	;# 
  1368  0519                     	;# 
  1369  051A                     	;# 
  1370  051B                     	;# 
  1371  051C                     	;# 
  1372  051D                     	;# 
  1373  058C                     	;# 
  1374  058C                     	;# 
  1375  058D                     	;# 
  1376  058E                     	;# 
  1377  058F                     	;# 
  1378  058F                     	;# 
  1379  0590                     	;# 
  1380  0591                     	;# 
  1381  0592                     	;# 
  1382  0593                     	;# 
  1383  060C                     	;# 
  1384  060D                     	;# 
  1385  060E                     	;# 
  1386  060F                     	;# 
  1387  0610                     	;# 
  1388  0611                     	;# 
  1389  0612                     	;# 
  1390  0613                     	;# 
  1391  0614                     	;# 
  1392  0616                     	;# 
  1393  0617                     	;# 
  1394  0618                     	;# 
  1395  0619                     	;# 
  1396  061A                     	;# 
  1397  061B                     	;# 
  1398  061C                     	;# 
  1399  061D                     	;# 
  1400  061E                     	;# 
  1401  068C                     	;# 
  1402  068D                     	;# 
  1403  068E                     	;# 
  1404  068F                     	;# 
  1405  0690                     	;# 
  1406  0691                     	;# 
  1407  0692                     	;# 
  1408  0693                     	;# 
  1409  0694                     	;# 
  1410  070C                     	;# 
  1411  070D                     	;# 
  1412  070E                     	;# 
  1413  070F                     	;# 
  1414  0710                     	;# 
  1415  0711                     	;# 
  1416  0712                     	;# 
  1417  0713                     	;# 
  1418  0714                     	;# 
  1419  0716                     	;# 
  1420  0717                     	;# 
  1421  0718                     	;# 
  1422  0719                     	;# 
  1423  071A                     	;# 
  1424  071B                     	;# 
  1425  071C                     	;# 
  1426  071D                     	;# 
  1427  071E                     	;# 
  1428  0796                     	;# 
  1429  0797                     	;# 
  1430  0798                     	;# 
  1431  0799                     	;# 
  1432  079A                     	;# 
  1433  079B                     	;# 
  1434  080C                     	;# 
  1435  080D                     	;# 
  1436  080E                     	;# 
  1437  080F                     	;# 
  1438  0810                     	;# 
  1439  0811                     	;# 
  1440  0812                     	;# 
  1441  0813                     	;# 
  1442  0814                     	;# 
  1443  081A                     	;# 
  1444  081B                     	;# 
  1445  081C                     	;# 
  1446  081D                     	;# 
  1447  081E                     	;# 
  1448  081F                     	;# 
  1449  088C                     	;# 
  1450  088D                     	;# 
  1451  088E                     	;# 
  1452  088F                     	;# 
  1453  0890                     	;# 
  1454  0891                     	;# 
  1455  0892                     	;# 
  1456  0893                     	;# 
  1457  0895                     	;# 
  1458  0896                     	;# 
  1459  0897                     	;# 
  1460  0898                     	;# 
  1461  0899                     	;# 
  1462  089A                     	;# 
  1463  089B                     	;# 
  1464  090C                     	;# 
  1465  090E                     	;# 
  1466  090F                     	;# 
  1467  091F                     	;# 
  1468  098F                     	;# 
  1469  098F                     	;# 
  1470  0990                     	;# 
  1471  0991                     	;# 
  1472  0992                     	;# 
  1473  0993                     	;# 
  1474  0994                     	;# 
  1475  0995                     	;# 
  1476  0996                     	;# 
  1477  0997                     	;# 
  1478  1E0F                     	;# 
  1479  1E10                     	;# 
  1480  1E11                     	;# 
  1481  1E12                     	;# 
  1482  1E13                     	;# 
  1483  1E14                     	;# 
  1484  1E15                     	;# 
  1485  1E16                     	;# 
  1486  1E17                     	;# 
  1487  1E18                     	;# 
  1488  1E19                     	;# 
  1489  1E1A                     	;# 
  1490  1E1B                     	;# 
  1491  1E1C                     	;# 
  1492  1E1D                     	;# 
  1493  1E1E                     	;# 
  1494  1E1F                     	;# 
  1495  1E20                     	;# 
  1496  1E21                     	;# 
  1497  1E22                     	;# 
  1498  1E23                     	;# 
  1499  1E24                     	;# 
  1500  1E25                     	;# 
  1501  1E26                     	;# 
  1502  1E27                     	;# 
  1503  1E28                     	;# 
  1504  1E29                     	;# 
  1505  1E2A                     	;# 
  1506  1E2B                     	;# 
  1507  1E2C                     	;# 
  1508  1E2D                     	;# 
  1509  1E2E                     	;# 
  1510  1E2F                     	;# 
  1511  1E30                     	;# 
  1512  1E31                     	;# 
  1513  1E32                     	;# 
  1514  1E33                     	;# 
  1515  1E34                     	;# 
  1516  1E35                     	;# 
  1517  1E36                     	;# 
  1518  1E37                     	;# 
  1519  1E8F                     	;# 
  1520  1E90                     	;# 
  1521  1E91                     	;# 
  1522  1E92                     	;# 
  1523  1E93                     	;# 
  1524  1E94                     	;# 
  1525  1E95                     	;# 
  1526  1E96                     	;# 
  1527  1E97                     	;# 
  1528  1E9C                     	;# 
  1529  1E9D                     	;# 
  1530  1E9E                     	;# 
  1531  1EA1                     	;# 
  1532  1EA2                     	;# 
  1533  1EA3                     	;# 
  1534  1EA4                     	;# 
  1535  1EA5                     	;# 
  1536  1EA9                     	;# 
  1537  1EAA                     	;# 
  1538  1EAB                     	;# 
  1539  1EAC                     	;# 
  1540  1EB1                     	;# 
  1541  1EB2                     	;# 
  1542  1EB3                     	;# 
  1543  1EB8                     	;# 
  1544  1EB9                     	;# 
  1545  1EBA                     	;# 
  1546  1EBB                     	;# 
  1547  1EBC                     	;# 
  1548  1EBD                     	;# 
  1549  1EBE                     	;# 
  1550  1EC3                     	;# 
  1551  1EC5                     	;# 
  1552  1EC6                     	;# 
  1553  1EC7                     	;# 
  1554  1EC8                     	;# 
  1555  1EC9                     	;# 
  1556  1ECA                     	;# 
  1557  1ECB                     	;# 
  1558  1ECC                     	;# 
  1559  1F10                     	;# 
  1560  1F11                     	;# 
  1561  1F12                     	;# 
  1562  1F13                     	;# 
  1563  1F14                     	;# 
  1564  1F15                     	;# 
  1565  1F16                     	;# 
  1566  1F17                     	;# 
  1567  1F18                     	;# 
  1568  1F19                     	;# 
  1569  1F1A                     	;# 
  1570  1F1B                     	;# 
  1571  1F1C                     	;# 
  1572  1F1D                     	;# 
  1573  1F1E                     	;# 
  1574  1F1F                     	;# 
  1575  1F20                     	;# 
  1576  1F21                     	;# 
  1577  1F22                     	;# 
  1578  1F23                     	;# 
  1579  1F24                     	;# 
  1580  1F25                     	;# 
  1581  1F26                     	;# 
  1582  1F27                     	;# 
  1583  1F38                     	;# 
  1584  1F39                     	;# 
  1585  1F3A                     	;# 
  1586  1F3B                     	;# 
  1587  1F3C                     	;# 
  1588  1F3D                     	;# 
  1589  1F3E                     	;# 
  1590  1F3F                     	;# 
  1591  1F40                     	;# 
  1592  1F41                     	;# 
  1593  1F43                     	;# 
  1594  1F44                     	;# 
  1595  1F45                     	;# 
  1596  1F46                     	;# 
  1597  1F47                     	;# 
  1598  1F48                     	;# 
  1599  1F49                     	;# 
  1600  1F4A                     	;# 
  1601  1F4B                     	;# 
  1602  1F4C                     	;# 
  1603  1F4E                     	;# 
  1604  1F4F                     	;# 
  1605  1F50                     	;# 
  1606  1F51                     	;# 
  1607  1F52                     	;# 
  1608  1F53                     	;# 
  1609  1F54                     	;# 
  1610  1F55                     	;# 
  1611  1F56                     	;# 
  1612  1F57                     	;# 
  1613  1F65                     	;# 
  1614  1F68                     	;# 
  1615  1F69                     	;# 
  1616  1F6A                     	;# 
  1617  1F6B                     	;# 
  1618  1FE4                     	;# 
  1619  1FE5                     	;# 
  1620  1FE6                     	;# 
  1621  1FE7                     	;# 
  1622  1FE8                     	;# 
  1623  1FE9                     	;# 
  1624  1FEA                     	;# 
  1625  1FEB                     	;# 
  1626  1FED                     	;# 
  1627  1FEE                     	;# 
  1628  1FEF                     	;# 
  1629                           
  1630                           	psect	idataBANK1
  1631  0FBB                     __pidataBANK1:
  1632                           
  1633                           ;initializer for forward1@F12394
  1634  0FBB  340C               	retlw	12
  1635  0FBC  3406               	retlw	6
  1636  0FBD  3403               	retlw	3
  1637  0FBE  3409               	retlw	9
  1638  0013                     _TRISC	set	19
  1639  0012                     _TRISB	set	18
  1640  0011                     _TRISA	set	17
  1641  00BB                     _LATB3	set	187
  1642  00B9                     _LATB1	set	185
  1643  00BA                     _LATB2	set	186
  1644  00B8                     _LATB0	set	184
  1645  008C                     _ADRES	set	140
  1646  009A                     _ADREFbits	set	154
  1647  009E                     _ADPCH	set	158
  1648  0098                     _ADCLKbits	set	152
  1649  0093                     _ADCON0	set	147
  1650  0498                     _ADGO	set	1176
  1651  011B                     _SP1BRG	set	283
  1652  011F                     _BAUD1CON	set	287
  1653  011D                     _RC1STA	set	285
  1654  011E                     _TX1STAbits	set	286
  1655  011E                     _TX1STA	set	286
  1656  0197                     _SSP2ADD	set	407
  1657  019C                     _SSP2CON3	set	412
  1658  019A                     _SSP2CON1	set	410
  1659  0199                     _SSP2STAT	set	409
  1660  018F                     _SSP1STAT	set	399
  1661  0190                     _SSP1CON1	set	400
  1662  0196                     _SSP2BUF	set	406
  1663  019B                     _SSP2CON2bits	set	411
  1664  387A                     _SSP2IF	set	14458
  1665  0893                     _OSCFRQbits	set	2195
  1666  088D                     _OSCCON1bits	set	2189
  1667  1ECB                     _RXPPS	set	7883
  1668  1EC8                     _SSP2CLKPPS	set	7880
  1669  1EC9                     _SSP2DATPPS	set	7881
  1670  1EC6                     _SSP1DATPPS	set	7878
  1671  1EC5                     _SSP1CLKPPS	set	7877
  1672  1E8F                     _PPSLOCKbits	set	7823
  1673  1E8F                     _PPSLOCK	set	7823
  1674  1F21                     _RC1PPS	set	7969
  1675  1F19                     _RB1PPS	set	7961
  1676  1F18                     _RB0PPS	set	7960
  1677  1F25                     _RC5PPS	set	7973
  1678  1F26                     _RC6PPS	set	7974
  1679  1F4E                     _ANSELC	set	8014
  1680  1F43                     _ANSELB	set	8003
  1681  1F38                     _ANSELA	set	7992
  1682                           
  1683                           	psect	stringtext1
  1684  1000                     __pstringtext1:
  1685  1000                     STR_1:
  1686  1000  3425               	retlw	37	;'%'
  1687  1001  3434               	retlw	52	;'4'
  1688  1002  3464               	retlw	100	;'d'
  1689  1003  340A               	retlw	10
  1690  1004  3400               	retlw	0
  1691                           
  1692                           	psect	stringtext2
  1693  0000                     __pstringtext2:
  1694                           
  1695                           	psect	cinit
  1696  07E4                     start_initialization:	
  1697                           ; #config settings
  1698                           
  1699  07E4                     __initialization:
  1700                           
  1701                           ; Initialize objects allocated to BANK1
  1702  07E4  0141               	movlb	1	; select bank1
  1703  07E5  318F  27BB  3187   	fcall	__pidataBANK1	;fetch initializer
  1704  07E8  00D1               	movwf	__pdataBANK1& (0+127)
  1705  07E9  318F  27BC  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1706  07EC  00D2               	movwf	(__pdataBANK1+1)& (0+127)
  1707  07ED  318F  27BD  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1708  07F0  00D3               	movwf	(__pdataBANK1+2)& (0+127)
  1709  07F1  318F  27BE  3187   	fcall	__pidataBANK1+3	;fetch initializer
  1710  07F4  00D4               	movwf	(__pdataBANK1+3)& (0+127)
  1711                           
  1712                           ; Clear objects allocated to BANK1
  1713  07F5  30A0               	movlw	low __pbssBANK1
  1714  07F6  0084               	movwf	4
  1715  07F7  3000               	movlw	high __pbssBANK1
  1716  07F8  0085               	movwf	5
  1717  07F9  3029               	movlw	41
  1718  07FA  318F  27C5  3187   	fcall	clear_ram0
  1719  07FD                     end_of_initialization:	
  1720                           ;End of C runtime variable initialization code
  1721                           
  1722  07FD                     __end_of__initialization:
  1723  07FD  0140               	movlb	0
  1724  07FE  3181  2958         	ljmp	_main	;jump to C main() function
  1725                           
  1726                           	psect	bssBANK1
  1727  00A0                     __pbssBANK1:
  1728  00A0                     _nout:
  1729  00A0                     	ds	2
  1730  00A2                     _width:
  1731  00A2                     	ds	2
  1732  00A4                     _prec:
  1733  00A4                     	ds	2
  1734  00A6                     _flags:
  1735  00A6                     	ds	2
  1736  00A8                     forward1@cnt:
  1737  00A8                     	ds	1
  1738  00A9                     _dbuf:
  1739  00A9                     	ds	32
  1740                           
  1741                           	psect	dataBANK1
  1742  00D1                     __pdataBANK1:
  1743  00D1                     forward1@F12394:
  1744  00D1                     	ds	4
  1745                           
  1746                           	psect	clrtext
  1747  0FC5                     clear_ram0:	
  1748                           ;	Called with FSR0 containing the base address, and
  1749                           ;	WREG with the size to clear
  1750                           
  1751  0FC5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1752  0FC6                     clrloop0:
  1753  0FC6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1754  0FC7  3101               	addfsr 0,1
  1755  0FC8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1756  0FC9  2FC6               	goto	clrloop0	;have we reached the end yet?
  1757  0FCA  3400               	retlw	0	;all done for this memory range, return
  1758                           
  1759                           	psect	cstackBANK1
  1760  00C9                     __pcstackBANK1:
  1761  00C9                     ?_printf:
  1762  00C9                     printf@fmt:	
  1763                           ; 2 bytes @ 0x0
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x0
  1767  00C9                     	ds	4
  1768  00CD                     ??_main:
  1769                           
  1770                           ; 1 bytes @ 0x4
  1771  00CD                     	ds	2
  1772  00CF                     main@data:
  1773                           
  1774                           ; 2 bytes @ 0x6
  1775  00CF                     	ds	2
  1776                           
  1777                           	psect	cstackCOMMON
  1778  0070                     __pcstackCOMMON:
  1779  0070                     ?_init:
  1780  0070                     ??_init:	
  1781                           ; 1 bytes @ 0x0
  1782                           
  1783  0070                     ?_i2cProtocolStart:	
  1784                           ; 1 bytes @ 0x0
  1785                           
  1786  0070                     ??_i2cProtocolStart:	
  1787                           ; 1 bytes @ 0x0
  1788                           
  1789  0070                     ?_i2cProtocolStop:	
  1790                           ; 1 bytes @ 0x0
  1791                           
  1792  0070                     ??_i2cProtocolStop:	
  1793                           ; 1 bytes @ 0x0
  1794                           
  1795  0070                     ?_i2cProtocolSendData:	
  1796                           ; 1 bytes @ 0x0
  1797                           
  1798  0070                     ??_i2cProtocolSendData:	
  1799                           ; 1 bytes @ 0x0
  1800                           
  1801  0070                     ?_lcdSendCommandData:	
  1802                           ; 1 bytes @ 0x0
  1803                           
  1804  0070                     ?_lcdSendCharacterData:	
  1805                           ; 1 bytes @ 0x0
  1806                           
  1807  0070                     ?_lcdInitialize:	
  1808                           ; 1 bytes @ 0x0
  1809                           
  1810  0070                     ?_putch:	
  1811                           ; 1 bytes @ 0x0
  1812                           
  1813  0070                     ?_main:	
  1814                           ; 1 bytes @ 0x0
  1815                           
  1816  0070                     ??___aodiv:	
  1817                           ; 1 bytes @ 0x0
  1818                           
  1819  0070                     ??___aomod:	
  1820                           ; 1 bytes @ 0x0
  1821                           
  1822  0070                     ?_strlen:	
  1823                           ; 1 bytes @ 0x0
  1824                           
  1825  0070                     ?_isdigit:	
  1826                           ; 2 bytes @ 0x0
  1827                           
  1828  0070                     ?_isspace:	
  1829                           ; 2 bytes @ 0x0
  1830                           
  1831  0070                     ?___wmul:	
  1832                           ; 2 bytes @ 0x0
  1833                           
  1834  0070                     i2cProtocolSendData@data:	
  1835                           ; 2 bytes @ 0x0
  1836                           
  1837  0070                     ___wmul@multiplier:	
  1838                           ; 1 bytes @ 0x0
  1839                           
  1840  0070                     isdigit@c:	
  1841                           ; 2 bytes @ 0x0
  1842                           
  1843  0070                     isspace@c:	
  1844                           ; 2 bytes @ 0x0
  1845                           
  1846                           
  1847                           ; 2 bytes @ 0x0
  1848  0070                     	ds	1
  1849  0071                     ?_lcdI2CProtocol:
  1850  0071                     lcdI2CProtocol@cont_code:	
  1851                           ; 1 bytes @ 0x1
  1852                           
  1853  0071                     ___aodiv@counter:	
  1854                           ; 1 bytes @ 0x1
  1855                           
  1856  0071                     ___aomod@counter:	
  1857                           ; 1 bytes @ 0x1
  1858                           
  1859                           
  1860                           ; 1 bytes @ 0x1
  1861  0071                     	ds	1
  1862  0072                     ??_strlen:
  1863  0072                     ??_isdigit:	
  1864                           ; 1 bytes @ 0x2
  1865                           
  1866  0072                     ??_isspace:	
  1867                           ; 1 bytes @ 0x2
  1868                           
  1869  0072                     lcdI2CProtocol@data:	
  1870                           ; 1 bytes @ 0x2
  1871                           
  1872  0072                     ___aodiv@sign:	
  1873                           ; 1 bytes @ 0x2
  1874                           
  1875  0072                     ___aomod@sign:	
  1876                           ; 1 bytes @ 0x2
  1877                           
  1878  0072                     ___wmul@multiplicand:	
  1879                           ; 1 bytes @ 0x2
  1880                           
  1881                           
  1882                           ; 2 bytes @ 0x2
  1883  0072                     	ds	1
  1884  0073                     ??_lcdI2CProtocol:
  1885  0073                     ?_abs:	
  1886                           ; 1 bytes @ 0x3
  1887                           
  1888  0073                     lcdI2CProtocol@address:	
  1889                           ; 2 bytes @ 0x3
  1890                           
  1891  0073                     strlen@a:	
  1892                           ; 1 bytes @ 0x3
  1893                           
  1894  0073                     abs@a:	
  1895                           ; 1 bytes @ 0x3
  1896                           
  1897  0073                     ___aodiv@quotient:	
  1898                           ; 2 bytes @ 0x3
  1899                           
  1900                           
  1901                           ; 8 bytes @ 0x3
  1902  0073                     	ds	1
  1903  0074                     ??_lcdSendCommandData:
  1904  0074                     ??_lcdSendCharacterData:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907  0074                     ??___wmul:	
  1908                           ; 1 bytes @ 0x4
  1909                           
  1910  0074                     _isspace$903:	
  1911                           ; 1 bytes @ 0x4
  1912                           
  1913  0074                     strlen@s:	
  1914                           ; 1 bytes @ 0x4
  1915                           
  1916  0074                     ___wmul@product:	
  1917                           ; 1 bytes @ 0x4
  1918                           
  1919                           
  1920                           ; 2 bytes @ 0x4
  1921  0074                     	ds	1
  1922  0075                     ??_abs:
  1923  0075                     lcdSendCommandData@command:	
  1924                           ; 1 bytes @ 0x5
  1925                           
  1926                           
  1927                           ; 1 bytes @ 0x5
  1928  0075                     	ds	1
  1929  0076                     ??_lcdInitialize:
  1930  0076                     ?_lcdLocateCursor:	
  1931                           ; 1 bytes @ 0x6
  1932                           
  1933  0076                     ?_atoi:	
  1934                           ; 1 bytes @ 0x6
  1935                           
  1936  0076                     lcdSendCharacterData@data:	
  1937                           ; 2 bytes @ 0x6
  1938                           
  1939  0076                     lcdLocateCursor@pos_y:	
  1940                           ; 1 bytes @ 0x6
  1941                           
  1942  0076                     atoi@s:	
  1943                           ; 1 bytes @ 0x6
  1944                           
  1945                           
  1946                           ; 2 bytes @ 0x6
  1947  0076                     	ds	1
  1948  0077                     ??_lcdLocateCursor:
  1949  0077                     ??_putch:	
  1950                           ; 1 bytes @ 0x7
  1951                           
  1952  0077                     putch@character:	
  1953                           ; 1 bytes @ 0x7
  1954                           
  1955                           
  1956                           ; 1 bytes @ 0x7
  1957  0077                     	ds	1
  1958  0078                     ??_atoi:
  1959  0078                     ?_fputc:	
  1960                           ; 1 bytes @ 0x8
  1961                           
  1962  0078                     lcdLocateCursor@pos_x:	
  1963                           ; 2 bytes @ 0x8
  1964                           
  1965  0078                     fputc@c:	
  1966                           ; 1 bytes @ 0x8
  1967                           
  1968                           
  1969                           ; 2 bytes @ 0x8
  1970  0078                     	ds	2
  1971  007A                     fputc@fp:
  1972                           
  1973                           ; 1 bytes @ 0xA
  1974  007A                     	ds	1
  1975  007B                     ?_fputs:
  1976  007B                     fputs@fp:	
  1977                           ; 2 bytes @ 0xB
  1978                           
  1979                           
  1980                           ; 1 bytes @ 0xB
  1981  007B                     	ds	1
  1982  007C                     ??_pad:
  1983                           
  1984                           ; 1 bytes @ 0xC
  1985  007C                     	ds	1
  1986  007D                     ??_printf:
  1987                           
  1988                           ; 1 bytes @ 0xD
  1989  007D                     	ds	1
  1990                           
  1991                           	psect	cstackBANK0
  1992  0020                     __pcstackBANK0:
  1993  0020                     ??_fputc:
  1994  0020                     ?___aodiv:	
  1995                           ; 1 bytes @ 0x0
  1996                           
  1997  0020                     ?___aomod:	
  1998                           ; 8 bytes @ 0x0
  1999                           
  2000  0020                     atoi@neg:	
  2001                           ; 8 bytes @ 0x0
  2002                           
  2003  0020                     ___aodiv@divisor:	
  2004                           ; 2 bytes @ 0x0
  2005                           
  2006  0020                     ___aomod@divisor:	
  2007                           ; 8 bytes @ 0x0
  2008                           
  2009                           
  2010                           ; 8 bytes @ 0x0
  2011  0020                     	ds	2
  2012  0022                     _atoi$885:
  2013                           
  2014                           ; 2 bytes @ 0x2
  2015  0022                     	ds	2
  2016  0024                     _atoi$887:
  2017                           
  2018                           ; 2 bytes @ 0x4
  2019  0024                     	ds	1
  2020  0025                     ??_fputs:
  2021                           
  2022                           ; 1 bytes @ 0x5
  2023  0025                     	ds	1
  2024  0026                     _atoi$886:
  2025                           
  2026                           ; 1 bytes @ 0x6
  2027  0026                     	ds	1
  2028  0027                     atoi@n:
  2029                           
  2030                           ; 2 bytes @ 0x7
  2031  0027                     	ds	1
  2032  0028                     fputs@c:
  2033  0028                     ___aodiv@dividend:	
  2034                           ; 1 bytes @ 0x8
  2035                           
  2036  0028                     ___aomod@dividend:	
  2037                           ; 8 bytes @ 0x8
  2038                           
  2039                           
  2040                           ; 8 bytes @ 0x8
  2041  0028                     	ds	1
  2042  0029                     fputs@i:
  2043                           
  2044                           ; 2 bytes @ 0x9
  2045  0029                     	ds	2
  2046  002B                     fputs@s:
  2047                           
  2048                           ; 1 bytes @ 0xB
  2049  002B                     	ds	1
  2050  002C                     ?_pad:
  2051  002C                     pad@buf:	
  2052                           ; 2 bytes @ 0xC
  2053                           
  2054                           
  2055                           ; 1 bytes @ 0xC
  2056  002C                     	ds	1
  2057  002D                     pad@p:
  2058                           
  2059                           ; 2 bytes @ 0xD
  2060  002D                     	ds	2
  2061  002F                     pad@i:
  2062                           
  2063                           ; 2 bytes @ 0xF
  2064  002F                     	ds	2
  2065  0031                     pad@w:
  2066                           
  2067                           ; 2 bytes @ 0x11
  2068  0031                     	ds	2
  2069  0033                     pad@fp:
  2070                           
  2071                           ; 1 bytes @ 0x13
  2072  0033                     	ds	1
  2073  0034                     ?_dtoa:
  2074  0034                     dtoa@d:	
  2075                           ; 2 bytes @ 0x14
  2076                           
  2077                           
  2078                           ; 8 bytes @ 0x14
  2079  0034                     	ds	8
  2080  003C                     ??_dtoa:
  2081                           
  2082                           ; 1 bytes @ 0x1C
  2083  003C                     	ds	3
  2084  003F                     _dtoa$850:
  2085                           
  2086                           ; 2 bytes @ 0x1F
  2087  003F                     	ds	2
  2088  0041                     dtoa@p:
  2089                           
  2090                           ; 2 bytes @ 0x21
  2091  0041                     	ds	2
  2092  0043                     dtoa@fp:
  2093                           
  2094                           ; 1 bytes @ 0x23
  2095  0043                     	ds	1
  2096  0044                     dtoa@w:
  2097                           
  2098                           ; 2 bytes @ 0x24
  2099  0044                     	ds	2
  2100  0046                     dtoa@s:
  2101                           
  2102                           ; 2 bytes @ 0x26
  2103  0046                     	ds	2
  2104  0048                     dtoa@n:
  2105                           
  2106                           ; 8 bytes @ 0x28
  2107  0048                     	ds	8
  2108  0050                     dtoa@i:
  2109                           
  2110                           ; 2 bytes @ 0x30
  2111  0050                     	ds	2
  2112  0052                     ?_vfpfcnvrt:
  2113  0052                     vfpfcnvrt@fmt:	
  2114                           ; 2 bytes @ 0x32
  2115                           
  2116                           
  2117                           ; 1 bytes @ 0x32
  2118  0052                     	ds	1
  2119  0053                     vfpfcnvrt@ap:
  2120                           
  2121                           ; 1 bytes @ 0x33
  2122  0053                     	ds	1
  2123  0054                     ??_vfpfcnvrt:
  2124                           
  2125                           ; 1 bytes @ 0x34
  2126  0054                     	ds	6
  2127  005A                     vfpfcnvrt@ll:
  2128                           
  2129                           ; 8 bytes @ 0x3A
  2130  005A                     	ds	8
  2131  0062                     _vfpfcnvrt$865:
  2132                           
  2133                           ; 2 bytes @ 0x42
  2134  0062                     	ds	2
  2135  0064                     vfpfcnvrt@fp:
  2136                           
  2137                           ; 1 bytes @ 0x44
  2138  0064                     	ds	1
  2139  0065                     ?_vfprintf:
  2140  0065                     vfprintf@fmt:	
  2141                           ; 2 bytes @ 0x45
  2142                           
  2143                           
  2144                           ; 2 bytes @ 0x45
  2145  0065                     	ds	2
  2146  0067                     vfprintf@ap:
  2147                           
  2148                           ; 1 bytes @ 0x47
  2149  0067                     	ds	1
  2150  0068                     ??_vfprintf:
  2151                           
  2152                           ; 1 bytes @ 0x48
  2153  0068                     	ds	2
  2154  006A                     vfprintf@fp:
  2155                           
  2156                           ; 1 bytes @ 0x4A
  2157  006A                     	ds	1
  2158  006B                     vfprintf@cfmt:
  2159                           
  2160                           ; 2 bytes @ 0x4B
  2161  006B                     	ds	4
  2162  006F                     printf@ap:
  2163                           
  2164                           ; 1 bytes @ 0x4F
  2165  006F                     	ds	1
  2166                           
  2167                           	psect	maintext
  2168  0158                     __pmaintext:	
  2169 ;;
  2170 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2171 ;;
  2172 ;; *************** function _main *****************
  2173 ;; Defined at:
  2174 ;;		line 79 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  data            2    6[BANK1 ] int 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : B3F/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2189 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2191 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2192 ;;Total ram usage:        4 bytes
  2193 ;; Hardware stack levels required when called:   11
  2194 ;; This function calls:
  2195 ;;		_init
  2196 ;;		_lcdInitialize
  2197 ;;		_lcdLocateCursor
  2198 ;;		_printf
  2199 ;; This function is called by:
  2200 ;;		Startup code after reset
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _main
  2206  0158                     _main:
  2207  0158                     l1973:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2210                           
  2211                           
  2212                           ;main.c: 80:     init();
  2213  0158  3182  222B  3181   	fcall	_init
  2214                           
  2215                           ;main.c: 81:     lcdInitialize();
  2216  015B  3180  20FB  3181   	fcall	_lcdInitialize
  2217  015E                     l1975:
  2218                           
  2219                           ;main.c: 82:     _delay((unsigned long)((100)*(32000000/4000.0)));
  2220  015E  3005               	movlw	5
  2221  015F  0141               	movlb	1	; select bank1
  2222  0160  00CE               	movwf	(??_main^(0+128)+1)
  2223  0161  300F               	movlw	15
  2224  0162  00CD               	movwf	??_main^(0+128)
  2225  0163  30F1               	movlw	241
  2226  0164                     u1827:
  2227  0164  0B89               	decfsz	9,f
  2228  0165  2964               	goto	u1827
  2229  0166  0BCD               	decfsz	??_main^(0+128),f
  2230  0167  2964               	goto	u1827
  2231  0168  0BCE               	decfsz	(??_main^(0+128)+1),f
  2232  0169  2964               	goto	u1827
  2233  016A                     l1977:
  2234                           
  2235                           ;main.c: 84:     {;main.c: 85:         lcdLocateCursor(1, 1);
  2236  016A  01F6               	clrf	lcdLocateCursor@pos_y
  2237  016B  0AF6               	incf	lcdLocateCursor@pos_y,f
  2238  016C  3001               	movlw	1
  2239  016D  3180  200F  3181   	fcall	_lcdLocateCursor
  2240  0170                     l1979:
  2241                           
  2242                           ;main.c: 86:         ADGO = 1;
  2243  0170  0141               	movlb	1	; select bank1
  2244  0171  1413               	bsf	19,0	;volatile
  2245  0172                     l158:	
  2246                           ;main.c: 87:         while(ADGO);
  2247                           
  2248  0172  1813               	btfsc	19,0	;volatile
  2249  0173  2975               	goto	u1811
  2250  0174  2976               	goto	u1810
  2251  0175                     u1811:
  2252  0175  2972               	goto	l158
  2253  0176                     u1810:
  2254  0176                     l1981:
  2255                           
  2256                           ;main.c: 88:         int data = ADRES;
  2257  0176  080D               	movf	13,w	;volatile
  2258  0177  00D0               	movwf	(main@data+1)^(0+128)
  2259  0178  080C               	movf	12,w	;volatile
  2260  0179  00CF               	movwf	main@data^(0+128)
  2261                           
  2262                           ;main.c: 89:         _delay((unsigned long)((1)*(32000000/4000.0)));
  2263  017A  300B               	movlw	11
  2264  017B  0141               	movlb	1	; select bank1
  2265  017C  00CD               	movwf	??_main^(0+128)
  2266  017D  3062               	movlw	98
  2267  017E                     u1837:
  2268  017E  0B89               	decfsz	9,f
  2269  017F  297E               	goto	u1837
  2270  0180  0BCD               	decfsz	??_main^(0+128),f
  2271  0181  297E               	goto	u1837
  2272  0182  0000               	nop
  2273  0183                     l1983:
  2274                           
  2275                           ;main.c: 90:         printf("%4d\n",data);
  2276  0183  3000               	movlw	low (STR_1| (0+32768))
  2277  0184  0141               	movlb	1	; select bank1
  2278  0185  00C9               	movwf	printf@fmt^(0+128)
  2279  0186  3090               	movlw	high (STR_1| (0+32768))
  2280  0187  00CA               	movwf	(printf@fmt^(0+128)+1)
  2281  0188  0850               	movf	(main@data+1)^(0+128),w
  2282  0189  00CC               	movwf	((?_printf+1)^(0+128)+2)
  2283  018A  084F               	movf	main@data^(0+128),w
  2284  018B  00CB               	movwf	(?_printf^(0+128)+2)
  2285  018C  3180  2032  3181   	fcall	_printf
  2286  018F  296A               	goto	l1977
  2287  0190  3180  2802         	ljmp	start
  2288  0192                     __end_of_main:
  2289                           
  2290                           	psect	text1
  2291  0032                     __ptext1:	
  2292 ;; *************** function _printf *****************
  2293 ;; Defined at:
  2294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  2297 ;;		 -> STR_1(5), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  ret             2    0        int 
  2300 ;;  ap              1   79[BANK0 ] PTR void [1]
  2301 ;;		 -> ?_printf(2), 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    0[BANK1 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2311 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2314 ;;      Totals:         1       3       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2315 ;;Total ram usage:        8 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:   10
  2318 ;; This function calls:
  2319 ;;		_vfprintf
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _printf
  2327  0032                     _printf:
  2328  0032                     l1947:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2331                           
  2332  0032  30CB               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2333  0033  00FD               	movwf	??_printf
  2334  0034  087D               	movf	??_printf,w
  2335  0035  0140               	movlb	0	; select bank0
  2336  0036  00EF               	movwf	printf@ap
  2337  0037                     l1949:
  2338  0037  0141               	movlb	1	; select bank1
  2339  0038  084A               	movf	(printf@fmt+1)^(0+128),w
  2340  0039  0140               	movlb	0	; select bank0
  2341  003A  00E6               	movwf	vfprintf@fmt+1
  2342  003B  0141               	movlb	1	; select bank1
  2343  003C  0849               	movf	printf@fmt^(0+128),w
  2344  003D  0140               	movlb	0	; select bank0
  2345  003E  00E5               	movwf	vfprintf@fmt
  2346  003F  306F               	movlw	(low (printf@ap| 0))& (0+255)
  2347  0040  00FD               	movwf	??_printf
  2348  0041  087D               	movf	??_printf,w
  2349  0042  00E7               	movwf	vfprintf@ap
  2350  0043  3000               	movlw	0
  2351  0044  3181  2127  3180   	fcall	_vfprintf
  2352  0047                     l781:
  2353  0047  0008               	return
  2354  0048                     __end_of_printf:
  2355                           
  2356                           	psect	text2
  2357  0127                     __ptext2:	
  2358 ;; *************** function _vfprintf *****************
  2359 ;; Defined at:
  2360 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  fp              1    wreg     PTR struct _IO_FILE
  2363 ;;		 -> NULL(0), 
  2364 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  2365 ;;		 -> STR_1(5), 
  2366 ;;  ap              1   71[BANK0 ] PTR PTR void 
  2367 ;;		 -> printf@ap(1), 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  2370 ;;		 -> NULL(0), 
  2371 ;;  cfmt            2   75[BANK0 ] PTR unsigned char 
  2372 ;;		 -> STR_1(5), 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  2   69[BANK0 ] int 
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2382 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2383 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2385 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2386 ;;Total ram usage:        8 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    9
  2389 ;; This function calls:
  2390 ;;		_vfpfcnvrt
  2391 ;; This function is called by:
  2392 ;;		_printf
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _vfprintf
  2398  0127                     _vfprintf:
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2402                           ;vfprintf@fp stored from wreg
  2403  0127  0140               	movlb	0	; select bank0
  2404  0128  00EA               	movwf	vfprintf@fp
  2405  0129                     l1843:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2408  0129  0866               	movf	vfprintf@fmt+1,w
  2409  012A  00EC               	movwf	vfprintf@cfmt+1
  2410  012B  0865               	movf	vfprintf@fmt,w
  2411  012C  00EB               	movwf	vfprintf@cfmt
  2412  012D                     l1845:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2415  012D  0141               	movlb	1	; select bank1
  2416  012E  01A0               	clrf	_nout^(0+128)
  2417  012F  01A1               	clrf	(_nout+1)^(0+128)
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2420  0130  2945               	goto	l1849
  2421  0131                     l1847:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2424  0131  306B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2425  0132  00E8               	movwf	??_vfprintf
  2426  0133  0868               	movf	??_vfprintf,w
  2427  0134  00D2               	movwf	vfpfcnvrt@fmt
  2428  0135  0867               	movf	vfprintf@ap,w
  2429  0136  00E9               	movwf	??_vfprintf+1
  2430  0137  0869               	movf	??_vfprintf+1,w
  2431  0138  00D3               	movwf	vfpfcnvrt@ap
  2432  0139  086A               	movf	vfprintf@fp,w
  2433  013A  3185  2527  3181   	fcall	_vfpfcnvrt
  2434  013D  0140               	movlb	0	; select bank0
  2435  013E  0852               	movf	?_vfpfcnvrt,w
  2436  013F  0141               	movlb	1	; select bank1
  2437  0140  07A0               	addwf	_nout^(0+128),f
  2438  0141  0140               	movlb	0	; select bank0
  2439  0142  0853               	movf	?_vfpfcnvrt+1,w
  2440  0143  0141               	movlb	1	; select bank1
  2441  0144  3DA1               	addwfc	(_nout+1)^(0+128),f
  2442  0145                     l1849:
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2445  0145  0140               	movlb	0	; select bank0
  2446  0146  086B               	movf	vfprintf@cfmt,w
  2447  0147  0084               	movwf	4
  2448  0148  086C               	movf	vfprintf@cfmt+1,w
  2449  0149  0085               	movwf	5
  2450  014A  0012               	moviw fsr0++
  2451  014B  1D03               	btfss	3,2
  2452  014C  294E               	goto	u1671
  2453  014D  294F               	goto	u1670
  2454  014E                     u1671:
  2455  014E  2931               	goto	l1847
  2456  014F                     u1670:
  2457  014F                     l1851:
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2460  014F  0141               	movlb	1	; select bank1
  2461  0150  0821               	movf	(_nout+1)^(0+128),w
  2462  0151  0140               	movlb	0	; select bank0
  2463  0152  00E6               	movwf	?_vfprintf+1
  2464  0153  0141               	movlb	1	; select bank1
  2465  0154  0820               	movf	_nout^(0+128),w
  2466  0155  0140               	movlb	0	; select bank0
  2467  0156  00E5               	movwf	?_vfprintf
  2468  0157                     l867:
  2469  0157  0008               	return
  2470  0158                     __end_of_vfprintf:
  2471                           
  2472                           	psect	text3
  2473  0527                     __ptext3:	
  2474 ;; *************** function _vfpfcnvrt *****************
  2475 ;; Defined at:
  2476 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  fp              1    wreg     PTR struct _IO_FILE
  2479 ;;		 -> NULL(0), 
  2480 ;;  fmt             1   50[BANK0 ] PTR PTR unsigned char 
  2481 ;;		 -> vfprintf@cfmt(2), 
  2482 ;;  ap              1   51[BANK0 ] PTR PTR void 
  2483 ;;		 -> printf@ap(1), 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  fp              1   68[BANK0 ] PTR struct _IO_FILE
  2486 ;;		 -> NULL(0), 
  2487 ;;  ll              8   58[BANK0 ] long long 
  2488 ;;  llu             8    0        unsigned long long 
  2489 ;;  f               4    0        unsigned long long 
  2490 ;;  ct              3    0        unsigned char [3]
  2491 ;;  vp              2    0        PTR void 
  2492 ;;  i               2    0        int 
  2493 ;;  done            2    0        int 
  2494 ;;  cp              2    0        PTR unsigned char 
  2495 ;;  c               1    0        unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  2   50[BANK0 ] int 
  2498 ;; Registers used:
  2499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2506 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2507 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2508 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2509 ;;Total ram usage:       19 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    8
  2512 ;; This function calls:
  2513 ;;		_atoi
  2514 ;;		_dtoa
  2515 ;;		_fputc
  2516 ;;		_isdigit
  2517 ;; This function is called by:
  2518 ;;		_vfprintf
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _vfpfcnvrt
  2524  0527                     _vfpfcnvrt:
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2528                           ;vfpfcnvrt@fp stored from wreg
  2529  0527  0140               	movlb	0	; select bank0
  2530  0528  00E4               	movwf	vfpfcnvrt@fp
  2531  0529                     l1771:
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2534  0529  0852               	movf	vfpfcnvrt@fmt,w
  2535  052A  0086               	movwf	6
  2536  052B  0187               	clrf	7
  2537  052C  3F40               	moviw [0]fsr1
  2538  052D  00D4               	movwf	??_vfpfcnvrt
  2539  052E  3F41               	moviw [1]fsr1
  2540  052F  00D5               	movwf	??_vfpfcnvrt+1
  2541  0530  0854               	movf	??_vfpfcnvrt,w
  2542  0531  0084               	movwf	4
  2543  0532  0855               	movf	??_vfpfcnvrt+1,w
  2544  0533  0085               	movwf	5
  2545  0534  0012               	moviw fsr0++
  2546  0535  3A25               	xorlw	37
  2547  0536  1D03               	btfss	3,2
  2548  0537  2D39               	goto	u1581
  2549  0538  2D3A               	goto	u1580
  2550  0539                     u1581:
  2551  0539  2E52               	goto	l1829
  2552  053A                     u1580:
  2553  053A                     l1773:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2556  053A  0852               	movf	vfpfcnvrt@fmt,w
  2557  053B  0086               	movwf	6
  2558  053C  0187               	clrf	7
  2559  053D  3001               	movlw	1
  2560  053E  0781               	addwf	1,f
  2561  053F  3141               	addfsr 1,1
  2562  0540  1803               	skipnc
  2563  0541  0A81               	incf	1,f
  2564  0542                     l1775:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2567  0542  0141               	movlb	1	; select bank1
  2568  0543  01A2               	clrf	_width^(0+128)
  2569  0544  01A3               	clrf	(_width+1)^(0+128)
  2570  0545  01A6               	clrf	_flags^(0+128)
  2571  0546  01A7               	clrf	(_flags+1)^(0+128)
  2572  0547                     l1777:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2575  0547  30FF               	movlw	255
  2576  0548  00A4               	movwf	_prec^(0+128)
  2577  0549  30FF               	movlw	255
  2578  054A  00A5               	movwf	(_prec^(0+128)+1)
  2579  054B                     l1779:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2582  054B  0140               	movlb	0	; select bank0
  2583  054C  0852               	movf	vfpfcnvrt@fmt,w
  2584  054D  0086               	movwf	6
  2585  054E  0187               	clrf	7
  2586  054F  3F40               	moviw [0]fsr1
  2587  0550  00D4               	movwf	??_vfpfcnvrt
  2588  0551  3F41               	moviw [1]fsr1
  2589  0552  00D5               	movwf	??_vfpfcnvrt+1
  2590  0553  0854               	movf	??_vfpfcnvrt,w
  2591  0554  0084               	movwf	4
  2592  0555  0855               	movf	??_vfpfcnvrt+1,w
  2593  0556  0085               	movwf	5
  2594  0557  0012               	moviw fsr0++
  2595  0558  3A2A               	xorlw	42
  2596  0559  1D03               	btfss	3,2
  2597  055A  2D5C               	goto	u1591
  2598  055B  2D5D               	goto	u1590
  2599  055C                     u1591:
  2600  055C  2D7D               	goto	l1791
  2601  055D                     u1590:
  2602  055D                     l1781:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2605  055D  0852               	movf	vfpfcnvrt@fmt,w
  2606  055E  0086               	movwf	6
  2607  055F  0187               	clrf	7
  2608  0560  3001               	movlw	1
  2609  0561  0781               	addwf	1,f
  2610  0562  3141               	addfsr 1,1
  2611  0563  1803               	skipnc
  2612  0564  0A81               	incf	1,f
  2613  0565                     l1783:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2616  0565  0853               	movf	vfpfcnvrt@ap,w
  2617  0566  0086               	movwf	6
  2618  0567  0187               	clrf	7
  2619  0568  0801               	movf	1,w
  2620  0569  0084               	movwf	4
  2621  056A  0185               	clrf	5
  2622  056B  3002               	movlw	2
  2623  056C  0781               	addwf	1,f
  2624  056D  3F00               	moviw [0]fsr0
  2625  056E  0141               	movlb	1	; select bank1
  2626  056F  00A2               	movwf	_width^(0+128)
  2627  0570  3F01               	moviw [1]fsr0
  2628  0571  00A3               	movwf	(_width+1)^(0+128)
  2629  0572                     l1785:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2632  0572  1FA3               	btfss	(_width+1)^(0+128),7
  2633  0573  2D75               	goto	u1601
  2634  0574  2D76               	goto	u1600
  2635  0575                     u1601:
  2636  0575  2DBF               	goto	l1801
  2637  0576                     u1600:
  2638  0576                     l1787:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2641  0576  1426               	bsf	_flags^(0+128),0
  2642  0577                     l1789:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2645  0577  09A2               	comf	_width^(0+128),f
  2646  0578  09A3               	comf	(_width+1)^(0+128),f
  2647  0579  0AA2               	incf	_width^(0+128),f
  2648  057A  1903               	skipnz
  2649  057B  0AA3               	incf	(_width+1)^(0+128),f
  2650  057C  2DBF               	goto	l1801
  2651  057D                     l1791:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2654  057D  0852               	movf	vfpfcnvrt@fmt,w
  2655  057E  0086               	movwf	6
  2656  057F  0187               	clrf	7
  2657  0580  3F40               	moviw [0]fsr1
  2658  0581  00F6               	movwf	atoi@s
  2659  0582  3F41               	moviw [1]fsr1
  2660  0583  00F7               	movwf	atoi@s+1
  2661  0584  3182  228D  3185   	fcall	_atoi
  2662  0587  0877               	movf	?_atoi+1,w
  2663  0588  0141               	movlb	1	; select bank1
  2664  0589  00A3               	movwf	(_width+1)^(0+128)
  2665  058A  0876               	movf	?_atoi,w
  2666  058B  00A2               	movwf	_width^(0+128)
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2669  058C  2D95               	goto	l1795
  2670  058D                     l1793:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2673  058D  0852               	movf	vfpfcnvrt@fmt,w
  2674  058E  0086               	movwf	6
  2675  058F  0187               	clrf	7
  2676  0590  3001               	movlw	1
  2677  0591  0781               	addwf	1,f
  2678  0592  3141               	addfsr 1,1
  2679  0593  1803               	skipnc
  2680  0594  0A81               	incf	1,f
  2681  0595                     l1795:
  2682  0595  0140               	movlb	0	; select bank0
  2683  0596  0852               	movf	vfpfcnvrt@fmt,w
  2684  0597  0086               	movwf	6
  2685  0598  0187               	clrf	7
  2686  0599  3F40               	moviw [0]fsr1
  2687  059A  00D4               	movwf	??_vfpfcnvrt
  2688  059B  3F41               	moviw [1]fsr1
  2689  059C  00D5               	movwf	??_vfpfcnvrt+1
  2690  059D  0854               	movf	??_vfpfcnvrt,w
  2691  059E  0084               	movwf	4
  2692  059F  0855               	movf	??_vfpfcnvrt+1,w
  2693  05A0  0085               	movwf	5
  2694  05A1  0800               	movf	0,w	;code access
  2695  05A2  3ED0               	addlw	208
  2696  05A3  00D6               	movwf	??_vfpfcnvrt+2
  2697  05A4  30FF               	movlw	255
  2698  05A5  1803               	skipnc
  2699  05A6  3000               	movlw	0
  2700  05A7  00D7               	movwf	??_vfpfcnvrt+3
  2701  05A8  3000               	movlw	0
  2702  05A9  0257               	subwf	??_vfpfcnvrt+3,w
  2703  05AA  300A               	movlw	10
  2704  05AB  1903               	skipnz
  2705  05AC  0256               	subwf	??_vfpfcnvrt+2,w
  2706  05AD  1C03               	skipc
  2707  05AE  2DB0               	goto	u1611
  2708  05AF  2DB2               	goto	u1610
  2709  05B0                     u1611:
  2710  05B0  3001               	movlw	1
  2711  05B1  2DB3               	goto	u1620
  2712  05B2                     u1610:
  2713  05B2  3000               	movlw	0
  2714  05B3                     u1620:
  2715  05B3  00D8               	movwf	??_vfpfcnvrt+4
  2716  05B4  01D9               	clrf	??_vfpfcnvrt+5
  2717  05B5  0858               	movf	??_vfpfcnvrt+4,w
  2718  05B6  00E2               	movwf	_vfpfcnvrt$865
  2719  05B7  0859               	movf	??_vfpfcnvrt+5,w
  2720  05B8  00E3               	movwf	_vfpfcnvrt$865+1
  2721  05B9                     l1799:
  2722  05B9  0862               	movf	_vfpfcnvrt$865,w
  2723  05BA  0463               	iorwf	_vfpfcnvrt$865+1,w
  2724  05BB  1D03               	btfss	3,2
  2725  05BC  2DBE               	goto	u1631
  2726  05BD  2DBF               	goto	u1630
  2727  05BE                     u1631:
  2728  05BE  2D8D               	goto	l1793
  2729  05BF                     u1630:
  2730  05BF                     l1801:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2733  05BF  0140               	movlb	0	; select bank0
  2734  05C0  0852               	movf	vfpfcnvrt@fmt,w
  2735  05C1  0086               	movwf	6
  2736  05C2  0187               	clrf	7
  2737  05C3  3F40               	moviw [0]fsr1
  2738  05C4  00D4               	movwf	??_vfpfcnvrt
  2739  05C5  3F41               	moviw [1]fsr1
  2740  05C6  00D5               	movwf	??_vfpfcnvrt+1
  2741  05C7  0854               	movf	??_vfpfcnvrt,w
  2742  05C8  0084               	movwf	4
  2743  05C9  0855               	movf	??_vfpfcnvrt+1,w
  2744  05CA  0085               	movwf	5
  2745  05CB  0012               	moviw fsr0++
  2746  05CC  3A64               	xorlw	100
  2747  05CD  1903               	btfsc	3,2
  2748  05CE  2DD0               	goto	u1641
  2749  05CF  2DD1               	goto	u1640
  2750  05D0                     u1641:
  2751  05D0  2DE2               	goto	l1805
  2752  05D1                     u1640:
  2753  05D1                     l1803:
  2754  05D1  0852               	movf	vfpfcnvrt@fmt,w
  2755  05D2  0086               	movwf	6
  2756  05D3  0187               	clrf	7
  2757  05D4  3F40               	moviw [0]fsr1
  2758  05D5  00D4               	movwf	??_vfpfcnvrt
  2759  05D6  3F41               	moviw [1]fsr1
  2760  05D7  00D5               	movwf	??_vfpfcnvrt+1
  2761  05D8  0854               	movf	??_vfpfcnvrt,w
  2762  05D9  0084               	movwf	4
  2763  05DA  0855               	movf	??_vfpfcnvrt+1,w
  2764  05DB  0085               	movwf	5
  2765  05DC  0012               	moviw fsr0++
  2766  05DD  3A69               	xorlw	105
  2767  05DE  1D03               	btfss	3,2
  2768  05DF  2DE1               	goto	u1651
  2769  05E0  2DE2               	goto	u1650
  2770  05E1                     u1651:
  2771  05E1  2E1D               	goto	l1813
  2772  05E2                     u1650:
  2773  05E2                     l1805:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2776  05E2  0852               	movf	vfpfcnvrt@fmt,w
  2777  05E3  0086               	movwf	6
  2778  05E4  0187               	clrf	7
  2779  05E5  3001               	movlw	1
  2780  05E6  0781               	addwf	1,f
  2781  05E7  3141               	addfsr 1,1
  2782  05E8  1803               	skipnc
  2783  05E9  0A81               	incf	1,f
  2784  05EA                     l1807:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2787  05EA  0853               	movf	vfpfcnvrt@ap,w
  2788  05EB  0086               	movwf	6
  2789  05EC  0187               	clrf	7
  2790  05ED  0801               	movf	1,w
  2791  05EE  0084               	movwf	4
  2792  05EF  0185               	clrf	5
  2793  05F0  3002               	movlw	2
  2794  05F1  0781               	addwf	1,f
  2795  05F2  3F00               	moviw [0]fsr0
  2796  05F3  00D4               	movwf	??_vfpfcnvrt
  2797  05F4  3F01               	moviw [1]fsr0
  2798  05F5  00D5               	movwf	??_vfpfcnvrt+1
  2799  05F6  0854               	movf	??_vfpfcnvrt,w
  2800  05F7  00DA               	movwf	vfpfcnvrt@ll
  2801  05F8  0855               	movf	??_vfpfcnvrt+1,w
  2802  05F9  00DB               	movwf	vfpfcnvrt@ll+1
  2803  05FA  0D89               	rlf	9,f
  2804  05FB  3B89               	subwfb	9,f
  2805  05FC  0989               	comf	9,f
  2806  05FD  00DC               	movwf	vfpfcnvrt@ll+2
  2807  05FE  00DD               	movwf	vfpfcnvrt@ll+3
  2808  05FF  00DE               	movwf	vfpfcnvrt@ll+4
  2809  0600  00DF               	movwf	vfpfcnvrt@ll+5
  2810  0601  00E0               	movwf	vfpfcnvrt@ll+6
  2811  0602  00E1               	movwf	vfpfcnvrt@ll+7
  2812  0603                     l1809:
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2815  0603  085A               	movf	vfpfcnvrt@ll,w
  2816  0604  00B4               	movwf	dtoa@d
  2817  0605  085B               	movf	vfpfcnvrt@ll+1,w
  2818  0606  00B5               	movwf	dtoa@d+1
  2819  0607  085C               	movf	vfpfcnvrt@ll+2,w
  2820  0608  00B6               	movwf	dtoa@d+2
  2821  0609  085D               	movf	vfpfcnvrt@ll+3,w
  2822  060A  00B7               	movwf	dtoa@d+3
  2823  060B  085E               	movf	vfpfcnvrt@ll+4,w
  2824  060C  00B8               	movwf	dtoa@d+4
  2825  060D  085F               	movf	vfpfcnvrt@ll+5,w
  2826  060E  00B9               	movwf	dtoa@d+5
  2827  060F  0860               	movf	vfpfcnvrt@ll+6,w
  2828  0610  00BA               	movwf	dtoa@d+6
  2829  0611  0861               	movf	vfpfcnvrt@ll+7,w
  2830  0612  00BB               	movwf	dtoa@d+7
  2831  0613  0864               	movf	vfpfcnvrt@fp,w
  2832  0614  3186  2676  3185   	fcall	_dtoa
  2833  0617  0140               	movlb	0	; select bank0
  2834  0618  0835               	movf	?_dtoa+1,w
  2835  0619  00D3               	movwf	?_vfpfcnvrt+1
  2836  061A  0834               	movf	?_dtoa,w
  2837  061B  00D2               	movwf	?_vfpfcnvrt
  2838  061C  2E75               	goto	l860
  2839  061D                     l1813:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2842  061D  0852               	movf	vfpfcnvrt@fmt,w
  2843  061E  0086               	movwf	6
  2844  061F  0187               	clrf	7
  2845  0620  3F40               	moviw [0]fsr1
  2846  0621  00D4               	movwf	??_vfpfcnvrt
  2847  0622  3F41               	moviw [1]fsr1
  2848  0623  00D5               	movwf	??_vfpfcnvrt+1
  2849  0624  0854               	movf	??_vfpfcnvrt,w
  2850  0625  0084               	movwf	4
  2851  0626  0855               	movf	??_vfpfcnvrt+1,w
  2852  0627  0085               	movwf	5
  2853  0628  0012               	moviw fsr0++
  2854  0629  3A25               	xorlw	37
  2855  062A  1D03               	btfss	3,2
  2856  062B  2E2D               	goto	u1661
  2857  062C  2E2E               	goto	u1660
  2858  062D                     u1661:
  2859  062D  2E47               	goto	l1823
  2860  062E                     u1660:
  2861  062E                     l1815:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2864  062E  0852               	movf	vfpfcnvrt@fmt,w
  2865  062F  0086               	movwf	6
  2866  0630  0187               	clrf	7
  2867  0631  3001               	movlw	1
  2868  0632  0781               	addwf	1,f
  2869  0633  3141               	addfsr 1,1
  2870  0634  1803               	skipnc
  2871  0635  0A81               	incf	1,f
  2872  0636                     l1817:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2875  0636  3025               	movlw	37
  2876  0637  00F8               	movwf	fputc@c
  2877  0638  3000               	movlw	0
  2878  0639  00F9               	movwf	fputc@c+1
  2879  063A  0864               	movf	vfpfcnvrt@fp,w
  2880  063B  00D4               	movwf	??_vfpfcnvrt
  2881  063C  0854               	movf	??_vfpfcnvrt,w
  2882  063D  00FA               	movwf	fputc@fp
  2883  063E  3181  2192  3185   	fcall	_fputc
  2884  0641                     l1819:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2887  0641  3001               	movlw	1
  2888  0642  0140               	movlb	0	; select bank0
  2889  0643  00D2               	movwf	?_vfpfcnvrt
  2890  0644  3000               	movlw	0
  2891  0645  00D3               	movwf	?_vfpfcnvrt+1
  2892  0646  2E75               	goto	l860
  2893  0647                     l1823:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2896  0647  0852               	movf	vfpfcnvrt@fmt,w
  2897  0648  0086               	movwf	6
  2898  0649  0187               	clrf	7
  2899  064A  3001               	movlw	1
  2900  064B  0781               	addwf	1,f
  2901  064C  3141               	addfsr 1,1
  2902  064D  1803               	skipnc
  2903  064E  0A81               	incf	1,f
  2904  064F                     l1825:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2907  064F  01D2               	clrf	?_vfpfcnvrt
  2908  0650  01D3               	clrf	?_vfpfcnvrt+1
  2909  0651  2E75               	goto	l860
  2910  0652                     l1829:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2913  0652  0852               	movf	vfpfcnvrt@fmt,w
  2914  0653  0086               	movwf	6
  2915  0654  0187               	clrf	7
  2916  0655  3F40               	moviw [0]fsr1
  2917  0656  00D4               	movwf	??_vfpfcnvrt
  2918  0657  3F41               	moviw [1]fsr1
  2919  0658  00D5               	movwf	??_vfpfcnvrt+1
  2920  0659  0854               	movf	??_vfpfcnvrt,w
  2921  065A  0084               	movwf	4
  2922  065B  0855               	movf	??_vfpfcnvrt+1,w
  2923  065C  0085               	movwf	5
  2924  065D  0800               	movf	0,w	;code access
  2925  065E  00D6               	movwf	??_vfpfcnvrt+2
  2926  065F  01D7               	clrf	??_vfpfcnvrt+3
  2927  0660  0856               	movf	??_vfpfcnvrt+2,w
  2928  0661  00F8               	movwf	fputc@c
  2929  0662  0857               	movf	??_vfpfcnvrt+3,w
  2930  0663  00F9               	movwf	fputc@c+1
  2931  0664  0864               	movf	vfpfcnvrt@fp,w
  2932  0665  00D8               	movwf	??_vfpfcnvrt+4
  2933  0666  0858               	movf	??_vfpfcnvrt+4,w
  2934  0667  00FA               	movwf	fputc@fp
  2935  0668  3181  2192  3185   	fcall	_fputc
  2936  066B                     l1831:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2939  066B  0140               	movlb	0	; select bank0
  2940  066C  0852               	movf	vfpfcnvrt@fmt,w
  2941  066D  0086               	movwf	6
  2942  066E  0187               	clrf	7
  2943  066F  3001               	movlw	1
  2944  0670  0781               	addwf	1,f
  2945  0671  3141               	addfsr 1,1
  2946  0672  1803               	skipnc
  2947  0673  0A81               	incf	1,f
  2948  0674  2E41               	goto	l1819
  2949  0675                     l860:
  2950  0675  0008               	return
  2951  0676                     __end_of_vfpfcnvrt:
  2952                           
  2953                           	psect	text4
  2954  0676                     __ptext4:	
  2955 ;; *************** function _dtoa *****************
  2956 ;; Defined at:
  2957 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  fp              1    wreg     PTR struct _IO_FILE
  2960 ;;		 -> NULL(0), 
  2961 ;;  d               8   20[BANK0 ] long long 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  fp              1   35[BANK0 ] PTR struct _IO_FILE
  2964 ;;		 -> NULL(0), 
  2965 ;;  n               8   40[BANK0 ] long long 
  2966 ;;  i               2   48[BANK0 ] int 
  2967 ;;  s               2   38[BANK0 ] int 
  2968 ;;  w               2   36[BANK0 ] int 
  2969 ;;  p               2   33[BANK0 ] int 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2   20[BANK0 ] int 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  2979 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2980 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2981 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2982 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  2983 ;;Total ram usage:       30 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    7
  2986 ;; This function calls:
  2987 ;;		___aodiv
  2988 ;;		___aomod
  2989 ;;		_abs
  2990 ;;		_pad
  2991 ;; This function is called by:
  2992 ;;		_vfpfcnvrt
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _dtoa
  2998  0676                     _dtoa:
  2999                           
  3000                           ;incstack = 0
  3001                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3002                           ;dtoa@fp stored from wreg
  3003  0676  0140               	movlb	0	; select bank0
  3004  0677  00C3               	movwf	dtoa@fp
  3005  0678                     l1667:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3008  0678  0834               	movf	dtoa@d,w
  3009  0679  00C8               	movwf	dtoa@n
  3010  067A  0835               	movf	dtoa@d+1,w
  3011  067B  00C9               	movwf	dtoa@n+1
  3012  067C  0836               	movf	dtoa@d+2,w
  3013  067D  00CA               	movwf	dtoa@n+2
  3014  067E  0837               	movf	dtoa@d+3,w
  3015  067F  00CB               	movwf	dtoa@n+3
  3016  0680  0838               	movf	dtoa@d+4,w
  3017  0681  00CC               	movwf	dtoa@n+4
  3018  0682  0839               	movf	dtoa@d+5,w
  3019  0683  00CD               	movwf	dtoa@n+5
  3020  0684  083A               	movf	dtoa@d+6,w
  3021  0685  00CE               	movwf	dtoa@n+6
  3022  0686  083B               	movf	dtoa@d+7,w
  3023  0687  00CF               	movwf	dtoa@n+7
  3024  0688                     l1669:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3027  0688  3048               	movlw	low dtoa@n
  3028  0689  0086               	movwf	6
  3029  068A  3000               	movlw	high dtoa@n
  3030  068B  0087               	movwf	7
  3031  068C  3F47               	moviw [7]fsr1
  3032  068D  00BC               	movwf	??_dtoa
  3033  068E  1BBC               	btfsc	??_dtoa,7
  3034  068F  2E91               	goto	u1351
  3035  0690  2E93               	goto	u1350
  3036  0691                     u1351:
  3037  0691  3001               	movlw	1
  3038  0692  2E94               	goto	u1360
  3039  0693                     u1350:
  3040  0693  3000               	movlw	0
  3041  0694                     u1360:
  3042  0694  0140               	movlb	0	; select bank0
  3043  0695  00BD               	movwf	??_dtoa+1
  3044  0696  01BE               	clrf	??_dtoa+2
  3045  0697  083D               	movf	??_dtoa+1,w
  3046  0698  00C6               	movwf	dtoa@s
  3047  0699  083E               	movf	??_dtoa+2,w
  3048  069A  00C7               	movwf	dtoa@s+1
  3049  069B                     l1671:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3052  069B  0846               	movf	dtoa@s,w
  3053  069C  0447               	iorwf	dtoa@s+1,w
  3054  069D  1903               	btfsc	3,2
  3055  069E  2EA0               	goto	u1371
  3056  069F  2EA1               	goto	u1370
  3057  06A0                     u1371:
  3058  06A0  2EBF               	goto	l820
  3059  06A1                     u1370:
  3060  06A1                     l1673:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3063  06A1  09C8               	comf	dtoa@n,f
  3064  06A2  09C9               	comf	dtoa@n+1,f
  3065  06A3  09CA               	comf	dtoa@n+2,f
  3066  06A4  09CB               	comf	dtoa@n+3,f
  3067  06A5  09CC               	comf	dtoa@n+4,f
  3068  06A6  09CD               	comf	dtoa@n+5,f
  3069  06A7  09CE               	comf	dtoa@n+6,f
  3070  06A8  09CF               	comf	dtoa@n+7,f
  3071  06A9  0AC8               	incf	dtoa@n,f
  3072  06AA  1D03               	skipz
  3073  06AB  2EBF               	goto	u138lld
  3074  06AC  0AC9               	incf	dtoa@n+1,f
  3075  06AD  1D03               	skipz
  3076  06AE  2EBF               	goto	u138lld
  3077  06AF  0ACA               	incf	dtoa@n+2,f
  3078  06B0  1D03               	skipz
  3079  06B1  2EBF               	goto	u138lld
  3080  06B2  0ACB               	incf	dtoa@n+3,f
  3081  06B3  1D03               	skipz
  3082  06B4  2EBF               	goto	u138lld
  3083  06B5  0ACC               	incf	dtoa@n+4,f
  3084  06B6  1D03               	skipz
  3085  06B7  2EBF               	goto	u138lld
  3086  06B8  0ACD               	incf	dtoa@n+5,f
  3087  06B9  1D03               	skipz
  3088  06BA  2EBF               	goto	u138lld
  3089  06BB  0ACE               	incf	dtoa@n+6,f
  3090  06BC  1D03               	skipz
  3091  06BD  2EBF               	goto	u138lld
  3092  06BE  0ACF               	incf	dtoa@n+7,f
  3093  06BF                     u138lld:
  3094  06BF                     l820:	
  3095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 297:     }
  3096                           
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3099  06BF  0141               	movlb	1	; select bank1
  3100  06C0  1BA5               	btfsc	(_prec+1)^(0+128),7
  3101  06C1  2EC3               	goto	u1391
  3102  06C2  2EC4               	goto	u1390
  3103  06C3                     u1391:
  3104  06C3  2EC8               	goto	l821
  3105  06C4                     u1390:
  3106  06C4                     l1675:
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3109  06C4  30FD               	movlw	253
  3110  06C5  05A6               	andwf	_flags^(0+128),f
  3111  06C6  30FF               	movlw	255
  3112  06C7  05A7               	andwf	(_flags+1)^(0+128),f
  3113  06C8                     l821:	
  3114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 302:     }
  3115                           
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3118  06C8  0825               	movf	(_prec+1)^(0+128),w
  3119  06C9  3A80               	xorlw	128
  3120  06CA  0140               	movlb	0	; select bank0
  3121  06CB  00BC               	movwf	??_dtoa
  3122  06CC  3080               	movlw	128
  3123  06CD  023C               	subwf	??_dtoa,w
  3124  06CE  1D03               	skipz
  3125  06CF  2ED3               	goto	u1405
  3126  06D0  3001               	movlw	1
  3127  06D1  0141               	movlb	1	; select bank1
  3128  06D2  0224               	subwf	_prec^(0+128),w
  3129  06D3                     u1405:
  3130  06D3  1803               	skipnc
  3131  06D4  2ED6               	goto	u1401
  3132  06D5  2ED7               	goto	u1400
  3133  06D6                     u1401:
  3134  06D6  2EDD               	goto	l1679
  3135  06D7                     u1400:
  3136  06D7                     l1677:
  3137  06D7  3001               	movlw	1
  3138  06D8  0140               	movlb	0	; select bank0
  3139  06D9  00C1               	movwf	dtoa@p
  3140  06DA  3000               	movlw	0
  3141  06DB  00C2               	movwf	dtoa@p+1
  3142  06DC  2EE5               	goto	l825
  3143  06DD                     l1679:
  3144  06DD  0141               	movlb	1	; select bank1
  3145  06DE  0825               	movf	(_prec+1)^(0+128),w
  3146  06DF  0140               	movlb	0	; select bank0
  3147  06E0  00C2               	movwf	dtoa@p+1
  3148  06E1  0141               	movlb	1	; select bank1
  3149  06E2  0824               	movf	_prec^(0+128),w
  3150  06E3  0140               	movlb	0	; select bank0
  3151  06E4  00C1               	movwf	dtoa@p
  3152  06E5                     l825:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3155  06E5  0141               	movlb	1	; select bank1
  3156  06E6  0823               	movf	(_width+1)^(0+128),w
  3157  06E7  0140               	movlb	0	; select bank0
  3158  06E8  00C5               	movwf	dtoa@w+1
  3159  06E9  0141               	movlb	1	; select bank1
  3160  06EA  0822               	movf	_width^(0+128),w
  3161  06EB  0140               	movlb	0	; select bank0
  3162  06EC  00C4               	movwf	dtoa@w
  3163  06ED                     l1681:
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3166  06ED  0846               	movf	dtoa@s,w
  3167  06EE  0447               	iorwf	dtoa@s+1,w
  3168  06EF  1D03               	btfss	3,2
  3169  06F0  2EF2               	goto	u1411
  3170  06F1  2EF3               	goto	u1410
  3171  06F2                     u1411:
  3172  06F2  2EF8               	goto	l1685
  3173  06F3                     u1410:
  3174  06F3                     l1683:
  3175  06F3  0141               	movlb	1	; select bank1
  3176  06F4  1D26               	btfss	_flags^(0+128),2
  3177  06F5  2EF7               	goto	u1421
  3178  06F6  2EF8               	goto	u1420
  3179  06F7                     u1421:
  3180  06F7  2EFD               	goto	l826
  3181  06F8                     u1420:
  3182  06F8                     l1685:
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3185  06F8  30FF               	movlw	255
  3186  06F9  0140               	movlb	0	; select bank0
  3187  06FA  07C4               	addwf	dtoa@w,f
  3188  06FB  30FF               	movlw	255
  3189  06FC  3DC5               	addwfc	dtoa@w+1,f
  3190  06FD                     l826:	
  3191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 307:     }
  3192                           
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3195  06FD  301F               	movlw	31
  3196  06FE  0140               	movlb	0	; select bank0
  3197  06FF  00D0               	movwf	dtoa@i
  3198  0700  3000               	movlw	0
  3199  0701  00D1               	movwf	dtoa@i+1
  3200  0702                     l1687:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3203  0702  0141               	movlb	1	; select bank1
  3204  0703  01C8               	clrf	(_dbuf^(0+128)+31)
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3207  0704  2F6D               	goto	l829
  3208  0705                     l1689:
  3209                           
  3210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3211  0705  30FF               	movlw	255
  3212  0706  0140               	movlb	0	; select bank0
  3213  0707  07D0               	addwf	dtoa@i,f
  3214  0708  30FF               	movlw	255
  3215  0709  3DD1               	addwfc	dtoa@i+1,f
  3216  070A                     l1691:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3219  070A  300A               	movlw	10
  3220  070B  00A0               	movwf	___aomod@divisor
  3221  070C  01A1               	clrf	___aomod@divisor+1
  3222  070D  01A2               	clrf	___aomod@divisor+2
  3223  070E  01A3               	clrf	___aomod@divisor+3
  3224  070F  01A4               	clrf	___aomod@divisor+4
  3225  0710  01A5               	clrf	___aomod@divisor+5
  3226  0711  01A6               	clrf	___aomod@divisor+6
  3227  0712  01A7               	clrf	___aomod@divisor+7
  3228  0713  0848               	movf	dtoa@n,w
  3229  0714  00A8               	movwf	___aomod@dividend
  3230  0715  0849               	movf	dtoa@n+1,w
  3231  0716  00A9               	movwf	___aomod@dividend+1
  3232  0717  084A               	movf	dtoa@n+2,w
  3233  0718  00AA               	movwf	___aomod@dividend+2
  3234  0719  084B               	movf	dtoa@n+3,w
  3235  071A  00AB               	movwf	___aomod@dividend+3
  3236  071B  084C               	movf	dtoa@n+4,w
  3237  071C  00AC               	movwf	___aomod@dividend+4
  3238  071D  084D               	movf	dtoa@n+5,w
  3239  071E  00AD               	movwf	___aomod@dividend+5
  3240  071F  084E               	movf	dtoa@n+6,w
  3241  0720  00AE               	movwf	___aomod@dividend+6
  3242  0721  084F               	movf	dtoa@n+7,w
  3243  0722  00AF               	movwf	___aomod@dividend+7
  3244  0723  3183  233C  3186   	fcall	___aomod
  3245  0726  0140               	movlb	0	; select bank0
  3246  0727  0821               	movf	?___aomod+1,w
  3247  0728  00F4               	movwf	abs@a+1
  3248  0729  0820               	movf	?___aomod,w
  3249  072A  00F3               	movwf	abs@a
  3250  072B  3180  2079  3186   	fcall	_abs
  3251  072E  0873               	movf	?_abs,w
  3252  072F  3E30               	addlw	48
  3253  0730  0140               	movlb	0	; select bank0
  3254  0731  00BC               	movwf	??_dtoa
  3255  0732  0850               	movf	dtoa@i,w
  3256  0733  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  3257  0734  0086               	movwf	6
  3258  0735  0187               	clrf	7
  3259  0736  083C               	movf	??_dtoa,w
  3260  0737  0081               	movwf	1
  3261  0738                     l1693:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3264  0738  30FF               	movlw	255
  3265  0739  07C1               	addwf	dtoa@p,f
  3266  073A  30FF               	movlw	255
  3267  073B  3DC2               	addwfc	dtoa@p+1,f
  3268  073C                     l1695:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3271  073C  30FF               	movlw	255
  3272  073D  07C4               	addwf	dtoa@w,f
  3273  073E  30FF               	movlw	255
  3274  073F  3DC5               	addwfc	dtoa@w+1,f
  3275  0740                     l1697:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3278  0740  300A               	movlw	10
  3279  0741  00A0               	movwf	___aodiv@divisor
  3280  0742  01A1               	clrf	___aodiv@divisor+1
  3281  0743  01A2               	clrf	___aodiv@divisor+2
  3282  0744  01A3               	clrf	___aodiv@divisor+3
  3283  0745  01A4               	clrf	___aodiv@divisor+4
  3284  0746  01A5               	clrf	___aodiv@divisor+5
  3285  0747  01A6               	clrf	___aodiv@divisor+6
  3286  0748  01A7               	clrf	___aodiv@divisor+7
  3287  0749  0848               	movf	dtoa@n,w
  3288  074A  00A8               	movwf	___aodiv@dividend
  3289  074B  0849               	movf	dtoa@n+1,w
  3290  074C  00A9               	movwf	___aodiv@dividend+1
  3291  074D  084A               	movf	dtoa@n+2,w
  3292  074E  00AA               	movwf	___aodiv@dividend+2
  3293  074F  084B               	movf	dtoa@n+3,w
  3294  0750  00AB               	movwf	___aodiv@dividend+3
  3295  0751  084C               	movf	dtoa@n+4,w
  3296  0752  00AC               	movwf	___aodiv@dividend+4
  3297  0753  084D               	movf	dtoa@n+5,w
  3298  0754  00AD               	movwf	___aodiv@dividend+5
  3299  0755  084E               	movf	dtoa@n+6,w
  3300  0756  00AE               	movwf	___aodiv@dividend+6
  3301  0757  084F               	movf	dtoa@n+7,w
  3302  0758  00AF               	movwf	___aodiv@dividend+7
  3303  0759  3184  2426  3186   	fcall	___aodiv
  3304  075C  0140               	movlb	0	; select bank0
  3305  075D  0820               	movf	?___aodiv,w
  3306  075E  00C8               	movwf	dtoa@n
  3307  075F  0821               	movf	?___aodiv+1,w
  3308  0760  00C9               	movwf	dtoa@n+1
  3309  0761  0822               	movf	?___aodiv+2,w
  3310  0762  00CA               	movwf	dtoa@n+2
  3311  0763  0823               	movf	?___aodiv+3,w
  3312  0764  00CB               	movwf	dtoa@n+3
  3313  0765  0824               	movf	?___aodiv+4,w
  3314  0766  00CC               	movwf	dtoa@n+4
  3315  0767  0825               	movf	?___aodiv+5,w
  3316  0768  00CD               	movwf	dtoa@n+5
  3317  0769  0826               	movf	?___aodiv+6,w
  3318  076A  00CE               	movwf	dtoa@n+6
  3319  076B  0827               	movf	?___aodiv+7,w
  3320  076C  00CF               	movwf	dtoa@n+7
  3321  076D                     l829:	
  3322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 318:     }
  3323                           
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3326  076D  0140               	movlb	0	; select bank0
  3327  076E  0851               	movf	dtoa@i+1,w
  3328  076F  3A80               	xorlw	128
  3329  0770  00BC               	movwf	??_dtoa
  3330  0771  3080               	movlw	128
  3331  0772  023C               	subwf	??_dtoa,w
  3332  0773  1D03               	skipz
  3333  0774  2F77               	goto	u1435
  3334  0775  3001               	movlw	1
  3335  0776  0250               	subwf	dtoa@i,w
  3336  0777                     u1435:
  3337  0777  1C03               	skipc
  3338  0778  2F7A               	goto	u1431
  3339  0779  2F7B               	goto	u1430
  3340  077A                     u1431:
  3341  077A  2FA8               	goto	l1707
  3342  077B                     u1430:
  3343  077B                     l1699:
  3344  077B  0140               	movlb	0	; select bank0
  3345  077C  0848               	movf	dtoa@n,w
  3346  077D  0449               	iorwf	dtoa@n+1,w
  3347  077E  044A               	iorwf	dtoa@n+2,w
  3348  077F  044B               	iorwf	dtoa@n+3,w
  3349  0780  044C               	iorwf	dtoa@n+4,w
  3350  0781  044D               	iorwf	dtoa@n+5,w
  3351  0782  044E               	iorwf	dtoa@n+6,w
  3352  0783  044F               	iorwf	dtoa@n+7,w
  3353  0784  1D03               	skipz
  3354  0785  2F87               	goto	u1441
  3355  0786  2F88               	goto	u1440
  3356  0787                     u1441:
  3357  0787  2F05               	goto	l1689
  3358  0788                     u1440:
  3359  0788                     l1701:
  3360  0788  0842               	movf	dtoa@p+1,w
  3361  0789  3A80               	xorlw	128
  3362  078A  00BC               	movwf	??_dtoa
  3363  078B  3080               	movlw	128
  3364  078C  023C               	subwf	??_dtoa,w
  3365  078D  1D03               	skipz
  3366  078E  2F91               	goto	u1455
  3367  078F  3001               	movlw	1
  3368  0790  0241               	subwf	dtoa@p,w
  3369  0791                     u1455:
  3370  0791  1803               	skipnc
  3371  0792  2F94               	goto	u1451
  3372  0793  2F95               	goto	u1450
  3373  0794                     u1451:
  3374  0794  2F05               	goto	l1689
  3375  0795                     u1450:
  3376  0795                     l1703:
  3377  0795  0140               	movlb	0	; select bank0
  3378  0796  0845               	movf	dtoa@w+1,w
  3379  0797  3A80               	xorlw	128
  3380  0798  00BC               	movwf	??_dtoa
  3381  0799  3080               	movlw	128
  3382  079A  023C               	subwf	??_dtoa,w
  3383  079B  1D03               	skipz
  3384  079C  2F9F               	goto	u1465
  3385  079D  3001               	movlw	1
  3386  079E  0244               	subwf	dtoa@w,w
  3387  079F                     u1465:
  3388  079F  1C03               	skipc
  3389  07A0  2FA2               	goto	u1461
  3390  07A1  2FA3               	goto	u1460
  3391  07A2                     u1461:
  3392  07A2  2FA8               	goto	l1707
  3393  07A3                     u1460:
  3394  07A3                     l1705:
  3395  07A3  0141               	movlb	1	; select bank1
  3396  07A4  18A6               	btfsc	_flags^(0+128),1
  3397  07A5  2FA7               	goto	u1471
  3398  07A6  2FA8               	goto	u1470
  3399  07A7                     u1471:
  3400  07A7  2F05               	goto	l1689
  3401  07A8                     u1470:
  3402  07A8                     l1707:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3405  07A8  0140               	movlb	0	; select bank0
  3406  07A9  0846               	movf	dtoa@s,w
  3407  07AA  0447               	iorwf	dtoa@s+1,w
  3408  07AB  1D03               	btfss	3,2
  3409  07AC  2FAE               	goto	u1481
  3410  07AD  2FAF               	goto	u1480
  3411  07AE                     u1481:
  3412  07AE  2FB4               	goto	l1711
  3413  07AF                     u1480:
  3414  07AF                     l1709:
  3415  07AF  0141               	movlb	1	; select bank1
  3416  07B0  1D26               	btfss	_flags^(0+128),2
  3417  07B1  2FB3               	goto	u1491
  3418  07B2  2FB4               	goto	u1490
  3419  07B3                     u1491:
  3420  07B3  2FD0               	goto	l1721
  3421  07B4                     u1490:
  3422  07B4                     l1711:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  3425  07B4  30FF               	movlw	255
  3426  07B5  0140               	movlb	0	; select bank0
  3427  07B6  07D0               	addwf	dtoa@i,f
  3428  07B7  30FF               	movlw	255
  3429  07B8  3DD1               	addwfc	dtoa@i+1,f
  3430  07B9                     l1713:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3433  07B9  0846               	movf	dtoa@s,w
  3434  07BA  0447               	iorwf	dtoa@s+1,w
  3435  07BB  1D03               	btfss	3,2
  3436  07BC  2FBE               	goto	u1501
  3437  07BD  2FBF               	goto	u1500
  3438  07BE                     u1501:
  3439  07BE  2FC4               	goto	l1717
  3440  07BF                     u1500:
  3441  07BF                     l1715:
  3442  07BF  302B               	movlw	43
  3443  07C0  00BF               	movwf	_dtoa$850
  3444  07C1  3000               	movlw	0
  3445  07C2  00C0               	movwf	_dtoa$850+1
  3446  07C3  2FC8               	goto	l1719
  3447  07C4                     l1717:
  3448  07C4  302D               	movlw	45
  3449  07C5  00BF               	movwf	_dtoa$850
  3450  07C6  3000               	movlw	0
  3451  07C7  00C0               	movwf	_dtoa$850+1
  3452  07C8                     l1719:
  3453  07C8  083F               	movf	_dtoa$850,w
  3454  07C9  00BC               	movwf	??_dtoa
  3455  07CA  0850               	movf	dtoa@i,w
  3456  07CB  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  3457  07CC  0086               	movwf	6
  3458  07CD  0187               	clrf	7
  3459  07CE  083C               	movf	??_dtoa,w
  3460  07CF  0081               	movwf	1
  3461  07D0                     l1721:
  3462                           
  3463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3464  07D0  0140               	movlb	0	; select bank0
  3465  07D1  0850               	movf	dtoa@i,w
  3466  07D2  3EA9               	addlw	(low (_dbuf| 0))& (0+255)
  3467  07D3  00BC               	movwf	??_dtoa
  3468  07D4  083C               	movf	??_dtoa,w
  3469  07D5  00AC               	movwf	pad@buf
  3470  07D6  0845               	movf	dtoa@w+1,w
  3471  07D7  00AE               	movwf	pad@p+1
  3472  07D8  0844               	movf	dtoa@w,w
  3473  07D9  00AD               	movwf	pad@p
  3474  07DA  0843               	movf	dtoa@fp,w
  3475  07DB  3181  21D2  3186   	fcall	_pad
  3476  07DE  0140               	movlb	0	; select bank0
  3477  07DF  082D               	movf	?_pad+1,w
  3478  07E0  00B5               	movwf	?_dtoa+1
  3479  07E1  082C               	movf	?_pad,w
  3480  07E2  00B4               	movwf	?_dtoa
  3481  07E3                     l843:
  3482  07E3  0008               	return
  3483  07E4                     __end_of_dtoa:
  3484                           
  3485                           	psect	text5
  3486  01D2                     __ptext5:	
  3487 ;; *************** function _pad *****************
  3488 ;; Defined at:
  3489 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  fp              1    wreg     PTR struct _IO_FILE
  3492 ;;		 -> NULL(0), 
  3493 ;;  buf             1   12[BANK0 ] PTR unsigned char 
  3494 ;;		 -> dbuf(32), 
  3495 ;;  p               2   13[BANK0 ] int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  fp              1   19[BANK0 ] PTR struct _IO_FILE
  3498 ;;		 -> NULL(0), 
  3499 ;;  w               2   17[BANK0 ] int 
  3500 ;;  i               2   15[BANK0 ] int 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  2   12[BANK0 ] int 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3510 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3511 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3513 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3514 ;;Total ram usage:        9 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    6
  3517 ;; This function calls:
  3518 ;;		_fputc
  3519 ;;		_fputs
  3520 ;;		_strlen
  3521 ;; This function is called by:
  3522 ;;		_dtoa
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _pad
  3528  01D2                     _pad:
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3532                           ;pad@fp stored from wreg
  3533  01D2  0140               	movlb	0	; select bank0
  3534  01D3  00B3               	movwf	pad@fp
  3535  01D4                     l1627:
  3536                           
  3537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3538  01D4  0141               	movlb	1	; select bank1
  3539  01D5  1C26               	btfss	_flags^(0+128),0
  3540  01D6  29D8               	goto	u1261
  3541  01D7  29D9               	goto	u1260
  3542  01D8                     u1261:
  3543  01D8  29E2               	goto	l1631
  3544  01D9                     u1260:
  3545  01D9                     l1629:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3548  01D9  0140               	movlb	0	; select bank0
  3549  01DA  0833               	movf	pad@fp,w
  3550  01DB  00FC               	movwf	??_pad
  3551  01DC  087C               	movf	??_pad,w
  3552  01DD  00FB               	movwf	fputs@fp
  3553  01DE  082C               	movf	pad@buf,w
  3554  01DF  3180  20D3  3181   	fcall	_fputs
  3555  01E2                     l1631:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3558  01E2  0140               	movlb	0	; select bank0
  3559  01E3  1BAE               	btfsc	pad@p+1,7
  3560  01E4  29E6               	goto	u1271
  3561  01E5  29E7               	goto	u1270
  3562  01E6                     u1271:
  3563  01E6  29EC               	goto	l1635
  3564  01E7                     u1270:
  3565  01E7                     l1633:
  3566  01E7  082E               	movf	pad@p+1,w
  3567  01E8  00B2               	movwf	pad@w+1
  3568  01E9  082D               	movf	pad@p,w
  3569  01EA  00B1               	movwf	pad@w
  3570  01EB  29EE               	goto	l812
  3571  01EC                     l1635:
  3572  01EC  01B1               	clrf	pad@w
  3573  01ED  01B2               	clrf	pad@w+1
  3574  01EE                     l812:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3577  01EE  01AF               	clrf	pad@i
  3578  01EF  01B0               	clrf	pad@i+1
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3581  01F0  2A02               	goto	l1641
  3582  01F1                     l1637:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3585  01F1  3020               	movlw	32
  3586  01F2  00F8               	movwf	fputc@c
  3587  01F3  3000               	movlw	0
  3588  01F4  00F9               	movwf	fputc@c+1
  3589  01F5  0140               	movlb	0	; select bank0
  3590  01F6  0833               	movf	pad@fp,w
  3591  01F7  00FC               	movwf	??_pad
  3592  01F8  087C               	movf	??_pad,w
  3593  01F9  00FA               	movwf	fputc@fp
  3594  01FA  3181  2192  3181   	fcall	_fputc
  3595  01FD                     l1639:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3598  01FD  3001               	movlw	1
  3599  01FE  0140               	movlb	0	; select bank0
  3600  01FF  07AF               	addwf	pad@i,f
  3601  0200  3000               	movlw	0
  3602  0201  3DB0               	addwfc	pad@i+1,f
  3603  0202                     l1641:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3606  0202  0830               	movf	pad@i+1,w
  3607  0203  3A80               	xorlw	128
  3608  0204  00FC               	movwf	??_pad
  3609  0205  0832               	movf	pad@w+1,w
  3610  0206  3A80               	xorlw	128
  3611  0207  027C               	subwf	??_pad,w
  3612  0208  1D03               	skipz
  3613  0209  2A0C               	goto	u1285
  3614  020A  0831               	movf	pad@w,w
  3615  020B  022F               	subwf	pad@i,w
  3616  020C                     u1285:
  3617  020C  1C03               	skipc
  3618  020D  2A0F               	goto	u1281
  3619  020E  2A10               	goto	u1280
  3620  020F                     u1281:
  3621  020F  29F1               	goto	l1637
  3622  0210                     u1280:
  3623  0210                     l815:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3626  0210  0141               	movlb	1	; select bank1
  3627  0211  1826               	btfsc	_flags^(0+128),0
  3628  0212  2A14               	goto	u1291
  3629  0213  2A15               	goto	u1290
  3630  0214                     u1291:
  3631  0214  2A1E               	goto	l816
  3632  0215                     u1290:
  3633  0215                     l1643:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3636  0215  0140               	movlb	0	; select bank0
  3637  0216  0833               	movf	pad@fp,w
  3638  0217  00FC               	movwf	??_pad
  3639  0218  087C               	movf	??_pad,w
  3640  0219  00FB               	movwf	fputs@fp
  3641  021A  082C               	movf	pad@buf,w
  3642  021B  3180  20D3  3181   	fcall	_fputs
  3643  021E                     l816:	
  3644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 92:     }
  3645                           
  3646                           
  3647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3648  021E  0140               	movlb	0	; select bank0
  3649  021F  082C               	movf	pad@buf,w
  3650  0220  3180  2060  3181   	fcall	_strlen
  3651  0223  0140               	movlb	0	; select bank0
  3652  0224  0831               	movf	pad@w,w
  3653  0225  0770               	addwf	?_strlen,w
  3654  0226  00AC               	movwf	?_pad
  3655  0227  0832               	movf	pad@w+1,w
  3656  0228  3D71               	addwfc	?_strlen+1,w
  3657  0229  00AD               	movwf	?_pad+1
  3658  022A                     l817:
  3659  022A  0008               	return
  3660  022B                     __end_of_pad:
  3661                           
  3662                           	psect	text6
  3663  0060                     __ptext6:	
  3664 ;; *************** function _strlen *****************
  3665 ;; Defined at:
  3666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  s               1    wreg     PTR const unsigned char 
  3669 ;;		 -> dbuf(32), 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  s               1    4[COMMON] PTR const unsigned char 
  3672 ;;		 -> dbuf(32), 
  3673 ;;  a               1    3[COMMON] PTR const unsigned char 
  3674 ;;		 -> dbuf(32), 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  2    0[COMMON] unsigned int 
  3677 ;; Registers used:
  3678 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3687 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:        5 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_pad
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _strlen
  3699  0060                     _strlen:
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3703                           ;strlen@s stored from wreg
  3704  0060  00F4               	movwf	strlen@s
  3705  0061                     l1535:
  3706  0061  0874               	movf	strlen@s,w
  3707  0062  00F2               	movwf	??_strlen
  3708  0063  0872               	movf	??_strlen,w
  3709  0064  00F3               	movwf	strlen@a
  3710  0065  286A               	goto	l1539
  3711  0066                     l1537:
  3712  0066  3001               	movlw	1
  3713  0067  00F2               	movwf	??_strlen
  3714  0068  0872               	movf	??_strlen,w
  3715  0069  07F4               	addwf	strlen@s,f
  3716  006A                     l1539:
  3717  006A  0874               	movf	strlen@s,w
  3718  006B  0086               	movwf	6
  3719  006C  0187               	clrf	7
  3720  006D  0801               	movf	1,w
  3721  006E  1D03               	btfss	3,2
  3722  006F  2871               	goto	u1001
  3723  0070  2872               	goto	u1000
  3724  0071                     u1001:
  3725  0071  2866               	goto	l1537
  3726  0072                     u1000:
  3727  0072                     l1541:
  3728  0072  0873               	movf	strlen@a,w
  3729  0073  0274               	subwf	strlen@s,w
  3730  0074  00F0               	movwf	?_strlen
  3731  0075  01F1               	clrf	?_strlen+1
  3732  0076  1BF0               	btfsc	?_strlen,7
  3733  0077  03F1               	decf	?_strlen+1,f
  3734  0078                     l945:
  3735  0078  0008               	return
  3736  0079                     __end_of_strlen:
  3737                           
  3738                           	psect	text7
  3739  00D3                     __ptext7:	
  3740 ;; *************** function _fputs *****************
  3741 ;; Defined at:
  3742 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  s               1    wreg     PTR const unsigned char 
  3745 ;;		 -> dbuf(32), 
  3746 ;;  fp              1   11[COMMON] PTR struct _IO_FILE
  3747 ;;		 -> NULL(0), 
  3748 ;; Auto vars:     Size  Location     Type
  3749 ;;  s               1   11[BANK0 ] PTR const unsigned char 
  3750 ;;		 -> dbuf(32), 
  3751 ;;  i               2    9[BANK0 ] int 
  3752 ;;  c               1    8[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   11[COMMON] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3762 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3764 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3765 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3766 ;;Total ram usage:        8 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    5
  3769 ;; This function calls:
  3770 ;;		_fputc
  3771 ;; This function is called by:
  3772 ;;		_pad
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _fputs
  3778  00D3                     _fputs:
  3779                           
  3780                           ;incstack = 0
  3781                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3782                           ;fputs@s stored from wreg
  3783  00D3  0140               	movlb	0	; select bank0
  3784  00D4  00AB               	movwf	fputs@s
  3785  00D5                     l1527:
  3786  00D5  01A9               	clrf	fputs@i
  3787  00D6  01AA               	clrf	fputs@i+1
  3788  00D7  28EB               	goto	l1533
  3789  00D8                     l1529:
  3790  00D8  0828               	movf	fputs@c,w
  3791  00D9  00A5               	movwf	??_fputs
  3792  00DA  01A6               	clrf	??_fputs+1
  3793  00DB  0825               	movf	??_fputs,w
  3794  00DC  00F8               	movwf	fputc@c
  3795  00DD  0826               	movf	??_fputs+1,w
  3796  00DE  00F9               	movwf	fputc@c+1
  3797  00DF  087B               	movf	fputs@fp,w
  3798  00E0  00A7               	movwf	??_fputs+2
  3799  00E1  0827               	movf	??_fputs+2,w
  3800  00E2  00FA               	movwf	fputc@fp
  3801  00E3  3181  2192  3180   	fcall	_fputc
  3802  00E6                     l1531:
  3803  00E6  3001               	movlw	1
  3804  00E7  0140               	movlb	0	; select bank0
  3805  00E8  07A9               	addwf	fputs@i,f
  3806  00E9  3000               	movlw	0
  3807  00EA  3DAA               	addwfc	fputs@i+1,f
  3808  00EB                     l1533:
  3809  00EB  0829               	movf	fputs@i,w
  3810  00EC  072B               	addwf	fputs@s,w
  3811  00ED  00A5               	movwf	??_fputs
  3812  00EE  0825               	movf	??_fputs,w
  3813  00EF  0086               	movwf	6
  3814  00F0  0187               	clrf	7
  3815  00F1  0801               	movf	1,w
  3816  00F2  00A6               	movwf	??_fputs+1
  3817  00F3  0826               	movf	??_fputs+1,w
  3818  00F4  00A8               	movwf	fputs@c
  3819  00F5  0828               	movf	fputs@c,w
  3820  00F6  1D03               	btfss	3,2
  3821  00F7  28F9               	goto	u991
  3822  00F8  28FA               	goto	u990
  3823  00F9                     u991:
  3824  00F9  28D8               	goto	l1529
  3825  00FA                     u990:
  3826  00FA                     l939:
  3827  00FA  0008               	return
  3828  00FB                     __end_of_fputs:
  3829                           
  3830                           	psect	text8
  3831  0192                     __ptext8:	
  3832 ;; *************** function _fputc *****************
  3833 ;; Defined at:
  3834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  c               2    8[COMMON] int 
  3837 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  3838 ;;		 -> NULL(0), 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2    8[COMMON] int 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3850 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:        8 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    4
  3857 ;; This function calls:
  3858 ;;		_putch
  3859 ;; This function is called by:
  3860 ;;		_pad
  3861 ;;		_vfpfcnvrt
  3862 ;;		_fputs
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function _fputc
  3868  0192                     _fputc:
  3869  0192                     l1513:	
  3870                           ;incstack = 0
  3871                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3872                           
  3873  0192  087A               	movf	fputc@fp,w
  3874  0193  1903               	btfsc	3,2
  3875  0194  2996               	goto	u951
  3876  0195  2997               	goto	u950
  3877  0196                     u951:
  3878  0196  299C               	goto	l1517
  3879  0197                     u950:
  3880  0197                     l1515:
  3881  0197  087A               	movf	fputc@fp,w
  3882  0198  1D03               	btfss	3,2
  3883  0199  299B               	goto	u961
  3884  019A  299C               	goto	u960
  3885  019B                     u961:
  3886  019B  29A1               	goto	l1519
  3887  019C                     u960:
  3888  019C                     l1517:
  3889  019C  0878               	movf	fputc@c,w
  3890  019D  318F  27BF  3181   	fcall	_putch
  3891  01A0  29D1               	goto	l931
  3892  01A1                     l1519:
  3893  01A1  087A               	movf	fputc@fp,w
  3894  01A2  3E03               	addlw	3
  3895  01A3  0086               	movwf	6
  3896  01A4  0187               	clrf	7
  3897  01A5  0016               	moviw fsr1++
  3898  01A6  0401               	iorwf	1,w
  3899  01A7  1903               	btfsc	3,2
  3900  01A8  29AA               	goto	u971
  3901  01A9  29AB               	goto	u970
  3902  01AA                     u971:
  3903  01AA  29C9               	goto	l1523
  3904  01AB                     u970:
  3905  01AB                     l1521:
  3906  01AB  087A               	movf	fputc@fp,w
  3907  01AC  3E03               	addlw	3
  3908  01AD  0086               	movwf	6
  3909  01AE  0187               	clrf	7
  3910  01AF  3F40               	moviw [0]fsr1
  3911  01B0  0140               	movlb	0	; select bank0
  3912  01B1  00A0               	movwf	??_fputc
  3913  01B2  3F41               	moviw [1]fsr1
  3914  01B3  00A1               	movwf	??_fputc+1
  3915  01B4  0A7A               	incf	fputc@fp,w
  3916  01B5  0086               	movwf	6
  3917  01B6  0187               	clrf	7
  3918  01B7  3F40               	moviw [0]fsr1
  3919  01B8  00A2               	movwf	??_fputc+2
  3920  01B9  3F41               	moviw [1]fsr1
  3921  01BA  00A3               	movwf	??_fputc+3
  3922  01BB  0823               	movf	??_fputc+3,w
  3923  01BC  3A80               	xorlw	128
  3924  01BD  00A4               	movwf	??_fputc+4
  3925  01BE  0821               	movf	??_fputc+1,w
  3926  01BF  3A80               	xorlw	128
  3927  01C0  0224               	subwf	??_fputc+4,w
  3928  01C1  1D03               	skipz
  3929  01C2  29C5               	goto	u985
  3930  01C3  0820               	movf	??_fputc,w
  3931  01C4  0222               	subwf	??_fputc+2,w
  3932  01C5                     u985:
  3933  01C5  1803               	skipnc
  3934  01C6  29C8               	goto	u981
  3935  01C7  29C9               	goto	u980
  3936  01C8                     u981:
  3937  01C8  29D1               	goto	l931
  3938  01C9                     u980:
  3939  01C9                     l1523:
  3940  01C9  0A7A               	incf	fputc@fp,w
  3941  01CA  0086               	movwf	6
  3942  01CB  0187               	clrf	7
  3943  01CC  3001               	movlw	1
  3944  01CD  0781               	addwf	1,f
  3945  01CE  3141               	addfsr 1,1
  3946  01CF  1803               	skipnc
  3947  01D0  0A81               	incf	1,f
  3948  01D1                     l931:
  3949  01D1  0008               	return
  3950  01D2                     __end_of_fputc:
  3951                           
  3952                           	psect	text9
  3953  0FBF                     __ptext9:	
  3954 ;; *************** function _putch *****************
  3955 ;; Defined at:
  3956 ;;		line 141 in file "AQM0802.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  character       1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  character       1    7[COMMON] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, pclath, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  3974 ;;Total ram usage:        1 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    3
  3977 ;; This function calls:
  3978 ;;		_lcdSendCharacterData
  3979 ;; This function is called by:
  3980 ;;		_fputc
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           
  3985                           ;psect for function _putch
  3986  0FBF                     _putch:
  3987                           
  3988                           ;incstack = 0
  3989                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3990                           ;putch@character stored from wreg
  3991  0FBF  00F7               	movwf	putch@character
  3992  0FC0                     l1509:
  3993                           
  3994                           ;AQM0802.c: 141: void putch(char character);AQM0802.c: 142: {;AQM0802.c: 143:     lcdSen
      +                          dCharacterData(character);
  3995  0FC0  0877               	movf	putch@character,w
  3996  0FC1  318F  27E3  318F   	fcall	_lcdSendCharacterData
  3997  0FC4                     l52:
  3998  0FC4  0008               	return
  3999  0FC5                     __end_of_putch:
  4000                           
  4001                           	psect	text10
  4002  0FE3                     __ptext10:	
  4003 ;; *************** function _lcdSendCharacterData *****************
  4004 ;; Defined at:
  4005 ;;		line 93 in file "AQM0802.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  data            1    wreg     unsigned char 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  data            1    6[COMMON] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4023 ;;Total ram usage:        3 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    2
  4026 ;; This function calls:
  4027 ;;		_lcdI2CProtocol
  4028 ;; This function is called by:
  4029 ;;		_putch
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _lcdSendCharacterData
  4035  0FE3                     _lcdSendCharacterData:
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _lcdSendCharacterData: [wreg+status,2+status,0+pclath+cstack]
  4039                           ;lcdSendCharacterData@data stored from wreg
  4040  0FE3  00F6               	movwf	lcdSendCharacterData@data
  4041  0FE4                     l1505:
  4042                           
  4043                           ;AQM0802.c: 93: void lcdSendCharacterData(uint8_t data);AQM0802.c: 94: {;AQM0802.c: 96: 
      +                              lcdI2CProtocol(0x7c, 0x40, data);
  4044  0FE4  3040               	movlw	64
  4045  0FE5  00F4               	movwf	??_lcdSendCharacterData
  4046  0FE6  0874               	movf	??_lcdSendCharacterData,w
  4047  0FE7  00F1               	movwf	lcdI2CProtocol@cont_code
  4048  0FE8  0876               	movf	lcdSendCharacterData@data,w
  4049  0FE9  00F5               	movwf	??_lcdSendCharacterData+1
  4050  0FEA  0875               	movf	??_lcdSendCharacterData+1,w
  4051  0FEB  00F2               	movwf	lcdI2CProtocol@data
  4052  0FEC  307C               	movlw	124
  4053  0FED  3180  201E  318F   	fcall	_lcdI2CProtocol
  4054  0FF0                     l40:
  4055  0FF0  0008               	return
  4056  0FF1                     __end_of_lcdSendCharacterData:
  4057                           
  4058                           	psect	text11
  4059  0079                     __ptext11:	
  4060 ;; *************** function _abs *****************
  4061 ;; Defined at:
  4062 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  a               2    3[COMMON] int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    3[COMMON] int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4080 ;;Total ram usage:        4 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_dtoa
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _abs
  4091  0079                     _abs:
  4092  0079                     l1647:	
  4093                           ;incstack = 0
  4094                           ; Regs used in _abs: [wreg+status,2+status,0]
  4095                           
  4096  0079  0874               	movf	abs@a+1,w
  4097  007A  3A80               	xorlw	128
  4098  007B  00F5               	movwf	??_abs
  4099  007C  3080               	movlw	128
  4100  007D  0275               	subwf	??_abs,w
  4101  007E  1D03               	skipz
  4102  007F  2882               	goto	u1305
  4103  0080  3001               	movlw	1
  4104  0081  0273               	subwf	abs@a,w
  4105  0082                     u1305:
  4106  0082  1803               	skipnc
  4107  0083  2885               	goto	u1301
  4108  0084  2886               	goto	u1300
  4109  0085                     u1301:
  4110  0085  2892               	goto	l871
  4111  0086                     u1300:
  4112  0086                     l1649:
  4113  0086  0973               	comf	abs@a,w
  4114  0087  00F5               	movwf	??_abs
  4115  0088  0974               	comf	abs@a+1,w
  4116  0089  00F6               	movwf	??_abs+1
  4117  008A  0AF5               	incf	??_abs,f
  4118  008B  1903               	skipnz
  4119  008C  0AF6               	incf	??_abs+1,f
  4120  008D  0875               	movf	??_abs,w
  4121  008E  00F3               	movwf	?_abs
  4122  008F  0876               	movf	??_abs+1,w
  4123  0090  00F4               	movwf	?_abs+1
  4124  0091  2892               	goto	l874
  4125  0092                     l871:
  4126  0092                     l874:
  4127  0092  0008               	return
  4128  0093                     __end_of_abs:
  4129                           
  4130                           	psect	text12
  4131  033C                     __ptext12:	
  4132 ;; *************** function ___aomod *****************
  4133 ;; Defined at:
  4134 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  divisor         8    0[BANK0 ] long long 
  4137 ;;  dividend        8    8[BANK0 ] long long 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  sign            1    2[COMMON] unsigned char 
  4140 ;;  counter         1    1[COMMON] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  8    0[BANK0 ] long long 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4150 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4153 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4154 ;;Total ram usage:       19 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_dtoa
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           
  4164                           ;psect for function ___aomod
  4165  033C                     ___aomod:
  4166  033C                     l1597:	
  4167                           ;incstack = 0
  4168                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4169                           
  4170  033C  01F2               	clrf	___aomod@sign
  4171  033D                     l1599:
  4172  033D  3028               	movlw	low ___aomod@dividend
  4173  033E  0086               	movwf	6
  4174  033F  3000               	movlw	high ___aomod@dividend
  4175  0340  0087               	movwf	7
  4176  0341  3F47               	moviw [7]fsr1
  4177  0342  00F0               	movwf	??___aomod
  4178  0343  1FF0               	btfss	??___aomod,7
  4179  0344  2B46               	goto	u1161
  4180  0345  2B47               	goto	u1160
  4181  0346                     u1161:
  4182  0346  2B68               	goto	l1603
  4183  0347                     u1160:
  4184  0347                     l1601:
  4185  0347  0140               	movlb	0	; select bank0
  4186  0348  09A8               	comf	___aomod@dividend,f
  4187  0349  09A9               	comf	___aomod@dividend+1,f
  4188  034A  09AA               	comf	___aomod@dividend+2,f
  4189  034B  09AB               	comf	___aomod@dividend+3,f
  4190  034C  09AC               	comf	___aomod@dividend+4,f
  4191  034D  09AD               	comf	___aomod@dividend+5,f
  4192  034E  09AE               	comf	___aomod@dividend+6,f
  4193  034F  09AF               	comf	___aomod@dividend+7,f
  4194  0350  0AA8               	incf	___aomod@dividend,f
  4195  0351  1D03               	skipz
  4196  0352  2B66               	goto	u117lld
  4197  0353  0AA9               	incf	___aomod@dividend+1,f
  4198  0354  1D03               	skipz
  4199  0355  2B66               	goto	u117lld
  4200  0356  0AAA               	incf	___aomod@dividend+2,f
  4201  0357  1D03               	skipz
  4202  0358  2B66               	goto	u117lld
  4203  0359  0AAB               	incf	___aomod@dividend+3,f
  4204  035A  1D03               	skipz
  4205  035B  2B66               	goto	u117lld
  4206  035C  0AAC               	incf	___aomod@dividend+4,f
  4207  035D  1D03               	skipz
  4208  035E  2B66               	goto	u117lld
  4209  035F  0AAD               	incf	___aomod@dividend+5,f
  4210  0360  1D03               	skipz
  4211  0361  2B66               	goto	u117lld
  4212  0362  0AAE               	incf	___aomod@dividend+6,f
  4213  0363  1D03               	skipz
  4214  0364  2B66               	goto	u117lld
  4215  0365  0AAF               	incf	___aomod@dividend+7,f
  4216  0366                     u117lld:
  4217  0366  01F2               	clrf	___aomod@sign
  4218  0367  0AF2               	incf	___aomod@sign,f
  4219  0368                     l1603:
  4220  0368  3020               	movlw	low ___aomod@divisor
  4221  0369  0086               	movwf	6
  4222  036A  3000               	movlw	high ___aomod@divisor
  4223  036B  0087               	movwf	7
  4224  036C  3F47               	moviw [7]fsr1
  4225  036D  00F0               	movwf	??___aomod
  4226  036E  1FF0               	btfss	??___aomod,7
  4227  036F  2B71               	goto	u1181
  4228  0370  2B72               	goto	u1180
  4229  0371                     u1181:
  4230  0371  2B91               	goto	l1607
  4231  0372                     u1180:
  4232  0372                     l1605:
  4233  0372  0140               	movlb	0	; select bank0
  4234  0373  09A0               	comf	___aomod@divisor,f
  4235  0374  09A1               	comf	___aomod@divisor+1,f
  4236  0375  09A2               	comf	___aomod@divisor+2,f
  4237  0376  09A3               	comf	___aomod@divisor+3,f
  4238  0377  09A4               	comf	___aomod@divisor+4,f
  4239  0378  09A5               	comf	___aomod@divisor+5,f
  4240  0379  09A6               	comf	___aomod@divisor+6,f
  4241  037A  09A7               	comf	___aomod@divisor+7,f
  4242  037B  0AA0               	incf	___aomod@divisor,f
  4243  037C  1D03               	skipz
  4244  037D  2B91               	goto	u119lld
  4245  037E  0AA1               	incf	___aomod@divisor+1,f
  4246  037F  1D03               	skipz
  4247  0380  2B91               	goto	u119lld
  4248  0381  0AA2               	incf	___aomod@divisor+2,f
  4249  0382  1D03               	skipz
  4250  0383  2B91               	goto	u119lld
  4251  0384  0AA3               	incf	___aomod@divisor+3,f
  4252  0385  1D03               	skipz
  4253  0386  2B91               	goto	u119lld
  4254  0387  0AA4               	incf	___aomod@divisor+4,f
  4255  0388  1D03               	skipz
  4256  0389  2B91               	goto	u119lld
  4257  038A  0AA5               	incf	___aomod@divisor+5,f
  4258  038B  1D03               	skipz
  4259  038C  2B91               	goto	u119lld
  4260  038D  0AA6               	incf	___aomod@divisor+6,f
  4261  038E  1D03               	skipz
  4262  038F  2B91               	goto	u119lld
  4263  0390  0AA7               	incf	___aomod@divisor+7,f
  4264  0391                     u119lld:
  4265  0391                     l1607:
  4266  0391  0140               	movlb	0	; select bank0
  4267  0392  0820               	movf	___aomod@divisor,w
  4268  0393  0421               	iorwf	___aomod@divisor+1,w
  4269  0394  0422               	iorwf	___aomod@divisor+2,w
  4270  0395  0423               	iorwf	___aomod@divisor+3,w
  4271  0396  0424               	iorwf	___aomod@divisor+4,w
  4272  0397  0425               	iorwf	___aomod@divisor+5,w
  4273  0398  0426               	iorwf	___aomod@divisor+6,w
  4274  0399  0427               	iorwf	___aomod@divisor+7,w
  4275  039A  1903               	skipnz
  4276  039B  2B9D               	goto	u1201
  4277  039C  2B9E               	goto	u1200
  4278  039D                     u1201:
  4279  039D  2BF1               	goto	l1623
  4280  039E                     u1200:
  4281  039E                     l1609:
  4282  039E  01F1               	clrf	___aomod@counter
  4283  039F  0AF1               	incf	___aomod@counter,f
  4284  03A0  2BAD               	goto	l1615
  4285  03A1                     l1611:
  4286  03A1  35A0               	lslf	___aomod@divisor,f
  4287  03A2  0DA1               	rlf	___aomod@divisor+1,f
  4288  03A3  0DA2               	rlf	___aomod@divisor+2,f
  4289  03A4  0DA3               	rlf	___aomod@divisor+3,f
  4290  03A5  0DA4               	rlf	___aomod@divisor+4,f
  4291  03A6  0DA5               	rlf	___aomod@divisor+5,f
  4292  03A7  0DA6               	rlf	___aomod@divisor+6,f
  4293  03A8  0DA7               	rlf	___aomod@divisor+7,f
  4294  03A9                     l1613:
  4295  03A9  3001               	movlw	1
  4296  03AA  00F0               	movwf	??___aomod
  4297  03AB  0870               	movf	??___aomod,w
  4298  03AC  07F1               	addwf	___aomod@counter,f
  4299  03AD                     l1615:
  4300  03AD  1FA7               	btfss	___aomod@divisor+7,7
  4301  03AE  2BB0               	goto	u1211
  4302  03AF  2BB1               	goto	u1210
  4303  03B0                     u1211:
  4304  03B0  2BA1               	goto	l1611
  4305  03B1                     u1210:
  4306  03B1                     l1617:
  4307  03B1  0827               	movf	___aomod@divisor+7,w
  4308  03B2  022F               	subwf	___aomod@dividend+7,w
  4309  03B3  1D03               	skipz
  4310  03B4  2BCF               	goto	u1225
  4311  03B5  0826               	movf	___aomod@divisor+6,w
  4312  03B6  022E               	subwf	___aomod@dividend+6,w
  4313  03B7  1D03               	skipz
  4314  03B8  2BCF               	goto	u1225
  4315  03B9  0825               	movf	___aomod@divisor+5,w
  4316  03BA  022D               	subwf	___aomod@dividend+5,w
  4317  03BB  1D03               	skipz
  4318  03BC  2BCF               	goto	u1225
  4319  03BD  0824               	movf	___aomod@divisor+4,w
  4320  03BE  022C               	subwf	___aomod@dividend+4,w
  4321  03BF  1D03               	skipz
  4322  03C0  2BCF               	goto	u1225
  4323  03C1  0823               	movf	___aomod@divisor+3,w
  4324  03C2  022B               	subwf	___aomod@dividend+3,w
  4325  03C3  1D03               	skipz
  4326  03C4  2BCF               	goto	u1225
  4327  03C5  0822               	movf	___aomod@divisor+2,w
  4328  03C6  022A               	subwf	___aomod@dividend+2,w
  4329  03C7  1D03               	skipz
  4330  03C8  2BCF               	goto	u1225
  4331  03C9  0821               	movf	___aomod@divisor+1,w
  4332  03CA  0229               	subwf	___aomod@dividend+1,w
  4333  03CB  1D03               	skipz
  4334  03CC  2BCF               	goto	u1225
  4335  03CD  0820               	movf	___aomod@divisor,w
  4336  03CE  0228               	subwf	___aomod@dividend,w
  4337  03CF                     u1225:
  4338  03CF  1C03               	skipc
  4339  03D0  2BD2               	goto	u1221
  4340  03D1  2BD3               	goto	u1220
  4341  03D2                     u1221:
  4342  03D2  2BE3               	goto	l1621
  4343  03D3                     u1220:
  4344  03D3                     l1619:
  4345  03D3  0820               	movf	___aomod@divisor,w
  4346  03D4  02A8               	subwf	___aomod@dividend,f
  4347  03D5  0821               	movf	___aomod@divisor+1,w
  4348  03D6  3BA9               	subwfb	___aomod@dividend+1,f
  4349  03D7  0822               	movf	___aomod@divisor+2,w
  4350  03D8  3BAA               	subwfb	___aomod@dividend+2,f
  4351  03D9  0823               	movf	___aomod@divisor+3,w
  4352  03DA  3BAB               	subwfb	___aomod@dividend+3,f
  4353  03DB  0824               	movf	___aomod@divisor+4,w
  4354  03DC  3BAC               	subwfb	___aomod@dividend+4,f
  4355  03DD  0825               	movf	___aomod@divisor+5,w
  4356  03DE  3BAD               	subwfb	___aomod@dividend+5,f
  4357  03DF  0826               	movf	___aomod@divisor+6,w
  4358  03E0  3BAE               	subwfb	___aomod@dividend+6,f
  4359  03E1  0827               	movf	___aomod@divisor+7,w
  4360  03E2  3BAF               	subwfb	___aomod@dividend+7,f
  4361  03E3                     l1621:
  4362  03E3  36A7               	lsrf	___aomod@divisor+7,f
  4363  03E4  0CA6               	rrf	___aomod@divisor+6,f
  4364  03E5  0CA5               	rrf	___aomod@divisor+5,f
  4365  03E6  0CA4               	rrf	___aomod@divisor+4,f
  4366  03E7  0CA3               	rrf	___aomod@divisor+3,f
  4367  03E8  0CA2               	rrf	___aomod@divisor+2,f
  4368  03E9  0CA1               	rrf	___aomod@divisor+1,f
  4369  03EA  0CA0               	rrf	___aomod@divisor,f
  4370  03EB  3001               	movlw	1
  4371  03EC  02F1               	subwf	___aomod@counter,f
  4372  03ED  1D03               	btfss	3,2
  4373  03EE  2BF0               	goto	u1231
  4374  03EF  2BF1               	goto	u1230
  4375  03F0                     u1231:
  4376  03F0  2BB1               	goto	l1617
  4377  03F1                     u1230:
  4378  03F1                     l1623:
  4379  03F1  0872               	movf	___aomod@sign,w
  4380  03F2  1903               	btfsc	3,2
  4381  03F3  2BF5               	goto	u1241
  4382  03F4  2BF6               	goto	u1240
  4383  03F5                     u1241:
  4384  03F5  2C14               	goto	l431
  4385  03F6                     u1240:
  4386  03F6                     l1625:
  4387  03F6  09A8               	comf	___aomod@dividend,f
  4388  03F7  09A9               	comf	___aomod@dividend+1,f
  4389  03F8  09AA               	comf	___aomod@dividend+2,f
  4390  03F9  09AB               	comf	___aomod@dividend+3,f
  4391  03FA  09AC               	comf	___aomod@dividend+4,f
  4392  03FB  09AD               	comf	___aomod@dividend+5,f
  4393  03FC  09AE               	comf	___aomod@dividend+6,f
  4394  03FD  09AF               	comf	___aomod@dividend+7,f
  4395  03FE  0AA8               	incf	___aomod@dividend,f
  4396  03FF  1D03               	skipz
  4397  0400  2C14               	goto	u125lld
  4398  0401  0AA9               	incf	___aomod@dividend+1,f
  4399  0402  1D03               	skipz
  4400  0403  2C14               	goto	u125lld
  4401  0404  0AAA               	incf	___aomod@dividend+2,f
  4402  0405  1D03               	skipz
  4403  0406  2C14               	goto	u125lld
  4404  0407  0AAB               	incf	___aomod@dividend+3,f
  4405  0408  1D03               	skipz
  4406  0409  2C14               	goto	u125lld
  4407  040A  0AAC               	incf	___aomod@dividend+4,f
  4408  040B  1D03               	skipz
  4409  040C  2C14               	goto	u125lld
  4410  040D  0AAD               	incf	___aomod@dividend+5,f
  4411  040E  1D03               	skipz
  4412  040F  2C14               	goto	u125lld
  4413  0410  0AAE               	incf	___aomod@dividend+6,f
  4414  0411  1D03               	skipz
  4415  0412  2C14               	goto	u125lld
  4416  0413  0AAF               	incf	___aomod@dividend+7,f
  4417  0414                     u125lld:
  4418  0414                     l431:
  4419  0414  0140               	movlb	0	; select bank0
  4420  0415  0828               	movf	___aomod@dividend,w
  4421  0416  00A0               	movwf	?___aomod
  4422  0417  0829               	movf	___aomod@dividend+1,w
  4423  0418  00A1               	movwf	?___aomod+1
  4424  0419  082A               	movf	___aomod@dividend+2,w
  4425  041A  00A2               	movwf	?___aomod+2
  4426  041B  082B               	movf	___aomod@dividend+3,w
  4427  041C  00A3               	movwf	?___aomod+3
  4428  041D  082C               	movf	___aomod@dividend+4,w
  4429  041E  00A4               	movwf	?___aomod+4
  4430  041F  082D               	movf	___aomod@dividend+5,w
  4431  0420  00A5               	movwf	?___aomod+5
  4432  0421  082E               	movf	___aomod@dividend+6,w
  4433  0422  00A6               	movwf	?___aomod+6
  4434  0423  082F               	movf	___aomod@dividend+7,w
  4435  0424  00A7               	movwf	?___aomod+7
  4436  0425                     l432:
  4437  0425  0008               	return
  4438  0426                     __end_of___aomod:
  4439                           
  4440                           	psect	text13
  4441  0426                     __ptext13:	
  4442 ;; *************** function ___aodiv *****************
  4443 ;; Defined at:
  4444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  divisor         8    0[BANK0 ] long long 
  4447 ;;  dividend        8    8[BANK0 ] long long 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  quotient        8    3[COMMON] long long 
  4450 ;;  sign            1    2[COMMON] unsigned char 
  4451 ;;  counter         1    1[COMMON] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  8    0[BANK0 ] long long 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4461 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4462 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4464 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4465 ;;Total ram usage:       27 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_dtoa
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           
  4475                           ;psect for function ___aodiv
  4476  0426                     ___aodiv:
  4477  0426                     l1559:	
  4478                           ;incstack = 0
  4479                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4480                           
  4481  0426  01F2               	clrf	___aodiv@sign
  4482  0427                     l1561:
  4483  0427  3020               	movlw	low ___aodiv@divisor
  4484  0428  0086               	movwf	6
  4485  0429  3000               	movlw	high ___aodiv@divisor
  4486  042A  0087               	movwf	7
  4487  042B  3F47               	moviw [7]fsr1
  4488  042C  00F0               	movwf	??___aodiv
  4489  042D  1FF0               	btfss	??___aodiv,7
  4490  042E  2C30               	goto	u1051
  4491  042F  2C31               	goto	u1050
  4492  0430                     u1051:
  4493  0430  2C52               	goto	l1565
  4494  0431                     u1050:
  4495  0431                     l1563:
  4496  0431  0140               	movlb	0	; select bank0
  4497  0432  09A0               	comf	___aodiv@divisor,f
  4498  0433  09A1               	comf	___aodiv@divisor+1,f
  4499  0434  09A2               	comf	___aodiv@divisor+2,f
  4500  0435  09A3               	comf	___aodiv@divisor+3,f
  4501  0436  09A4               	comf	___aodiv@divisor+4,f
  4502  0437  09A5               	comf	___aodiv@divisor+5,f
  4503  0438  09A6               	comf	___aodiv@divisor+6,f
  4504  0439  09A7               	comf	___aodiv@divisor+7,f
  4505  043A  0AA0               	incf	___aodiv@divisor,f
  4506  043B  1D03               	skipz
  4507  043C  2C50               	goto	u106lld
  4508  043D  0AA1               	incf	___aodiv@divisor+1,f
  4509  043E  1D03               	skipz
  4510  043F  2C50               	goto	u106lld
  4511  0440  0AA2               	incf	___aodiv@divisor+2,f
  4512  0441  1D03               	skipz
  4513  0442  2C50               	goto	u106lld
  4514  0443  0AA3               	incf	___aodiv@divisor+3,f
  4515  0444  1D03               	skipz
  4516  0445  2C50               	goto	u106lld
  4517  0446  0AA4               	incf	___aodiv@divisor+4,f
  4518  0447  1D03               	skipz
  4519  0448  2C50               	goto	u106lld
  4520  0449  0AA5               	incf	___aodiv@divisor+5,f
  4521  044A  1D03               	skipz
  4522  044B  2C50               	goto	u106lld
  4523  044C  0AA6               	incf	___aodiv@divisor+6,f
  4524  044D  1D03               	skipz
  4525  044E  2C50               	goto	u106lld
  4526  044F  0AA7               	incf	___aodiv@divisor+7,f
  4527  0450                     u106lld:
  4528  0450  01F2               	clrf	___aodiv@sign
  4529  0451  0AF2               	incf	___aodiv@sign,f
  4530  0452                     l1565:
  4531  0452  3028               	movlw	low ___aodiv@dividend
  4532  0453  0086               	movwf	6
  4533  0454  3000               	movlw	high ___aodiv@dividend
  4534  0455  0087               	movwf	7
  4535  0456  3F47               	moviw [7]fsr1
  4536  0457  00F0               	movwf	??___aodiv
  4537  0458  1FF0               	btfss	??___aodiv,7
  4538  0459  2C5B               	goto	u1071
  4539  045A  2C5C               	goto	u1070
  4540  045B                     u1071:
  4541  045B  2C7F               	goto	l1571
  4542  045C                     u1070:
  4543  045C                     l1567:
  4544  045C  0140               	movlb	0	; select bank0
  4545  045D  09A8               	comf	___aodiv@dividend,f
  4546  045E  09A9               	comf	___aodiv@dividend+1,f
  4547  045F  09AA               	comf	___aodiv@dividend+2,f
  4548  0460  09AB               	comf	___aodiv@dividend+3,f
  4549  0461  09AC               	comf	___aodiv@dividend+4,f
  4550  0462  09AD               	comf	___aodiv@dividend+5,f
  4551  0463  09AE               	comf	___aodiv@dividend+6,f
  4552  0464  09AF               	comf	___aodiv@dividend+7,f
  4553  0465  0AA8               	incf	___aodiv@dividend,f
  4554  0466  1D03               	skipz
  4555  0467  2C7B               	goto	u108lld
  4556  0468  0AA9               	incf	___aodiv@dividend+1,f
  4557  0469  1D03               	skipz
  4558  046A  2C7B               	goto	u108lld
  4559  046B  0AAA               	incf	___aodiv@dividend+2,f
  4560  046C  1D03               	skipz
  4561  046D  2C7B               	goto	u108lld
  4562  046E  0AAB               	incf	___aodiv@dividend+3,f
  4563  046F  1D03               	skipz
  4564  0470  2C7B               	goto	u108lld
  4565  0471  0AAC               	incf	___aodiv@dividend+4,f
  4566  0472  1D03               	skipz
  4567  0473  2C7B               	goto	u108lld
  4568  0474  0AAD               	incf	___aodiv@dividend+5,f
  4569  0475  1D03               	skipz
  4570  0476  2C7B               	goto	u108lld
  4571  0477  0AAE               	incf	___aodiv@dividend+6,f
  4572  0478  1D03               	skipz
  4573  0479  2C7B               	goto	u108lld
  4574  047A  0AAF               	incf	___aodiv@dividend+7,f
  4575  047B                     u108lld:
  4576  047B                     l1569:
  4577  047B  3001               	movlw	1
  4578  047C  00F0               	movwf	??___aodiv
  4579  047D  0870               	movf	??___aodiv,w
  4580  047E  06F2               	xorwf	___aodiv@sign,f
  4581  047F                     l1571:
  4582  047F  3073               	movlw	low ___aodiv@quotient
  4583  0480  0086               	movwf	6
  4584  0481  3000               	movlw	high ___aodiv@quotient
  4585  0482  0087               	movwf	7
  4586  0483  3008               	movlw	8
  4587  0484  00F0               	movwf	??___aodiv
  4588  0485  3000               	movlw	0
  4589  0486                     u1090:
  4590  0486  001E               	movwi fsr1++
  4591  0487  0BF0               	decfsz	??___aodiv,f
  4592  0488  2C86               	goto	u1090
  4593  0489                     l1573:
  4594  0489  0140               	movlb	0	; select bank0
  4595  048A  0820               	movf	___aodiv@divisor,w
  4596  048B  0421               	iorwf	___aodiv@divisor+1,w
  4597  048C  0422               	iorwf	___aodiv@divisor+2,w
  4598  048D  0423               	iorwf	___aodiv@divisor+3,w
  4599  048E  0424               	iorwf	___aodiv@divisor+4,w
  4600  048F  0425               	iorwf	___aodiv@divisor+5,w
  4601  0490  0426               	iorwf	___aodiv@divisor+6,w
  4602  0491  0427               	iorwf	___aodiv@divisor+7,w
  4603  0492  1903               	skipnz
  4604  0493  2C95               	goto	u1101
  4605  0494  2C96               	goto	u1100
  4606  0495                     u1101:
  4607  0495  2CF2               	goto	l1593
  4608  0496                     u1100:
  4609  0496                     l1575:
  4610  0496  01F1               	clrf	___aodiv@counter
  4611  0497  0AF1               	incf	___aodiv@counter,f
  4612  0498  2CA5               	goto	l1581
  4613  0499                     l1577:
  4614  0499  35A0               	lslf	___aodiv@divisor,f
  4615  049A  0DA1               	rlf	___aodiv@divisor+1,f
  4616  049B  0DA2               	rlf	___aodiv@divisor+2,f
  4617  049C  0DA3               	rlf	___aodiv@divisor+3,f
  4618  049D  0DA4               	rlf	___aodiv@divisor+4,f
  4619  049E  0DA5               	rlf	___aodiv@divisor+5,f
  4620  049F  0DA6               	rlf	___aodiv@divisor+6,f
  4621  04A0  0DA7               	rlf	___aodiv@divisor+7,f
  4622  04A1                     l1579:
  4623  04A1  3001               	movlw	1
  4624  04A2  00F0               	movwf	??___aodiv
  4625  04A3  0870               	movf	??___aodiv,w
  4626  04A4  07F1               	addwf	___aodiv@counter,f
  4627  04A5                     l1581:
  4628  04A5  1FA7               	btfss	___aodiv@divisor+7,7
  4629  04A6  2CA8               	goto	u1111
  4630  04A7  2CA9               	goto	u1110
  4631  04A8                     u1111:
  4632  04A8  2C99               	goto	l1577
  4633  04A9                     u1110:
  4634  04A9                     l1583:
  4635  04A9  35F3               	lslf	___aodiv@quotient,f
  4636  04AA  0DF4               	rlf	___aodiv@quotient+1,f
  4637  04AB  0DF5               	rlf	___aodiv@quotient+2,f
  4638  04AC  0DF6               	rlf	___aodiv@quotient+3,f
  4639  04AD  0DF7               	rlf	___aodiv@quotient+4,f
  4640  04AE  0DF8               	rlf	___aodiv@quotient+5,f
  4641  04AF  0DF9               	rlf	___aodiv@quotient+6,f
  4642  04B0  0DFA               	rlf	___aodiv@quotient+7,f
  4643  04B1                     l1585:
  4644  04B1  0827               	movf	___aodiv@divisor+7,w
  4645  04B2  022F               	subwf	___aodiv@dividend+7,w
  4646  04B3  1D03               	skipz
  4647  04B4  2CCF               	goto	u1125
  4648  04B5  0826               	movf	___aodiv@divisor+6,w
  4649  04B6  022E               	subwf	___aodiv@dividend+6,w
  4650  04B7  1D03               	skipz
  4651  04B8  2CCF               	goto	u1125
  4652  04B9  0825               	movf	___aodiv@divisor+5,w
  4653  04BA  022D               	subwf	___aodiv@dividend+5,w
  4654  04BB  1D03               	skipz
  4655  04BC  2CCF               	goto	u1125
  4656  04BD  0824               	movf	___aodiv@divisor+4,w
  4657  04BE  022C               	subwf	___aodiv@dividend+4,w
  4658  04BF  1D03               	skipz
  4659  04C0  2CCF               	goto	u1125
  4660  04C1  0823               	movf	___aodiv@divisor+3,w
  4661  04C2  022B               	subwf	___aodiv@dividend+3,w
  4662  04C3  1D03               	skipz
  4663  04C4  2CCF               	goto	u1125
  4664  04C5  0822               	movf	___aodiv@divisor+2,w
  4665  04C6  022A               	subwf	___aodiv@dividend+2,w
  4666  04C7  1D03               	skipz
  4667  04C8  2CCF               	goto	u1125
  4668  04C9  0821               	movf	___aodiv@divisor+1,w
  4669  04CA  0229               	subwf	___aodiv@dividend+1,w
  4670  04CB  1D03               	skipz
  4671  04CC  2CCF               	goto	u1125
  4672  04CD  0820               	movf	___aodiv@divisor,w
  4673  04CE  0228               	subwf	___aodiv@dividend,w
  4674  04CF                     u1125:
  4675  04CF  1C03               	skipc
  4676  04D0  2CD2               	goto	u1121
  4677  04D1  2CD3               	goto	u1120
  4678  04D2                     u1121:
  4679  04D2  2CE4               	goto	l1591
  4680  04D3                     u1120:
  4681  04D3                     l1587:
  4682  04D3  0820               	movf	___aodiv@divisor,w
  4683  04D4  02A8               	subwf	___aodiv@dividend,f
  4684  04D5  0821               	movf	___aodiv@divisor+1,w
  4685  04D6  3BA9               	subwfb	___aodiv@dividend+1,f
  4686  04D7  0822               	movf	___aodiv@divisor+2,w
  4687  04D8  3BAA               	subwfb	___aodiv@dividend+2,f
  4688  04D9  0823               	movf	___aodiv@divisor+3,w
  4689  04DA  3BAB               	subwfb	___aodiv@dividend+3,f
  4690  04DB  0824               	movf	___aodiv@divisor+4,w
  4691  04DC  3BAC               	subwfb	___aodiv@dividend+4,f
  4692  04DD  0825               	movf	___aodiv@divisor+5,w
  4693  04DE  3BAD               	subwfb	___aodiv@dividend+5,f
  4694  04DF  0826               	movf	___aodiv@divisor+6,w
  4695  04E0  3BAE               	subwfb	___aodiv@dividend+6,f
  4696  04E1  0827               	movf	___aodiv@divisor+7,w
  4697  04E2  3BAF               	subwfb	___aodiv@dividend+7,f
  4698  04E3                     l1589:
  4699  04E3  1473               	bsf	___aodiv@quotient,0
  4700  04E4                     l1591:
  4701  04E4  36A7               	lsrf	___aodiv@divisor+7,f
  4702  04E5  0CA6               	rrf	___aodiv@divisor+6,f
  4703  04E6  0CA5               	rrf	___aodiv@divisor+5,f
  4704  04E7  0CA4               	rrf	___aodiv@divisor+4,f
  4705  04E8  0CA3               	rrf	___aodiv@divisor+3,f
  4706  04E9  0CA2               	rrf	___aodiv@divisor+2,f
  4707  04EA  0CA1               	rrf	___aodiv@divisor+1,f
  4708  04EB  0CA0               	rrf	___aodiv@divisor,f
  4709  04EC  3001               	movlw	1
  4710  04ED  02F1               	subwf	___aodiv@counter,f
  4711  04EE  1D03               	btfss	3,2
  4712  04EF  2CF1               	goto	u1131
  4713  04F0  2CF2               	goto	u1130
  4714  04F1                     u1131:
  4715  04F1  2CA9               	goto	l1583
  4716  04F2                     u1130:
  4717  04F2                     l1593:
  4718  04F2  0872               	movf	___aodiv@sign,w
  4719  04F3  1903               	btfsc	3,2
  4720  04F4  2CF6               	goto	u1141
  4721  04F5  2CF7               	goto	u1140
  4722  04F6                     u1141:
  4723  04F6  2D15               	goto	l418
  4724  04F7                     u1140:
  4725  04F7                     l1595:
  4726  04F7  09F3               	comf	___aodiv@quotient,f
  4727  04F8  09F4               	comf	___aodiv@quotient+1,f
  4728  04F9  09F5               	comf	___aodiv@quotient+2,f
  4729  04FA  09F6               	comf	___aodiv@quotient+3,f
  4730  04FB  09F7               	comf	___aodiv@quotient+4,f
  4731  04FC  09F8               	comf	___aodiv@quotient+5,f
  4732  04FD  09F9               	comf	___aodiv@quotient+6,f
  4733  04FE  09FA               	comf	___aodiv@quotient+7,f
  4734  04FF  0AF3               	incf	___aodiv@quotient,f
  4735  0500  1D03               	skipz
  4736  0501  2D15               	goto	u115lld
  4737  0502  0AF4               	incf	___aodiv@quotient+1,f
  4738  0503  1D03               	skipz
  4739  0504  2D15               	goto	u115lld
  4740  0505  0AF5               	incf	___aodiv@quotient+2,f
  4741  0506  1D03               	skipz
  4742  0507  2D15               	goto	u115lld
  4743  0508  0AF6               	incf	___aodiv@quotient+3,f
  4744  0509  1D03               	skipz
  4745  050A  2D15               	goto	u115lld
  4746  050B  0AF7               	incf	___aodiv@quotient+4,f
  4747  050C  1D03               	skipz
  4748  050D  2D15               	goto	u115lld
  4749  050E  0AF8               	incf	___aodiv@quotient+5,f
  4750  050F  1D03               	skipz
  4751  0510  2D15               	goto	u115lld
  4752  0511  0AF9               	incf	___aodiv@quotient+6,f
  4753  0512  1D03               	skipz
  4754  0513  2D15               	goto	u115lld
  4755  0514  0AFA               	incf	___aodiv@quotient+7,f
  4756  0515                     u115lld:
  4757  0515                     l418:
  4758  0515  0873               	movf	___aodiv@quotient,w
  4759  0516  0140               	movlb	0	; select bank0
  4760  0517  00A0               	movwf	?___aodiv
  4761  0518  0874               	movf	___aodiv@quotient+1,w
  4762  0519  00A1               	movwf	?___aodiv+1
  4763  051A  0875               	movf	___aodiv@quotient+2,w
  4764  051B  00A2               	movwf	?___aodiv+2
  4765  051C  0876               	movf	___aodiv@quotient+3,w
  4766  051D  00A3               	movwf	?___aodiv+3
  4767  051E  0877               	movf	___aodiv@quotient+4,w
  4768  051F  00A4               	movwf	?___aodiv+4
  4769  0520  0878               	movf	___aodiv@quotient+5,w
  4770  0521  00A5               	movwf	?___aodiv+5
  4771  0522  0879               	movf	___aodiv@quotient+6,w
  4772  0523  00A6               	movwf	?___aodiv+6
  4773  0524  087A               	movf	___aodiv@quotient+7,w
  4774  0525  00A7               	movwf	?___aodiv+7
  4775  0526                     l419:
  4776  0526  0008               	return
  4777  0527                     __end_of___aodiv:
  4778                           
  4779                           	psect	text14
  4780  028D                     __ptext14:	
  4781 ;; *************** function _atoi *****************
  4782 ;; Defined at:
  4783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  s               2    6[COMMON] PTR const unsigned char 
  4786 ;;		 -> STR_1(5), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  n               2    7[BANK0 ] int 
  4789 ;;  neg             2    0[BANK0 ] int 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  2    6[COMMON] int 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  4799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4800 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4802 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  4803 ;;Total ram usage:       15 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    1
  4806 ;; This function calls:
  4807 ;;		___wmul
  4808 ;;		_isdigit
  4809 ;;		_isspace
  4810 ;; This function is called by:
  4811 ;;		_vfpfcnvrt
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _atoi
  4817  028D                     _atoi:
  4818  028D                     l1725:	
  4819                           ;incstack = 0
  4820                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4821                           
  4822  028D  0140               	movlb	0	; select bank0
  4823  028E  01A7               	clrf	atoi@n
  4824  028F  01A8               	clrf	atoi@n+1
  4825  0290  01A0               	clrf	atoi@neg
  4826  0291  01A1               	clrf	atoi@neg+1
  4827  0292  2A97               	goto	l1729
  4828  0293                     l1727:
  4829  0293  3001               	movlw	1
  4830  0294  07F6               	addwf	atoi@s,f
  4831  0295  3000               	movlw	0
  4832  0296  3DF7               	addwfc	atoi@s+1,f
  4833  0297                     l1729:
  4834  0297  01A6               	clrf	_atoi$886
  4835  0298  0AA6               	incf	_atoi$886,f
  4836  0299                     l1731:
  4837  0299  0876               	movf	atoi@s,w
  4838  029A  0084               	movwf	4
  4839  029B  0877               	movf	atoi@s+1,w
  4840  029C  0085               	movwf	5
  4841  029D  0012               	moviw fsr0++
  4842  029E  3A20               	xorlw	32
  4843  029F  1903               	btfsc	3,2
  4844  02A0  2AA2               	goto	u1511
  4845  02A1  2AA3               	goto	u1510
  4846  02A2                     u1511:
  4847  02A2  2AB8               	goto	l1737
  4848  02A3                     u1510:
  4849  02A3                     l1733:
  4850  02A3  0876               	movf	atoi@s,w
  4851  02A4  0084               	movwf	4
  4852  02A5  0877               	movf	atoi@s+1,w
  4853  02A6  0085               	movwf	5
  4854  02A7  0800               	movf	0,w	;code access
  4855  02A8  3EF7               	addlw	247
  4856  02A9  00F8               	movwf	??_atoi
  4857  02AA  30FF               	movlw	255
  4858  02AB  1803               	skipnc
  4859  02AC  3000               	movlw	0
  4860  02AD  00F9               	movwf	??_atoi+1
  4861  02AE  3000               	movlw	0
  4862  02AF  0279               	subwf	??_atoi+1,w
  4863  02B0  3005               	movlw	5
  4864  02B1  1903               	skipnz
  4865  02B2  0278               	subwf	??_atoi,w
  4866  02B3  1C03               	skipc
  4867  02B4  2AB6               	goto	u1521
  4868  02B5  2AB7               	goto	u1520
  4869  02B6                     u1521:
  4870  02B6  2AB8               	goto	l1737
  4871  02B7                     u1520:
  4872  02B7                     l1735:
  4873  02B7  01A6               	clrf	_atoi$886
  4874  02B8                     l1737:
  4875  02B8  0826               	movf	_atoi$886,w
  4876  02B9  00F8               	movwf	??_atoi
  4877  02BA  01F9               	clrf	??_atoi+1
  4878  02BB  0878               	movf	??_atoi,w
  4879  02BC  00A2               	movwf	_atoi$885
  4880  02BD  0879               	movf	??_atoi+1,w
  4881  02BE  00A3               	movwf	_atoi$885+1
  4882  02BF                     l1741:
  4883  02BF  0822               	movf	_atoi$885,w
  4884  02C0  0423               	iorwf	_atoi$885+1,w
  4885  02C1  1D03               	btfss	3,2
  4886  02C2  2AC4               	goto	u1531
  4887  02C3  2AC5               	goto	u1530
  4888  02C4                     u1531:
  4889  02C4  2A93               	goto	l1727
  4890  02C5                     u1530:
  4891  02C5  2ACF               	goto	l1745
  4892  02C6                     l1743:
  4893  02C6  3001               	movlw	1
  4894  02C7  00A0               	movwf	atoi@neg
  4895  02C8  3000               	movlw	0
  4896  02C9  00A1               	movwf	atoi@neg+1
  4897  02CA                     l892:
  4898  02CA  3001               	movlw	1
  4899  02CB  07F6               	addwf	atoi@s,f
  4900  02CC  3000               	movlw	0
  4901  02CD  3DF7               	addwfc	atoi@s+1,f
  4902  02CE  2B03               	goto	l1751
  4903  02CF                     l1745:
  4904  02CF  0876               	movf	atoi@s,w
  4905  02D0  0084               	movwf	4
  4906  02D1  0877               	movf	atoi@s+1,w
  4907  02D2  0085               	movwf	5
  4908  02D3  0800               	movf	0,w	;code access
  4909  02D4  00F8               	movwf	??_atoi
  4910  02D5  01F9               	clrf	??_atoi+1
  4911                           
  4912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4913                           ; Switch size 1, requested type "simple"
  4914                           ; Number of cases is 1, Range of values is 0 to 0
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte            4     3 (average)
  4918                           ; direct_byte            8     6 (fixed)
  4919                           ; jumptable            260     6 (fixed)
  4920                           ;	Chosen strategy is simple_byte
  4921  02D6  0879               	movf	??_atoi+1,w
  4922  02D7  3A00               	xorlw	0	; case 0
  4923  02D8  1903               	skipnz
  4924  02D9  2ADB               	goto	l2015
  4925  02DA  2B03               	goto	l1751
  4926  02DB                     l2015:
  4927                           
  4928                           ; Switch size 1, requested type "simple"
  4929                           ; Number of cases is 2, Range of values is 43 to 45
  4930                           ; switch strategies available:
  4931                           ; Name         Instructions Cycles
  4932                           ; simple_byte            7     4 (average)
  4933                           ; direct_byte           15     9 (fixed)
  4934                           ; jumptable            263     9 (fixed)
  4935                           ;	Chosen strategy is simple_byte
  4936  02DB  0878               	movf	??_atoi,w
  4937  02DC  3A2B               	xorlw	43	; case 43
  4938  02DD  1903               	skipnz
  4939  02DE  2ACA               	goto	l892
  4940  02DF  3A06               	xorlw	6	; case 45
  4941  02E0  1903               	skipnz
  4942  02E1  2AC6               	goto	l1743
  4943  02E2  2B03               	goto	l1751
  4944  02E3                     l1747:
  4945  02E3  0876               	movf	atoi@s,w
  4946  02E4  0084               	movwf	4
  4947  02E5  0877               	movf	atoi@s+1,w
  4948  02E6  0085               	movwf	5
  4949  02E7  0800               	movf	0,w	;code access
  4950  02E8  00F8               	movwf	??_atoi
  4951  02E9  0828               	movf	atoi@n+1,w
  4952  02EA  00F1               	movwf	___wmul@multiplier+1
  4953  02EB  0827               	movf	atoi@n,w
  4954  02EC  00F0               	movwf	___wmul@multiplier
  4955  02ED  300A               	movlw	10
  4956  02EE  00F2               	movwf	___wmul@multiplicand
  4957  02EF  3000               	movlw	0
  4958  02F0  00F3               	movwf	___wmul@multiplicand+1
  4959  02F1  3180  2093  3182   	fcall	___wmul
  4960  02F4  0871               	movf	?___wmul+1,w
  4961  02F5  00FA               	movwf	??_atoi+2
  4962  02F6  0878               	movf	??_atoi,w
  4963  02F7  0270               	subwf	?___wmul,w
  4964  02F8  00F9               	movwf	??_atoi+1
  4965  02F9  1C03               	skipc
  4966  02FA  03FA               	decf	??_atoi+2,f
  4967  02FB  0879               	movf	??_atoi+1,w
  4968  02FC  3E30               	addlw	48
  4969  02FD  0140               	movlb	0	; select bank0
  4970  02FE  00A7               	movwf	atoi@n
  4971  02FF  3000               	movlw	0
  4972  0300  3D7A               	addwfc	??_atoi+2,w
  4973  0301  00A8               	movwf	atoi@n+1
  4974  0302  2ACA               	goto	l892
  4975  0303                     l1751:
  4976  0303  0876               	movf	atoi@s,w
  4977  0304  0084               	movwf	4
  4978  0305  0877               	movf	atoi@s+1,w
  4979  0306  0085               	movwf	5
  4980  0307  0800               	movf	0,w	;code access
  4981  0308  3ED0               	addlw	208
  4982  0309  00F8               	movwf	??_atoi
  4983  030A  30FF               	movlw	255
  4984  030B  1803               	skipnc
  4985  030C  3000               	movlw	0
  4986  030D  00F9               	movwf	??_atoi+1
  4987  030E  3000               	movlw	0
  4988  030F  0279               	subwf	??_atoi+1,w
  4989  0310  300A               	movlw	10
  4990  0311  1903               	skipnz
  4991  0312  0278               	subwf	??_atoi,w
  4992  0313  1C03               	skipc
  4993  0314  2B16               	goto	u1541
  4994  0315  2B18               	goto	u1540
  4995  0316                     u1541:
  4996  0316  3001               	movlw	1
  4997  0317  2B19               	goto	u1550
  4998  0318                     u1540:
  4999  0318  3000               	movlw	0
  5000  0319                     u1550:
  5001  0319  00FA               	movwf	??_atoi+2
  5002  031A  01FB               	clrf	??_atoi+3
  5003  031B  087A               	movf	??_atoi+2,w
  5004  031C  00A4               	movwf	_atoi$887
  5005  031D  087B               	movf	??_atoi+3,w
  5006  031E  00A5               	movwf	_atoi$887+1
  5007  031F                     l1755:
  5008  031F  0824               	movf	_atoi$887,w
  5009  0320  0425               	iorwf	_atoi$887+1,w
  5010  0321  1D03               	btfss	3,2
  5011  0322  2B24               	goto	u1561
  5012  0323  2B25               	goto	u1560
  5013  0324                     u1561:
  5014  0324  2AE3               	goto	l1747
  5015  0325                     u1560:
  5016  0325                     l1757:
  5017  0325  0820               	movf	atoi@neg,w
  5018  0326  0421               	iorwf	atoi@neg+1,w
  5019  0327  1D03               	btfss	3,2
  5020  0328  2B2A               	goto	u1571
  5021  0329  2B2B               	goto	u1570
  5022  032A                     u1571:
  5023  032A  2B37               	goto	l1761
  5024  032B                     u1570:
  5025  032B                     l1759:
  5026  032B  0927               	comf	atoi@n,w
  5027  032C  00F8               	movwf	??_atoi
  5028  032D  0928               	comf	atoi@n+1,w
  5029  032E  00F9               	movwf	??_atoi+1
  5030  032F  0AF8               	incf	??_atoi,f
  5031  0330  1903               	skipnz
  5032  0331  0AF9               	incf	??_atoi+1,f
  5033  0332  0878               	movf	??_atoi,w
  5034  0333  00F6               	movwf	?_atoi
  5035  0334  0879               	movf	??_atoi+1,w
  5036  0335  00F7               	movwf	?_atoi+1
  5037  0336  2B3B               	goto	l905
  5038  0337                     l1761:
  5039  0337  0828               	movf	atoi@n+1,w
  5040  0338  00F7               	movwf	?_atoi+1
  5041  0339  0827               	movf	atoi@n,w
  5042  033A  00F6               	movwf	?_atoi
  5043  033B                     l905:
  5044  033B  0008               	return
  5045  033C                     __end_of_atoi:
  5046                           
  5047                           	psect	text15
  5048  00B2                     __ptext15:	
  5049 ;; *************** function _isspace *****************
  5050 ;; Defined at:
  5051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  c               2    0[COMMON] int 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2    0[COMMON] int 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5068 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5069 ;;Total ram usage:        5 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_atoi
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _isspace
  5080  00B2                     _isspace:
  5081  00B2                     l1655:	
  5082                           ;incstack = 0
  5083                           ; Regs used in _isspace: [wreg+status,2+status,0]
  5084                           
  5085  00B2  01F4               	clrf	_isspace$903
  5086  00B3  0AF4               	incf	_isspace$903,f
  5087  00B4                     l1657:
  5088  00B4  3020               	movlw	32
  5089  00B5  0670               	xorwf	isspace@c,w
  5090  00B6  0471               	iorwf	isspace@c+1,w
  5091  00B7  1903               	btfsc	3,2
  5092  00B8  28BA               	goto	u1331
  5093  00B9  28BB               	goto	u1330
  5094  00BA                     u1331:
  5095  00BA  28CB               	goto	l1663
  5096  00BB                     u1330:
  5097  00BB                     l1659:
  5098  00BB  0870               	movf	isspace@c,w
  5099  00BC  3EF7               	addlw	247
  5100  00BD  00F2               	movwf	??_isspace
  5101  00BE  30FF               	movlw	255
  5102  00BF  3D71               	addwfc	isspace@c+1,w
  5103  00C0  00F3               	movwf	??_isspace+1
  5104  00C1  3000               	movlw	0
  5105  00C2  0273               	subwf	??_isspace+1,w
  5106  00C3  3005               	movlw	5
  5107  00C4  1903               	skipnz
  5108  00C5  0272               	subwf	??_isspace,w
  5109  00C6  1C03               	skipc
  5110  00C7  28C9               	goto	u1341
  5111  00C8  28CA               	goto	u1340
  5112  00C9                     u1341:
  5113  00C9  28CB               	goto	l1663
  5114  00CA                     u1340:
  5115  00CA                     l1661:
  5116  00CA  01F4               	clrf	_isspace$903
  5117  00CB                     l1663:
  5118  00CB  0874               	movf	_isspace$903,w
  5119  00CC  00F2               	movwf	??_isspace
  5120  00CD  01F3               	clrf	??_isspace+1
  5121  00CE  0872               	movf	??_isspace,w
  5122  00CF  00F0               	movwf	?_isspace
  5123  00D0  0873               	movf	??_isspace+1,w
  5124  00D1  00F1               	movwf	?_isspace+1
  5125  00D2                     l916:
  5126  00D2  0008               	return
  5127  00D3                     __end_of_isspace:
  5128                           
  5129                           	psect	text16
  5130  0048                     __ptext16:	
  5131 ;; *************** function _isdigit *****************
  5132 ;; Defined at:
  5133 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  c               2    0[COMMON] int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    0[COMMON] int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5149 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5150 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5151 ;;Total ram usage:        6 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_vfpfcnvrt
  5157 ;;		_atoi
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           
  5162                           ;psect for function _isdigit
  5163  0048                     _isdigit:
  5164  0048                     l1651:	
  5165                           ;incstack = 0
  5166                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5167                           
  5168  0048  0870               	movf	isdigit@c,w
  5169  0049  3ED0               	addlw	208
  5170  004A  00F2               	movwf	??_isdigit
  5171  004B  30FF               	movlw	255
  5172  004C  3D71               	addwfc	isdigit@c+1,w
  5173  004D  00F3               	movwf	??_isdigit+1
  5174  004E  3000               	movlw	0
  5175  004F  0273               	subwf	??_isdigit+1,w
  5176  0050  300A               	movlw	10
  5177  0051  1903               	skipnz
  5178  0052  0272               	subwf	??_isdigit,w
  5179  0053  1C03               	skipc
  5180  0054  2856               	goto	u1311
  5181  0055  2858               	goto	u1310
  5182  0056                     u1311:
  5183  0056  3001               	movlw	1
  5184  0057  2859               	goto	u1320
  5185  0058                     u1310:
  5186  0058  3000               	movlw	0
  5187  0059                     u1320:
  5188  0059  00F4               	movwf	??_isdigit+2
  5189  005A  01F5               	clrf	??_isdigit+3
  5190  005B  0874               	movf	??_isdigit+2,w
  5191  005C  00F0               	movwf	?_isdigit
  5192  005D  0875               	movf	??_isdigit+3,w
  5193  005E  00F1               	movwf	?_isdigit+1
  5194  005F                     l908:
  5195  005F  0008               	return
  5196  0060                     __end_of_isdigit:
  5197                           
  5198                           	psect	text17
  5199  0093                     __ptext17:	
  5200 ;; *************** function ___wmul *****************
  5201 ;; Defined at:
  5202 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  multiplier      2    0[COMMON] unsigned int 
  5205 ;;  multiplicand    2    2[COMMON] unsigned int 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  product         2    4[COMMON] unsigned int 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;                  2    0[COMMON] unsigned int 
  5210 ;; Registers used:
  5211 ;;		wreg, status,2, status,0
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        6 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; This function calls:
  5224 ;;		Nothing
  5225 ;; This function is called by:
  5226 ;;		_atoi
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function ___wmul
  5232  0093                     ___wmul:
  5233  0093                     l1545:	
  5234                           ;incstack = 0
  5235                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5236                           
  5237  0093  01F4               	clrf	___wmul@product
  5238  0094  01F5               	clrf	___wmul@product+1
  5239  0095                     l1547:
  5240  0095  1C70               	btfss	___wmul@multiplier,0
  5241  0096  2898               	goto	u1011
  5242  0097  2899               	goto	u1010
  5243  0098                     u1011:
  5244  0098  289D               	goto	l318
  5245  0099                     u1010:
  5246  0099                     l1549:
  5247  0099  0872               	movf	___wmul@multiplicand,w
  5248  009A  07F4               	addwf	___wmul@product,f
  5249  009B  0873               	movf	___wmul@multiplicand+1,w
  5250  009C  3DF5               	addwfc	___wmul@product+1,f
  5251  009D                     l318:
  5252  009D  3001               	movlw	1
  5253  009E                     u1025:
  5254  009E  35F2               	lslf	___wmul@multiplicand,f
  5255  009F  0DF3               	rlf	___wmul@multiplicand+1,f
  5256  00A0  0B89               	decfsz	9,f
  5257  00A1  289E               	goto	u1025
  5258  00A2                     l1551:
  5259  00A2  3001               	movlw	1
  5260  00A3                     u1035:
  5261  00A3  36F1               	lsrf	___wmul@multiplier+1,f
  5262  00A4  0CF0               	rrf	___wmul@multiplier,f
  5263  00A5  0B89               	decfsz	9,f
  5264  00A6  28A3               	goto	u1035
  5265  00A7                     l1553:
  5266  00A7  0870               	movf	___wmul@multiplier,w
  5267  00A8  0471               	iorwf	___wmul@multiplier+1,w
  5268  00A9  1D03               	btfss	3,2
  5269  00AA  28AC               	goto	u1041
  5270  00AB  28AD               	goto	u1040
  5271  00AC                     u1041:
  5272  00AC  2895               	goto	l1547
  5273  00AD                     u1040:
  5274  00AD                     l1555:
  5275  00AD  0875               	movf	___wmul@product+1,w
  5276  00AE  00F1               	movwf	?___wmul+1
  5277  00AF  0874               	movf	___wmul@product,w
  5278  00B0  00F0               	movwf	?___wmul
  5279  00B1                     l320:
  5280  00B1  0008               	return
  5281  00B2                     __end_of___wmul:
  5282                           
  5283                           	psect	text18
  5284  000F                     __ptext18:	
  5285 ;; *************** function _lcdLocateCursor *****************
  5286 ;; Defined at:
  5287 ;;		line 134 in file "AQM0802.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  pos_x           1    wreg     unsigned char 
  5290 ;;  pos_y           1    6[COMMON] unsigned char 
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;  pos_x           1    8[COMMON] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, pclath, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5302 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5306 ;;Total ram usage:        3 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    3
  5309 ;; This function calls:
  5310 ;;		_lcdSendCommandData
  5311 ;; This function is called by:
  5312 ;;		_main
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function _lcdLocateCursor
  5318  000F                     _lcdLocateCursor:
  5319                           
  5320                           ;incstack = 0
  5321                           ; Regs used in _lcdLocateCursor: [wreg+status,2+status,0+pclath+cstack]
  5322                           ;lcdLocateCursor@pos_x stored from wreg
  5323  000F  00F8               	movwf	lcdLocateCursor@pos_x
  5324  0010                     l1867:
  5325                           
  5326                           ;AQM0802.c: 134: void lcdLocateCursor(uint8_t pos_x, uint8_t pos_y);AQM0802.c: 135: {;AQ
      +                          M0802.c: 136:     lcdSendCommandData(0x80 + 0x40 * (pos_y - 1) + (pos_x - 1));
  5327  0010  0876               	movf	lcdLocateCursor@pos_y,w
  5328  0011  00F7               	movwf	??_lcdLocateCursor
  5329  0012  3005               	movlw	5
  5330  0013                     u1685:
  5331  0013  35F7               	lslf	??_lcdLocateCursor,f
  5332  0014  3EFF               	addlw	-1
  5333  0015  1D03               	skipz
  5334  0016  2813               	goto	u1685
  5335  0017  3577               	lslf	??_lcdLocateCursor,w
  5336  0018  0778               	addwf	lcdLocateCursor@pos_x,w
  5337  0019  3E3F               	addlw	63
  5338  001A  318F  27F1  3180   	fcall	_lcdSendCommandData
  5339  001D                     l49:
  5340  001D  0008               	return
  5341  001E                     __end_of_lcdLocateCursor:
  5342                           
  5343                           	psect	text19
  5344  00FB                     __ptext19:	
  5345 ;; *************** function _lcdInitialize *****************
  5346 ;; Defined at:
  5347 ;;		line 106 in file "AQM0802.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      void 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, pclath, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5363 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    3
  5368 ;; This function calls:
  5369 ;;		_lcdSendCommandData
  5370 ;; This function is called by:
  5371 ;;		_main
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _lcdInitialize
  5377  00FB                     _lcdInitialize:
  5378  00FB                     l1855:	
  5379                           ;incstack = 0
  5380                           ; Regs used in _lcdInitialize: [wreg+status,2+status,0+pclath+cstack]
  5381                           
  5382                           
  5383                           ;AQM0802.c: 109:     lcdSendCommandData(0x38);
  5384  00FB  3038               	movlw	56
  5385  00FC  318F  27F1  3180   	fcall	_lcdSendCommandData
  5386                           
  5387                           ;AQM0802.c: 110:     lcdSendCommandData(0x39);
  5388  00FF  3039               	movlw	57
  5389  0100  318F  27F1  3180   	fcall	_lcdSendCommandData
  5390                           
  5391                           ;AQM0802.c: 111:     lcdSendCommandData(0x14);
  5392  0103  3014               	movlw	20
  5393  0104  318F  27F1  3180   	fcall	_lcdSendCommandData
  5394                           
  5395                           ;AQM0802.c: 112:     lcdSendCommandData(0x70);
  5396  0107  3070               	movlw	112
  5397  0108  318F  27F1  3180   	fcall	_lcdSendCommandData
  5398                           
  5399                           ;AQM0802.c: 113:     lcdSendCommandData(0x56);
  5400  010B  3056               	movlw	86
  5401  010C  318F  27F1  3180   	fcall	_lcdSendCommandData
  5402                           
  5403                           ;AQM0802.c: 114:     lcdSendCommandData(0x6c);
  5404  010F  306C               	movlw	108
  5405  0110  318F  27F1  3180   	fcall	_lcdSendCommandData
  5406  0113                     l1857:
  5407                           
  5408                           ;AQM0802.c: 117:     _delay((unsigned long)((200)*(3200000/4000.0)));
  5409  0113  30D0               	movlw	208
  5410  0114  00F6               	movwf	??_lcdInitialize
  5411  0115  30CA               	movlw	202
  5412  0116                     u1847:
  5413  0116  0B89               	decfsz	9,f
  5414  0117  2916               	goto	u1847
  5415  0118  0BF6               	decfsz	??_lcdInitialize,f
  5416  0119  2916               	goto	u1847
  5417  011A                     l1859:
  5418                           
  5419                           ;AQM0802.c: 120:     lcdSendCommandData(0x38);
  5420  011A  3038               	movlw	56
  5421  011B  318F  27F1  3180   	fcall	_lcdSendCommandData
  5422  011E                     l1861:
  5423                           
  5424                           ;AQM0802.c: 121:     lcdSendCommandData(0x0c);
  5425  011E  300C               	movlw	12
  5426  011F  318F  27F1  3180   	fcall	_lcdSendCommandData
  5427  0122                     l1863:
  5428                           
  5429                           ;AQM0802.c: 122:     lcdSendCommandData(0x01);
  5430  0122  3001               	movlw	1
  5431  0123  318F  27F1  3180   	fcall	_lcdSendCommandData
  5432  0126                     l43:
  5433  0126  0008               	return
  5434  0127                     __end_of_lcdInitialize:
  5435                           
  5436                           	psect	text20
  5437  0FF1                     __ptext20:	
  5438 ;; *************** function _lcdSendCommandData *****************
  5439 ;; Defined at:
  5440 ;;		line 80 in file "AQM0802.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  command         1    wreg     unsigned char 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  command         1    5[COMMON] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, pclath, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5458 ;;Total ram usage:        2 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    2
  5461 ;; This function calls:
  5462 ;;		_lcdI2CProtocol
  5463 ;; This function is called by:
  5464 ;;		_lcdInitialize
  5465 ;;		_lcdLocateCursor
  5466 ;;		_lcdClearDisplay
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function _lcdSendCommandData
  5472  0FF1                     _lcdSendCommandData:
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in _lcdSendCommandData: [wreg+status,2+status,0+pclath+cstack]
  5476                           ;lcdSendCommandData@command stored from wreg
  5477  0FF1  00F5               	movwf	lcdSendCommandData@command
  5478  0FF2                     l1837:
  5479                           
  5480                           ;AQM0802.c: 80: void lcdSendCommandData(uint8_t command);AQM0802.c: 81: {;AQM0802.c: 83:
      +                               lcdI2CProtocol(0x7c, 0x00, command);
  5481  0FF2  01F1               	clrf	lcdI2CProtocol@cont_code
  5482  0FF3  0875               	movf	lcdSendCommandData@command,w
  5483  0FF4  00F4               	movwf	??_lcdSendCommandData
  5484  0FF5  0874               	movf	??_lcdSendCommandData,w
  5485  0FF6  00F2               	movwf	lcdI2CProtocol@data
  5486  0FF7  307C               	movlw	124
  5487  0FF8  3180  201E  318F   	fcall	_lcdI2CProtocol
  5488  0FFB                     l1839:
  5489                           
  5490                           ;AQM0802.c: 88:     _delay((unsigned long)((1)*(3200000/4000.0)));
  5491  0FFB  30A0               	movlw	160
  5492  0FFC                     u1857:
  5493  0FFC  3200               	nop2
  5494  0FFD  0B89               	decfsz	9,f
  5495  0FFE  2FFC               	goto	u1857
  5496  0FFF                     l37:
  5497  0FFF  0008               	return
  5498  1000                     __end_of_lcdSendCommandData:
  5499                           
  5500                           	psect	text21
  5501  001E                     __ptext21:	
  5502 ;; *************** function _lcdI2CProtocol *****************
  5503 ;; Defined at:
  5504 ;;		line 69 in file "AQM0802.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  address         1    wreg     unsigned char 
  5507 ;;  cont_code       1    1[COMMON] unsigned char 
  5508 ;;  data            1    2[COMMON] unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  address         1    3[COMMON] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0, pclath, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5523 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5524 ;;Total ram usage:        3 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    1
  5527 ;; This function calls:
  5528 ;;		_i2cProtocolSendData
  5529 ;;		_i2cProtocolStart
  5530 ;;		_i2cProtocolStop
  5531 ;; This function is called by:
  5532 ;;		_lcdSendCommandData
  5533 ;;		_lcdSendCharacterData
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _lcdI2CProtocol
  5539  001E                     _lcdI2CProtocol:
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in _lcdI2CProtocol: [wreg+status,2+status,0+pclath+cstack]
  5543                           ;lcdI2CProtocol@address stored from wreg
  5544  001E  00F3               	movwf	lcdI2CProtocol@address
  5545  001F                     l1493:
  5546                           
  5547                           ;AQM0802.c: 69: void lcdI2CProtocol(uint8_t address, uint8_t cont_code, uint8_t data);AQ
      +                          M0802.c: 70: {;AQM0802.c: 71:     i2cProtocolStart();
  5548  001F  318F  27CB  3180   	fcall	_i2cProtocolStart
  5549  0022                     l1495:
  5550                           
  5551                           ;AQM0802.c: 72:     i2cProtocolSendData(address);
  5552  0022  0873               	movf	lcdI2CProtocol@address,w
  5553  0023  318F  27D6  3180   	fcall	_i2cProtocolSendData
  5554  0026                     l1497:
  5555                           
  5556                           ;AQM0802.c: 73:     i2cProtocolSendData(cont_code);
  5557  0026  0871               	movf	lcdI2CProtocol@cont_code,w
  5558  0027  318F  27D6  3180   	fcall	_i2cProtocolSendData
  5559  002A                     l1499:
  5560                           
  5561                           ;AQM0802.c: 74:     i2cProtocolSendData(data);
  5562  002A  0872               	movf	lcdI2CProtocol@data,w
  5563  002B  318F  27D6  3180   	fcall	_i2cProtocolSendData
  5564  002E                     l1501:
  5565                           
  5566                           ;AQM0802.c: 75:     i2cProtocolStop();
  5567  002E  3180  2004  3180   	fcall	_i2cProtocolStop
  5568  0031                     l34:
  5569  0031  0008               	return
  5570  0032                     __end_of_lcdI2CProtocol:
  5571                           
  5572                           	psect	text22
  5573  0004                     __ptext22:	
  5574 ;; *************** function _i2cProtocolStop *****************
  5575 ;; Defined at:
  5576 ;;		line 26 in file "AQM0802.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		None
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5594 ;;Total ram usage:        0 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_lcdI2CProtocol
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function _i2cProtocolStop
  5605  0004                     _i2cProtocolStop:
  5606  0004                     l1487:	
  5607                           ;incstack = 0
  5608                           ; Regs used in _i2cProtocolStop: []
  5609                           
  5610                           
  5611                           ;AQM0802.c: 32:     SSP2IF = 0;
  5612  0004  014E               	movlb	14	; select bank14
  5613  0005  110F               	bcf	15,2	;volatile
  5614                           
  5615                           ;AQM0802.c: 33:     SSP2CON2bits.PEN = 1;
  5616  0006  0143               	movlb	3	; select bank3
  5617  0007  151B               	bsf	27,2	;volatile
  5618  0008                     l17:	
  5619                           ;AQM0802.c: 34:     while(SSP2IF == 0) {};
  5620                           
  5621  0008  014E               	movlb	14	; select bank14
  5622  0009  1D0F               	btfss	15,2	;volatile
  5623  000A  280C               	goto	u931
  5624  000B  280D               	goto	u930
  5625  000C                     u931:
  5626  000C  2808               	goto	l17
  5627  000D                     u930:
  5628  000D                     l19:
  5629                           
  5630                           ;AQM0802.c: 35:     SSP2IF = 0;
  5631  000D  110F               	bcf	15,2	;volatile
  5632  000E                     l20:	
  5633                           ;AQM0802.c: 37:     return;
  5634                           
  5635  000E  0008               	return
  5636  000F                     __end_of_i2cProtocolStop:
  5637                           
  5638                           	psect	text23
  5639  0FCB                     __ptext23:	
  5640 ;; *************** function _i2cProtocolStart *****************
  5641 ;; Defined at:
  5642 ;;		line 12 in file "AQM0802.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		None
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_lcdI2CProtocol
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _i2cProtocolStart
  5671  0FCB                     _i2cProtocolStart:
  5672  0FCB                     l1485:	
  5673                           ;incstack = 0
  5674                           ; Regs used in _i2cProtocolStart: []
  5675                           
  5676                           
  5677                           ;AQM0802.c: 18:     SSP2IF = 0;
  5678  0FCB  014E               	movlb	14	; select bank14
  5679  0FCC  110F               	bcf	15,2	;volatile
  5680                           
  5681                           ;AQM0802.c: 19:     SSP2CON2bits.SEN = 1;
  5682  0FCD  0143               	movlb	3	; select bank3
  5683  0FCE  141B               	bsf	27,0	;volatile
  5684  0FCF                     l11:	
  5685                           ;AQM0802.c: 20:     while(SSP2IF == 0);
  5686                           
  5687  0FCF  014E               	movlb	14	; select bank14
  5688  0FD0  1D0F               	btfss	15,2	;volatile
  5689  0FD1  2FD3               	goto	u921
  5690  0FD2  2FD4               	goto	u920
  5691  0FD3                     u921:
  5692  0FD3  2FCF               	goto	l11
  5693  0FD4                     u920:
  5694  0FD4                     l13:
  5695                           
  5696                           ;AQM0802.c: 21:     SSP2IF = 0;
  5697  0FD4  110F               	bcf	15,2	;volatile
  5698  0FD5                     l14:	
  5699                           ;AQM0802.c: 23:     return;
  5700                           
  5701  0FD5  0008               	return
  5702  0FD6                     __end_of_i2cProtocolStart:
  5703                           
  5704                           	psect	text24
  5705  0FD6                     __ptext24:	
  5706 ;; *************** function _i2cProtocolSendData *****************
  5707 ;; Defined at:
  5708 ;;		line 40 in file "AQM0802.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  data            1    wreg     unsigned char 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  data            1    0[COMMON] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_lcdI2CProtocol
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           
  5736                           ;psect for function _i2cProtocolSendData
  5737  0FD6                     _i2cProtocolSendData:
  5738                           
  5739                           ;incstack = 0
  5740                           ; Regs used in _i2cProtocolSendData: [wreg]
  5741                           ;i2cProtocolSendData@data stored from wreg
  5742  0FD6  00F0               	movwf	i2cProtocolSendData@data
  5743  0FD7                     l1489:
  5744                           
  5745                           ;AQM0802.c: 40: void i2cProtocolSendData(uint8_t data);AQM0802.c: 41: {;AQM0802.c: 45:  
      +                             SSP2IF = 0;
  5746  0FD7  014E               	movlb	14	; select bank14
  5747  0FD8  110F               	bcf	15,2	;volatile
  5748  0FD9                     l1491:
  5749                           
  5750                           ;AQM0802.c: 46:     SSP2BUF = data;
  5751  0FD9  0870               	movf	i2cProtocolSendData@data,w
  5752  0FDA  0143               	movlb	3	; select bank3
  5753  0FDB  0096               	movwf	22	;volatile
  5754  0FDC                     l23:	
  5755                           ;AQM0802.c: 47:     while(SSP2IF == 0);
  5756                           
  5757  0FDC  014E               	movlb	14	; select bank14
  5758  0FDD  1D0F               	btfss	15,2	;volatile
  5759  0FDE  2FE0               	goto	u941
  5760  0FDF  2FE1               	goto	u940
  5761  0FE0                     u941:
  5762  0FE0  2FDC               	goto	l23
  5763  0FE1                     u940:
  5764  0FE1                     l25:
  5765                           
  5766                           ;AQM0802.c: 48:     SSP2IF = 0;
  5767  0FE1  110F               	bcf	15,2	;volatile
  5768  0FE2                     l26:	
  5769                           ;AQM0802.c: 50:     return;
  5770                           
  5771  0FE2  0008               	return
  5772  0FE3                     __end_of_i2cProtocolSendData:
  5773                           
  5774                           	psect	text25
  5775  022B                     __ptext25:	
  5776 ;; *************** function _init *****************
  5777 ;; Defined at:
  5778 ;;		line 95 in file "main.c"
  5779 ;; Parameters:    Size  Location     Type
  5780 ;;		None
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  5792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  5796 ;;Total ram usage:        0 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_main
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           
  5806                           ;psect for function _init
  5807  022B                     _init:
  5808  022B                     l1871:	
  5809                           ;incstack = 0
  5810                           ; Regs used in _init: [wreg+status,2+status,0]
  5811                           
  5812                           
  5813                           ;main.c: 98:     OSCCON1bits.NOSC = 0b110;
  5814  022B  0151               	movlb	17	; select bank17
  5815  022C  080D               	movf	13,w	;volatile
  5816  022D  398F               	andlw	-113
  5817  022E  3860               	iorlw	96
  5818  022F  008D               	movwf	13	;volatile
  5819                           
  5820                           ;main.c: 99:     OSCCON1bits.NDIV = 0b0000;
  5821  0230  30F0               	movlw	-16
  5822  0231  058D               	andwf	13,f	;volatile
  5823                           
  5824                           ;main.c: 100:     OSCFRQbits.HFFRQ = 0b110;
  5825  0232  0813               	movf	19,w	;volatile
  5826  0233  39F8               	andlw	-8
  5827  0234  3806               	iorlw	6
  5828  0235  0093               	movwf	19	;volatile
  5829  0236                     l1873:
  5830                           
  5831                           ;main.c: 103:     ANSELA = 0b00000000;
  5832  0236  017E               	movlb	62	; select bank62
  5833  0237  01B8               	clrf	56	;volatile
  5834  0238                     l1875:
  5835                           
  5836                           ;main.c: 104:     ANSELB = 0b00000000;
  5837  0238  01C3               	clrf	67	;volatile
  5838  0239                     l1877:
  5839                           
  5840                           ;main.c: 105:     ANSELC = 0b10000000;
  5841  0239  3080               	movlw	128
  5842  023A  00CE               	movwf	78	;volatile
  5843  023B                     l1879:
  5844                           
  5845                           ;main.c: 106:     TRISA = 0b00000000;
  5846  023B  0140               	movlb	0	; select bank0
  5847  023C  0191               	clrf	17	;volatile
  5848  023D                     l1881:
  5849                           
  5850                           ;main.c: 107:     TRISB = 0b00000011;
  5851  023D  3003               	movlw	3
  5852  023E  0092               	movwf	18	;volatile
  5853  023F                     l1883:
  5854                           
  5855                           ;main.c: 108:     TRISC = 0b10010000;
  5856  023F  3090               	movlw	144
  5857  0240  0093               	movwf	19	;volatile
  5858  0241                     l1885:
  5859                           
  5860                           ;main.c: 111:     SSP1CON1 = 0b00110000;
  5861  0241  3030               	movlw	48
  5862  0242  0143               	movlb	3	; select bank3
  5863  0243  0090               	movwf	16	;volatile
  5864  0244                     l1887:
  5865                           
  5866                           ;main.c: 112:     SSP1STAT = 0b00000000;
  5867  0244  018F               	clrf	15	;volatile
  5868  0245                     l1889:
  5869                           
  5870                           ;main.c: 120:     SSP2STAT = 0x80;
  5871  0245  3080               	movlw	128
  5872  0246  0099               	movwf	25	;volatile
  5873  0247                     l1891:
  5874                           
  5875                           ;main.c: 121:     SSP2CON1 = 0x28;
  5876  0247  3028               	movlw	40
  5877  0248  009A               	movwf	26	;volatile
  5878  0249                     l1893:
  5879                           
  5880                           ;main.c: 122:     SSP2CON3 = 0x00;
  5881  0249  019C               	clrf	28	;volatile
  5882  024A                     l1895:
  5883                           
  5884                           ;main.c: 123:     SSP2ADD = 0x09;
  5885  024A  3009               	movlw	9
  5886  024B  0097               	movwf	23	;volatile
  5887  024C                     l1897:
  5888                           
  5889                           ;main.c: 126:     ADCON0 = 0b10000100;
  5890  024C  3084               	movlw	132
  5891  024D  0141               	movlb	1	; select bank1
  5892  024E  0093               	movwf	19	;volatile
  5893  024F                     l1899:
  5894                           
  5895                           ;main.c: 127:     ADCLKbits.ADCCS = 0x111111;
  5896  024F  0818               	movf	24,w	;volatile
  5897  0250  39C0               	andlw	-64
  5898  0251  3811               	iorlw	17
  5899  0252  0098               	movwf	24	;volatile
  5900  0253                     l1901:
  5901                           
  5902                           ;main.c: 128:     ADPCH = 0b010111;
  5903  0253  3017               	movlw	23
  5904  0254  009E               	movwf	30	;volatile
  5905  0255                     l1903:
  5906                           
  5907                           ;main.c: 129:     ADREFbits.ADPREF = 0x00;
  5908  0255  30FC               	movlw	-4
  5909  0256  059A               	andwf	26,f	;volatile
  5910  0257                     l1905:
  5911                           
  5912                           ;main.c: 133:     PPSLOCK = 0x55;
  5913  0257  3055               	movlw	85
  5914  0258  017D               	movlb	61	; select bank61
  5915  0259  008F               	movwf	15	;volsfr
  5916  025A                     l1907:
  5917                           
  5918                           ;main.c: 134:     PPSLOCK = 0xAA;
  5919  025A  30AA               	movlw	170
  5920  025B  008F               	movwf	15	;volsfr
  5921  025C                     l1909:
  5922                           
  5923                           ;main.c: 135:     PPSLOCKbits.PPSLOCKED = 0x00;
  5924  025C  100F               	bcf	15,0	;volsfr
  5925  025D                     l1911:
  5926                           
  5927                           ;main.c: 139:     SSP1CLKPPS = 0x16;
  5928  025D  3016               	movlw	22
  5929  025E  00C5               	movwf	69	;volatile
  5930  025F                     l1913:
  5931                           
  5932                           ;main.c: 140:     RC6PPS = 0x14;
  5933  025F  3014               	movlw	20
  5934  0260  017E               	movlb	62	; select bank62
  5935  0261  00A6               	movwf	38	;volatile
  5936  0262                     l1915:
  5937                           
  5938                           ;main.c: 141:     SSP1DATPPS = 0x14;
  5939  0262  3014               	movlw	20
  5940  0263  017D               	movlb	61	; select bank61
  5941  0264  00C6               	movwf	70	;volatile
  5942  0265                     l1917:
  5943                           
  5944                           ;main.c: 142:     RC5PPS = 0x15;
  5945  0265  3015               	movlw	21
  5946  0266  017E               	movlb	62	; select bank62
  5947  0267  00A5               	movwf	37	;volatile
  5948  0268                     l1919:
  5949                           
  5950                           ;main.c: 146:     SSP2DATPPS = 0x08;
  5951  0268  3008               	movlw	8
  5952  0269  017D               	movlb	61	; select bank61
  5953  026A  00C9               	movwf	73	;volatile
  5954  026B                     l1921:
  5955                           
  5956                           ;main.c: 147:     RB0PPS = 0x17;
  5957  026B  3017               	movlw	23
  5958  026C  017E               	movlb	62	; select bank62
  5959  026D  0098               	movwf	24	;volatile
  5960  026E                     l1923:
  5961                           
  5962                           ;main.c: 148:     SSP2CLKPPS = 0x09;
  5963  026E  3009               	movlw	9
  5964  026F  017D               	movlb	61	; select bank61
  5965  0270  00C8               	movwf	72	;volatile
  5966  0271                     l1925:
  5967                           
  5968                           ;main.c: 149:     RB1PPS = 0x16;
  5969  0271  3016               	movlw	22
  5970  0272  017E               	movlb	62	; select bank62
  5971  0273  0099               	movwf	25	;volatile
  5972  0274                     l1927:
  5973                           
  5974                           ;main.c: 152:     RXPPS = 0x10;
  5975  0274  3010               	movlw	16
  5976  0275  017D               	movlb	61	; select bank61
  5977  0276  00CB               	movwf	75	;volatile
  5978  0277                     l1929:
  5979                           
  5980                           ;main.c: 153:     RC1PPS = 0x10;
  5981  0277  3010               	movlw	16
  5982  0278  017E               	movlb	62	; select bank62
  5983  0279  00A1               	movwf	33	;volatile
  5984  027A                     l1931:
  5985                           
  5986                           ;main.c: 156:     PPSLOCK = 0x55;
  5987  027A  3055               	movlw	85
  5988  027B  017D               	movlb	61	; select bank61
  5989  027C  008F               	movwf	15	;volsfr
  5990  027D                     l1933:
  5991                           
  5992                           ;main.c: 157:     PPSLOCK = 0xAA;
  5993  027D  30AA               	movlw	170
  5994  027E  008F               	movwf	15	;volsfr
  5995  027F                     l1935:
  5996                           
  5997                           ;main.c: 158:     PPSLOCKbits.PPSLOCKED = 0x00;
  5998  027F  100F               	bcf	15,0	;volsfr
  5999  0280                     l1937:
  6000                           
  6001                           ;main.c: 161:     TX1STA = 0x20;
  6002  0280  3020               	movlw	32
  6003  0281  0142               	movlb	2	; select bank2
  6004  0282  009E               	movwf	30	;volatile
  6005  0283                     l1939:
  6006                           
  6007                           ;main.c: 162:     TX1STAbits.BRGH = 1;
  6008  0283  151E               	bsf	30,2	;volatile
  6009  0284                     l1941:
  6010                           
  6011                           ;main.c: 163:     RC1STA = 0x90;
  6012  0284  3090               	movlw	144
  6013  0285  009D               	movwf	29	;volatile
  6014  0286                     l1943:
  6015                           
  6016                           ;main.c: 164:     BAUD1CON = 0x08;
  6017  0286  3008               	movlw	8
  6018  0287  009F               	movwf	31	;volatile
  6019  0288                     l1945:
  6020                           
  6021                           ;main.c: 165:     SP1BRG = 832;
  6022  0288  3003               	movlw	3
  6023  0289  009C               	movwf	28	;volatile
  6024  028A  3040               	movlw	64
  6025  028B  009B               	movwf	27	;volatile
  6026  028C                     l166:
  6027  028C  0008               	return
  6028  028D                     __end_of_init:
  6029  007E                     btemp	set	126	;btemp
  6030  007E                     wtemp0	set	126
  6031                           
  6032                           	psect	config
  6033                           
  6034                           ;Config register CONFIG1 @ 0x8007
  6035                           ;	External Oscillator mode selection bits
  6036                           ;	FEXTOSC = OFF, Oscillator not enabled
  6037                           ;	Power-up default value for COSC bits
  6038                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  6039                           ;	Clock Out Enable bit
  6040                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  6041                           ;	Clock Switch Enable bit
  6042                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6043                           ;	Fail-Safe Clock Monitor Enable bit
  6044                           ;	FCMEN = ON, FSCM timer enabled
  6045  8007                     	org	32775
  6046  8007  3FEC               	dw	16364
  6047                           
  6048                           ;Config register CONFIG2 @ 0x8008
  6049                           ;	Master Clear Enable bit
  6050                           ;	MCLRE = OFF, MCLR pin function is port defined function
  6051                           ;	Power-up Timer Enable bit
  6052                           ;	PWRTE = ON, PWRT enabled
  6053                           ;	Low-Power BOR enable bit
  6054                           ;	LPBOREN = OFF, ULPBOR disabled
  6055                           ;	Brown-out reset enable bits
  6056                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6057                           ;	Brown-out Reset Voltage Selection
  6058                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  6059                           ;	Zero-cross detect disable
  6060                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  6061                           ;	Peripheral Pin Select one-way control
  6062                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  6063                           ;	Stack Overflow/Underflow Reset Enable bit
  6064                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6065                           ;	Background Debugger
  6066                           ;	DEBUG = OFF, Background Debugger disabled
  6067  8008                     	org	32776
  6068  8008  3FFC               	dw	16380
  6069                           
  6070                           ;Config register CONFIG3 @ 0x8009
  6071                           ;	WDT Period Select bits
  6072                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6073                           ;	WDT operating mode
  6074                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  6075                           ;	WDT Window Select bits
  6076                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  6077                           ;	WDT input clock selector
  6078                           ;	WDTCCS = SC, Software Control
  6079  8009                     	org	32777
  6080  8009  3F9F               	dw	16287
  6081                           
  6082                           ;Config register CONFIG4 @ 0x800A
  6083                           ;	UserNVM self-write protection bits
  6084                           ;	WRT = OFF, Write protection off
  6085                           ;	Scanner Enable bit
  6086                           ;	SCANE = available, Scanner module is available for use
  6087                           ;	Low Voltage Programming Enable bit
  6088                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  6089  800A                     	org	32778
  6090  800A  1FFF               	dw	8191
  6091                           
  6092                           ;Config register CONFIG5 @ 0x800B
  6093                           ;	UserNVM Program memory code protection bit
  6094                           ;	CP = OFF, Program Memory code protection disabled
  6095                           ;	DataNVM code protection bit
  6096                           ;	CPD = OFF, Data EEPROM code protection disabled
  6097  800B                     	org	32779
  6098  800B  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    0
    Data        4
    BSS         41
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      8      53
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S776_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_lcdSendCharacterData
    _lcdSendCharacterData->_lcdI2CProtocol
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _lcdLocateCursor->_lcdSendCommandData
    _lcdInitialize->_lcdSendCommandData
    _lcdSendCommandData->_lcdI2CProtocol
    _lcdI2CProtocol->_i2cProtocolSendData

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9593
                                              4 BANK1      4     4      0
                               _init
                      _lcdInitialize
                    _lcdLocateCursor
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    8622
                                             13 COMMON     1     1      0
                                             77 BANK0      3     3      0
                                              0 BANK1      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8490
                                             69 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2    8154
                                             50 BANK0     19    17      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4917
                                             20 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3294
                                             12 COMMON     1     1      0
                                             12 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1519
                                             11 COMMON     1     0      1
                                              5 BANK0      7     7      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1204
                                              8 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0     436
                                              7 COMMON     1     1      0
               _lcdSendCharacterData
 ---------------------------------------------------------------------------------
 (6) _lcdSendCharacterData                                 3     3      0     414
                                              4 COMMON     3     3      0
                     _lcdI2CProtocol
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1085
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdLocateCursor                                      3     2      1     534
                                              6 COMMON     3     2      1
                 _lcdSendCommandData
 ---------------------------------------------------------------------------------
 (1) _lcdInitialize                                        1     1      0     414
                                              6 COMMON     1     1      0
                 _lcdSendCommandData
 ---------------------------------------------------------------------------------
 (2) _lcdSendCommandData                                   2     2      0     414
                                              4 COMMON     2     2      0
                     _lcdI2CProtocol
 ---------------------------------------------------------------------------------
 (7) _lcdI2CProtocol                                       3     1      2     392
                                              1 COMMON     3     1      2
                _i2cProtocolSendData
                   _i2cProtocolStart
                    _i2cProtocolStop
 ---------------------------------------------------------------------------------
 (8) _i2cProtocolStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2cProtocolStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2cProtocolSendData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _lcdInitialize
     _lcdSendCommandData
       _lcdI2CProtocol
         _i2cProtocolSendData
         _i2cProtocolStart
         _i2cProtocolStop
   _lcdLocateCursor
     _lcdSendCommandData
       _lcdI2CProtocol
         _i2cProtocolSendData
         _i2cProtocolStart
         _i2cProtocolStop
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _lcdSendCharacterData
                   _lcdI2CProtocol
                     _i2cProtocolSendData
                     _i2cProtocolStart
                     _i2cProtocolStop
             _fputs
               _fputc
                 _putch
                   _lcdSendCharacterData
                     _lcdI2CProtocol
                       _i2cProtocolSendData
                       _i2cProtocolStart
                       _i2cProtocolStop
             _strlen
         _fputc
           _putch
             _lcdSendCharacterData
               _lcdI2CProtocol
                 _i2cProtocolSendData
                 _i2cProtocolStart
                 _i2cProtocolStop
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      8      35       7       66.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0      93      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0      93      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 08 18:07:43 2021

      __end_of_i2cProtocolStop 000F                             l11 0FCF                             l20 000E  
                           l13 0FD4                             l14 0FD5                             l23 0FDC  
                           l40 0FF0                             l25 0FE1                             l17 0008  
                           l26 0FE2                             l34 0031                             l19 000D  
                           l43 0126                             l52 0FC4                             l37 0FFF  
                           l49 001D            ___wmul@multiplicand 0072       __end_of_i2cProtocolStart 0FD6  
                          l320 00B1                            l166 028C                            l318 009D  
                          l158 0172                            l431 0414                            l432 0425  
                          l418 0515                            l419 0526                            l812 01EE  
                          l820 06BF                            l821 06C8                            l815 0210  
                          l816 021E                            l905 033B                            l817 022A  
                          l825 06E5                            l826 06FD                            l931 01D1  
                          l843 07E3                            l908 005F                            l916 00D2  
                          l860 0675                            l829 076D                            l781 0047  
                          l871 0092                            l945 0078                            l874 0092  
                          l939 00FA                            l867 0157                            l892 02CA  
                          u920 0FD4                            u921 0FD3                            u930 000D  
                          u931 000C                            u940 0FE1                            u941 0FE0  
                          u950 0197                            u951 0196                            u960 019C  
                          u961 019B                            u970 01AB                            u971 01AA  
                          u980 01C9                            u981 01C8                            u990 00FA  
                          u991 00F9                            u985 01C5                            _abs 0079  
                          _pad 01D2                            wreg 0009                _lcdLocateCursor 000F  
                         ?_abs 0073                           l2015 02DB                           l1501 002E  
                         l1601 0347                           l1505 0FE4                           l1521 01AB  
                         l1513 0192                           l1611 03A1                           l1603 0368  
                         l1523 01C9                           l1515 0197                           l1531 00E6  
                         l1621 03E3                           l1613 03A9                           l1605 0372  
                         l1509 0FC0                           l1517 019C                           l1533 00EB  
                         l1541 0072                           l1701 0788                           l1551 00A2  
                         l1615 03AD                           l1623 03F1                           l1607 0391  
                         l1519 01A1                           l1527 00D5                           l1535 0061  
                         l1631 01E2                           l1711 07B4                           l1703 0795  
                         l1553 00A7                           l1545 0093                           l1561 0427  
                         l1625 03F6                           l1617 03B1                           l1609 039E  
                         l1529 00D8                           l1537 0066                           l1641 0202  
                         l1633 01E7                           l1713 07B9                           l1721 07D0  
                         l1705 07A3                           l1801 05BF                           l1491 0FD9  
                         l1555 00AD                           l1547 0095                           l1651 0048  
                         l1731 0299                           l1571 047F                           l1563 0431  
                         l1619 03D3                           l1539 006A                           l1643 0215  
                         l1635 01EC                           l1627 01D4                           l1715 07BF  
                         l1707 07A8                           l1803 05D1                           l1901 0253  
                         l1485 0FCB                           l1493 001F                           l1549 0099  
                         l1661 00CA                           l1741 02BF                           l1733 02A3  
                         l1725 028D                           l1581 04A5                           l1573 0489  
                         l1565 0452                           l1637 01F1                           l1629 01D9  
                         l1717 07C4                           l1709 07AF                           l1813 061D  
                         l1805 05E2                           l1911 025D                           l1903 0255  
                         l1487 0004                           l1495 0022                           l1663 00CB  
                         l1655 00B2                           l1751 0303                           l1743 02C6  
                         l1735 02B7                           l1727 0293                           l1591 04E4  
                         l1583 04A9                           l1575 0496                           l1567 045C  
                         l1559 0426                           l1647 0079                           l1639 01FD  
                         l1719 07C8                           l1671 069B                           l1831 066B  
                         l1815 062E                           l1823 0647                           l1807 05EA  
                         l1921 026B                           l1913 025F                           l1905 0257  
                         l1489 0FD7                           l1497 0026                           l1657 00B4  
                         l1761 0337                           l1745 02CF                           l1737 02B8  
                         l1729 0297                           l1585 04B1                           l1577 0499  
                         l1593 04F2                           l1569 047B                           l1649 0086  
                         l1681 06ED                           l1673 06A1                           l1825 064F  
                         l1817 0636                           l1809 0603                           l1931 027A  
                         l1923 026E                           l1915 0262                           l1907 025A  
                         l1499 002A                           l1659 00BB                           l1755 031F  
                         l1747 02E3                           l1595 04F7                           l1587 04D3  
                         l1579 04A1                           l1691 070A                           l1683 06F3  
                         l1675 06C4                           l1667 0678                           l1819 0641  
                         l1771 0529                           l1851 014F                           l1843 0129  
                         l1941 0284                           l1933 027D                           l1925 0271  
                         l1917 0265                           l1909 025C                           l1837 0FF2  
                         l1861 011E                           l1757 0325                           l1589 04E3  
                         l1597 033C                           l1693 0738                           l1685 06F8  
                         l1677 06D7                           l1669 0688                           l1781 055D  
                         l1773 053A                           l1829 0652                           l1845 012D  
                         l1943 0286                           l1935 027F                           l1927 0274  
                         l1919 0268                           l1871 022B                           l1839 0FFB  
                         l1863 0122                           l1855 00FB                           l1759 032B  
                         l1599 033D                           l1695 073C                           l1687 0702  
                         l1679 06DD                           l1783 0565                           l1791 057D  
                         l1775 0542                           l1847 0131                           l1945 0288  
                         l1937 0280                           l1929 0277                           l1881 023D  
                         l1873 0236                           l1857 0113                           l1697 0740  
                         l1689 0705                           l1793 058D                           l1785 0572  
                         l1777 0547                           l1849 0145                           l1939 0283  
                         l1891 0247                           l1883 023F                           l1875 0238  
                         l1859 011A                           l1867 0010                           l1699 077B  
                         l1795 0595                           l1787 0576                           l1779 054B  
                         l1947 0032                           l1893 0249                           l1885 0241  
                         l1877 0239                           l1789 0577                           l1949 0037  
                         l1981 0176                           l1973 0158                           ?_pad 002C  
                         l1895 024A                           l1887 0244                           l1879 023B  
                         l1799 05B9                           l1983 0183                           l1975 015E  
                         l1897 024C                           l1889 0245                           l1977 016A  
                         l1899 024F                           l1979 0170   __size_of_i2cProtocolSendData 000D  
                         _ADGO 0498                           STR_1 1000                           u1000 0072  
                         u1001 0071                           u1010 0099                           u1011 0098  
                         u1100 0496                           u1101 0495                           u1110 04A9  
                         u1111 04A8                           u1040 00AD                           u1120 04D3  
                         u1200 039E                           u1041 00AC                           u1025 009E  
                         u1121 04D2                           u1201 039D                           u1130 04F2  
                         u1050 0431                           u1210 03B1                           u1035 00A3  
                         u1131 04F1                           u1051 0430                           u1211 03B0  
                         u1140 04F7                           u1220 03D3                           u1300 0086  
                         u1141 04F6                           u1125 04CF                           u1221 03D2  
                         u1301 0085                           u1310 0058                           u1070 045C  
                         u1230 03F1                           u1311 0056                           u1071 045B  
                         u1231 03F0                           u1320 0059                           u1240 03F6  
                         u1160 0347                           u1400 06D7                           u1241 03F5  
                         u1225 03CF                           u1161 0346                           u1305 0082  
                         u1401 06D6                           u1330 00BB                           u1090 0486  
                         u1410 06F3                           u1331 00BA                           u1411 06F2  
                         u1340 00CA                           u1180 0372                           u1260 01D9  
                         u1500 07BF                           u1420 06F8                           u1341 00C9  
                         u1181 0371                           u1261 01D8                           u1501 07BE  
                         u1421 06F7                           u1405 06D3                           u1510 02A3  
                         u1270 01E7                           u1430 077B                           u1350 0693  
                         u1511 02A2                           u1271 01E6                           u1431 077A  
                         u1351 0691                           u1520 02B7                           u1280 0210  
                         u1440 0788                           u1360 0694                           u1600 0576  
                         u1521 02B6                           u1281 020F                           u1441 0787  
                         u1601 0575                           u1530 02C5                           u1290 0215  
                         u1450 0795                           u1370 06A1                           u1610 05B2  
                         u1531 02C4                           u1291 0214                           u1451 0794  
                         u1435 0777                           u1371 06A0                           u1611 05B0  
                         u1540 0318                           u1460 07A3                           u1620 05B3  
                         u1541 0316                           u1285 020C                           u1461 07A2  
                         u1550 0319                           u1470 07A8                           u1390 06C4  
                         u1630 05BF                           u1471 07A7                           u1455 0791  
                         u1391 06C3                           u1631 05BE                           u1560 0325  
                         u1480 07AF                           u1640 05D1                           u1561 0324  
                         u1481 07AE                           u1465 079F                           u1641 05D0  
                         u1570 032B                           u1490 07B4                           u1650 05E2  
                         u1810 0176                           u1571 032A                           u1491 07B3  
                         u1651 05E1                           u1811 0175                           u1660 062E  
                         u1580 053A                           u1661 062D                           u1581 0539  
                         u1590 055D                           u1670 014F                           u1591 055C  
                         u1671 014E                           u1827 0164                           u1685 0013  
                         u1837 017E                           u1847 0116                           u1857 0FFC  
           lcdI2CProtocol@data 0072                           abs@a 0073                           _dbuf 00A9  
                         _atoi 028D                           _main 0158                           _dtoa 0676  
                         _init 022B                           _prec 00A4                           _nout 00A0  
                         pad@i 002F                           pad@p 002D                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           pad@w 0031  
                         btemp 007E                           start 0002       lcdSendCharacterData@data 0076  
           _lcdSendCommandData 0FF1                          ??_abs 0075                          ??_pad 007C  
              __end_of___aodiv 0527                          ?_atoi 0076                          ?_main 0070  
                        ?_dtoa 0034                __end_of___aomod 0426                          ?_init 0070  
                        _ADPCH 009E                          _ADRES 008C                          _LATB0 00B8  
                        _LATB1 00B9            ?_lcdSendCommandData 0070                          _LATB2 00BA  
                        _LATB3 00BB                   vfpfcnvrt@fmt 0052                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _RXPPS 1ECB  
       ??_lcdSendCharacterData 0074                          _flags 00A6                          _fputc 0192  
                        _fputs 00D3                __end_of_isdigit 0060                          atoi@n 0027  
                        pad@fp 0033                          atoi@s 0076                          _width 00A2  
                        _putch 0FBF                          dtoa@d 0034                          dtoa@i 0050  
                        dtoa@n 0048                          dtoa@p 0041                          dtoa@s 0046  
                        dtoa@w 0044                __end_of_isspace 00D3                          status 0003  
                        wtemp0 007E           ??_lcdSendCommandData 0074                __initialization 07E4  
                 __end_of_atoi 033C                   __end_of_main 0192                   __end_of_dtoa 07E4  
                 __end_of_init 028D               ?_i2cProtocolStop 0070                         ??_atoi 0078  
                       ??_main 00CD                         ??_dtoa 003C                         ??_init 0070  
      __end_of_lcdLocateCursor 001E                         _ADCON0 0093               ??_lcdI2CProtocol 0073  
                       ?_fputc 0078                         ?_fputs 007B                         _ANSELA 1F38  
                       ?_putch 0070                         _ANSELB 1F43                         _ANSELC 1F4E  
                       _RB0PPS 1F18                         _RB1PPS 1F19                         _RC1PPS 1F21  
                       _RC1STA 011D                         _RC5PPS 1F25                         _RC6PPS 1F26  
                       _SP1BRG 011B                         u106lld 0450                         u115lld 0515  
                       u108lld 047B                         u125lld 0414                         u117lld 0366  
                       u119lld 0391                         u138lld 06BF                         _SSP2IF 387A  
                       _TX1STA 011E                   vfprintf@cfmt 006B                      ??___aodiv 0070  
                    ??___aomod 0070                         ___wmul 0093                    forward1@cnt 00A8  
                       _printf 0032                         pad@buf 002C                         dtoa@fp 0043  
                       _strlen 0060                         fputc@c 0078                         fputs@c 0028  
                       fputs@i 0029                         fputs@s 002B                      ??_isdigit 0072  
                    ??_isspace 0072               __end_of_vfprintf 0158        __end_of__initialization 07FD  
               __pcstackCOMMON 0070                   __pidataBANK1 0FBB            _i2cProtocolSendData 0FD6  
                __end_of_fputc 01D2                  __end_of_fputs 00FB                  __end_of_putch 0FC5  
             ?_lcdLocateCursor 0076          __end_of_lcdInitialize 0127              ?_i2cProtocolStart 0070  
           ??_i2cProtocolStart 0070                        ??_fputc 0020                        ??_fputs 0025  
         ?_i2cProtocolSendData 0070                        ??_putch 0077                     __pbssBANK1 00A0  
                   __pmaintext 0158                        ?___wmul 0070                        ?_printf 00C9  
                      ?_strlen 0070             __size_of_vfpfcnvrt 014F                        _SSP2ADD 0197  
                      _PPSLOCK 1E8F                        _SSP2BUF 0196          ??_i2cProtocolSendData 0070  
                    _ADCLKbits 0098          lcdI2CProtocol@address 0073                      _ADREFbits 009A  
                      ___aodiv 0426                        ___aomod 033C                __size_of___wmul 001F  
                    ?_vfprintf 0065        i2cProtocolSendData@data 0070                        __ptext1 0032  
                      __ptext2 0127                        __ptext3 0527                        __ptext4 0676  
                      __ptext5 01D2                        __ptext6 0060                        __ptext7 00D3  
                      __ptext8 0192                        __ptext9 0FBF                __size_of_printf 0016  
              __size_of_strlen 0019                   __size_of_abs 001A                   __size_of_pad 0059  
                      _isdigit 0048                        _isspace 00B2                        atoi@neg 0020  
__size_of_lcdSendCharacterData 000E                        clrloop0 0FC6           end_of_initialization 07FD  
                      fputc@fp 007A                        fputs@fp 007B    __size_of_lcdSendCommandData 000F  
            __end_of_vfpfcnvrt 0676                     ??_vfprintf 0068                        strlen@a 0073  
                      strlen@s 0074       __size_of_i2cProtocolStop 000B      lcdSendCommandData@command 0075  
               putch@character 0077                    vfpfcnvrt@ap 0053                    vfpfcnvrt@fp 0064  
                  vfpfcnvrt@ll 005A                 __end_of___wmul 00B2                 __end_of_printf 0048  
               __end_of_strlen 0079            start_initialization 07E4                    __end_of_abs 0093  
                  __end_of_pad 022B      __size_of_i2cProtocolStart 000B        __size_of_lcdI2CProtocol 0014  
      lcdI2CProtocol@cont_code 0071                    vfprintf@fmt 0065                       ??___wmul 0074  
                  __pdataBANK1 00D1                       ??_printf 007D                       ??_strlen 0072  
                    ___latbits 0004                  __pcstackBANK0 0020                  __pcstackBANK1 00C9  
             ___aodiv@dividend 0028       __size_of_lcdLocateCursor 000F              ??_i2cProtocolStop 0070  
       __size_of_lcdInitialize 002C                 forward1@F12394 00D1                       ?___aodiv 0020  
                     ?___aomod 0020               ___aodiv@quotient 0073              __size_of_vfprintf 0031  
                     _BAUD1CON 011F    __end_of_i2cProtocolSendData 0FE3                       ?_isdigit 0070  
                     ?_isspace 0070                 __size_of_fputc 0040                 __size_of_fputs 0028  
               __size_of_putch 0006                 ___wmul@product 0074                      clear_ram0 0FC5  
 __end_of_lcdSendCharacterData 0FF1                       _SSP1CON1 0190                       _SSP2CON1 019A  
                     _SSP2CON3 019C                       _SSP1STAT 018F                       _SSP2STAT 0199  
                    _vfpfcnvrt 0527              ___wmul@multiplier 0070                  _lcdInitialize 00FB  
   __end_of_lcdSendCommandData 1000               _i2cProtocolStart 0FCB              ??_lcdLocateCursor 0077  
               _lcdI2CProtocol 001E                     vfprintf@ap 0067                     vfprintf@fp 006A  
             __size_of___aodiv 0101               __size_of___aomod 00EA                     ?_vfpfcnvrt 0052  
              ___aodiv@divisor 0020                ___aodiv@counter 0071                 ?_lcdInitialize 0070  
                     _atoi$885 0022                       _atoi$886 0026                       _atoi$887 0024  
             __size_of_isdigit 0018                       _dtoa$850 003F               __size_of_isspace 0021  
                     __ptext10 0FE3                       __ptext11 0079                       __ptext20 0FF1  
                     __ptext12 033C                       __ptext21 001E                       __ptext13 0426  
                     __ptext22 0004                       __ptext14 028D                       __ptext23 0FCB  
                     __ptext15 00B2                       __ptext24 0FD6                       __ptext16 0048  
                     __ptext25 022B                       __ptext17 0093                       __ptext18 000F  
                     __ptext19 00FB                   _SSP2CON2bits 019B                    _OSCCON1bits 088D  
       __end_of_lcdI2CProtocol 0032                  __size_of_atoi 00AF                  __size_of_main 003A  
                __size_of_dtoa 016E                  __size_of_init 0062                       _vfprintf 0127  
                     main@data 00CF                      printf@fmt 00C9                    _isspace$903 0074  
             ___aomod@dividend 0028                _i2cProtocolStop 0004                       isdigit@c 0070  
         _lcdSendCharacterData 0FE3                       isspace@c 0070                ?_lcdI2CProtocol 0071  
                  _PPSLOCKbits 1E8F                     _OSCFRQbits 0893                       printf@ap 006F  
         lcdLocateCursor@pos_x 0078           lcdLocateCursor@pos_y 0076                ___aomod@divisor 0020  
                  ??_vfpfcnvrt 0054                ___aomod@counter 0071                  _vfpfcnvrt$865 0062  
              ??_lcdInitialize 0076                  __pstringtext1 1000                  __pstringtext2 0000  
                   _SSP1DATPPS 1EC6                     _SSP2DATPPS 1EC9                     _SSP1CLKPPS 1EC5  
                   _SSP2CLKPPS 1EC8          ?_lcdSendCharacterData 0070                     _TX1STAbits 011E  
                 ___aodiv@sign 0072                   ___aomod@sign 0072  
